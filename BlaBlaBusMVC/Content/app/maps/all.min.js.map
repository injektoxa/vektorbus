{"version":3,"sources":["app.module.js","app.config.js","app.animations.js","core/core.module.js","core/checkmark/checkmark.filter.js","core/client/client.module.js","core/client/client.service.js","core/clientTrip/clientTrip.module.js","core/clientTrip/clientTrip.service.js","core/trip/trip.module.js","core/trip/trip.service.js","core/trip/trip-cash.service.js","core/driver/driver.module.js","core/driver/driver.service.js","core/bus/bus.module.js","core/bus/bus.service.js","core/city/city.module.js","core/city/city.service.js","core/agent/agent.module.js","core/agent/agent.service.js","core/agentReport/agentReport.module.js","core/agentReport/agentReport.service.js","core/driverReport/driverReport.module.js","core/driverReport/driverReport.service.js","core/authentication/authentication.module.js","core/authentication/authentication.service.js","core/authentication/authInterceptor.service.js","core/manageAccount/manageAccount.module.js","core/manageAccount/manageAccount.service.js","clientTrip-list/clientTrip-list.module.js","clientTrip-list/clientTrip-list.component.js","client-detail/client-detail.module.js","client-detail/client-detail.component.js","trip-list/trip-list.module.js","trip-list/trip-list.component.js","driver-list/driver-list.module.js","driver-list/driver-list.component.js","driver-list/driver-crud/driver-crud.module.js","driver-list/driver-crud/driver-crud.component.js","bus-list/modal/modalBus.module.js","bus-list/modal/modalBus.component.js","bus-list/bus-list.module.js","bus-list/bus-list.component.js","agent-list/agent-list.module.js","agent-list/agent-list.component.js","agent-list/modal/modalAgent.module.js","agent-list/modal/modalAgent.component.js","reports/reports.module.js","reports/agent-reports.component.js","reports/driver-reports.component.js","client-list/client-list.module.js","client-list/client-list.component.js","client-list/modal/modalClient.module.js","client-list/modal/modalClient.component.js","client-list/modal/modalClientTrips.component.js","cities-list/cities-list.module.js","cities-list/cities-list.component.js","pdfMaker/pdfMaker.module.js","pdfMaker/pdfMaker.service.js","authentication/signup/signup.module.js","authentication/signup/signup.component.js","authentication/signin/signin.module.js","authentication/signin/signin.component.js","navbar/navbar.module.js","navbar/navbar.component.js","Derectives/compare-passwords.derective.js","manage-account/manage-account.module.js","manage-account/manage-account.component.js","google-maps/google-maps.module.js","google-maps/google-maps.service.js","Derectives/loading.derective.js"],"names":["angular","module","constant","ClientAccessRoles","BussesAccessRoles","AllRoles","config","$locationProvider","$routeProvider","authConstants","$httpProvider","$qProvider","interceptors","push","defaults","useXDomain","headers","common","html5Mode","errorOnUnhandledRejections","when","template","acceptedRoles","allowAnonymus","templateUrl","otherwise","run","$rootScope","$location","authService","$on","event","next","currentRole","authData","role","indexOf","isAuth","path","animation","animateIn","element","className","done","css","display","position","top","left","animate","wasCanceled","stop","animateOut","addClass","removeClass","filter","input","factory","$resource","query","method","isArray","add","update","remove","params","Id","get","expenseSumFun","acc","expense","Cost","countIncomes","trip","expenses","this","countTotalExpenses","incomes","countDriverCashBox","compolsuryTotal","unexpectedTotal","agentExpensesTotal","tripClients","reduce","client","Price","countAgentExpenses","AgentPrice","compulsoryExpensesSum","compulsoryExpenses","unexpectedExpensesSum","unexpectedExpenses","agentExpensesSum","service","id","dateFrom","dateTo","authDataResourceKey","localStorageService","$http","$q","authServiceFactory","observerCallbacks","name","registerObserverCallback","callback","notifyObservers","forEach","saveRegistration","registration","logOut","post","then","response","login","loginData","data","email","password","deferred","defer","Content-Type","set","token","access_token","resolve","err","status","reject","promise","UpdateAuthData","previousData","newName","$injector","authInterceptorServiceFactory","request","Authorization","responseError","rejection","manageAccountFactory","updateAccount","accountData","put","getAccountInfo","component","controller","ClientTrip","$scope","City","Agent","that","clientFilter","clients","cities","agents","orderProp","removeFromTrip","index","$parent","$ctrl","splice","addToTrip","console","log","clientFilterAction","length","clientTrips","filterThrottled","_","debounce","$watch","$routeParams","Client","self","clientId","Trip","Bus","Driver","$uibModal","PdfMaker","$filter","googleMapsService","tripCashService","$timeout","showAddTripForm","isEditMode","dateNow","Date","mapCenterLatLng","google","maps","LatLng","startDate","startTime","endDate","endTime","trips","buses","drivers","dateFormat","dateTimeFormat","dateOptions","minDate","showWeeks","startingDay","timeOptions","minuteStep","startDatePopup","opened","startDateOpen","endDatePopup","endDateOpen","showAddForm","submitted","form","$setValidity","$invalid","create","joinTripDateAndTime","createdTrip","clearTripModel","updatedTrip","$setPristine","$setUntouched","$broadcast","date","getFullYear","getMonth","getDate","getHours","getMinutes","arrivalDate","openDriversList","modalOptions","backdrop","size","modalInstance","open","result","createPDF","directionLoadingFaled","createTripReportPdf","getGoogleMapsImage","cityFrom","Name","cityTo","waypoints","polyline","base64Img","tableBody","text","style","map","i","toString","Phone","To","From","IsStayInBus","HasMinorChild","HasDisability","AgentName","compolsuryExpenseTable","unexpectedExpenseTable","Comment","bus","FriendlyName","RegistrationNumber","driver","FullName","fileName","concat","options","docDefinition","pageOrientation","fontSize","content","columns","width","table","headerRows","body","image","createAndDownload","editTrip","disableEditMode","delete","msg","confirm","deletedTrip","e","error","errorMessage","Message","alert","removeExpense","expensesArray","addCompolsoryExpense","cost","comment","compulsoryNewCost","compulsoryNewComment","addUnexpectedExpens","unexpectedNewCost","unexpectedNewComment","getDriverCashbox","getIncomes","getAgentExpenses","mapInitialized","trigger","directionsDisplay","DirectionsRenderer","setMap","getTripWaypoints","setDirections","routes","overview_polyline","origin","destination","addToWaypoints","location","some","wp","stopover","optimizeWaypoints","$watchCollection","newValue","previousValue","bindings","close","dismiss","addDriverBlockVisible","addNewClass","$onInit","closeModal","$value","editDriver","showAddDriverBlock","deleteDriver","maxPhotoWidth","maxPhotoHeight","cancel","save","editedDriver","createdDriver","deletedDriver","$","attr","Photo","resizeBase64Img","maxWidth","maxHeight","canvas","document","createElement","Deferred","load","height","context","getContext","drawImage","toDataURL","change","files","fr","FileReader","onload","target","newImg","src","replace","readAsDataURL","headerTitle","ok","addBus","createdBus","clearBus","editBus","deleteBus","deletedBus","agent","addAgent","createdAgent","clearAgent","editAgent","deleteAgent","deletedAgent","AgentReport","pdfMaker","maxDate","reports","reportTitle","totalTitle","totalPrice","reportIsShowing","onGetReports","AgentCompensation","createReport","report","TripDate","CityFrom","CityTo","BusInfo","DriverInfo","ClientsCount","datePeriod","DriverReport","DriverReports","DriverName","totalIncomes","getTotalIncomes","isMultipleDriversMode","Object","keys","TotalIncomes","getReportsPdfTable","driverName","title","CompulsoryExpenses","UnexpectedExpenses","DriverCashBox","generateReport","driversName","driverFileNaming","addClient","clearClient","editClient","deleteClient","deletedClient","clientInfo","info","message","createdClient","errors","key","ModelState","join","getClienPrice","found","ClientId","getClienAdditionalExpenses","AdditionalExpenses","getClientAgent","clientTrip","find","agentName","showAddCityForm","choosedPlace","autocompleteOptions","componentRestrictions","country","types","saveCity","cityName","createdCity","removeCity","cityId","deletedCity","el","setCityFromAutocomplete","place","city","pdfMake","createPdf","download","createAndOpen","savedSuccessfully","confirmPassword","signUp","formValid","error_description","BusesAccessRoles","updateAuthData","hasRole","allowedRoles","directive","require","scope","otherModelValue","link","attributes","ngModel","$validators","compareTo","modelValue","$validate","manageAccountService","updateSuccefull","Email","accounData","googleMapsFactory","directionsService","DirectionsService","googleMapsServiceBase","orderedWaypoints","route","travelMode","TravelMode","DRIVING","waypoint_order","order","url","covertWaypointsToUrlParams","convertImgToDataURL","urlParams","getUrlParam","color","waypoint","img","Image","crossOrigin","dataURL","ctx","restrict","elm","attrs","isLoading","pendingRequests","show","hide"],"mappings":"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","file":"../all.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('VektorApp', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ui.bootstrap',\r\n  'core',\r\n  'pdfMaker',\r\n  'clientDetail',\r\n  'clientList',\r\n  'clientTripList',\r\n  'tripList',\r\n  'busList',\r\n  'modalBus',\r\n  'driverList',\r\n  'driverCrud',\r\n  'citiesList',\r\n  'agentList',\r\n  'modalAgent',\r\n  'modalClient',\r\n  'reports',\r\n  'signUp',\r\n  'signIn',\r\n  'LocalStorageModule',\r\n  'navBar',\r\n  'manageAccount',\r\n  'googleMaps'\r\n]);","'use strict';\r\n\r\nangular.\r\n    module('VektorApp')\r\n    .constant('authConstants',\r\n    {\r\n        ClientAccessRoles: ['Driver'],\r\n        BussesAccessRoles: ['Driver', 'Partner'],\r\n        AllRoles: ['User', 'Driver', 'Partner']\r\n    })\r\n    .config(['$locationProvider', '$routeProvider', 'authConstants', '$httpProvider', '$qProvider',\r\n        function config($locationProvider, $routeProvider, authConstants, $httpProvider, $qProvider) {\r\n\r\n            $httpProvider.interceptors.push('authInterceptorService');\r\n\r\n            //allow CORS\r\n            $httpProvider.defaults.useXDomain = true;\r\n            delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n\r\n            $locationProvider.html5Mode(true);\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n\r\n            $routeProvider.\r\n                when('/clients',\r\n                {\r\n                    template: '<client-list></client-list>',\r\n                    acceptedRoles: authConstants.ClientAccessRoles\r\n                }).\r\n                when('/clients/:clientId',\r\n                {\r\n                    template: '<client-detail></client-detail>'\r\n                }).\r\n                when('/trips',\r\n                {\r\n                    template: '<trip-list></trip-list>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                when('/buses',\r\n                {\r\n                    template: '<bus-list></bus-list>',\r\n                    acceptedRoles: authConstants.BussesAccessRoles\r\n                }).\r\n                when('/cities',\r\n                {\r\n                    template: '<cities-list></cities-list>'\r\n                }).\r\n                when('/signup',\r\n                {\r\n                    template: '<sign-up></sign-up>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/login',\r\n                {\r\n                    template: '<sign-in></sign-in>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/agents',\r\n                {\r\n                    template: '<agent-list></agent-list>'\r\n                }).\r\n                when('/agentReports',\r\n                {\r\n                    template: '<agent-reports></agent-reports>'\r\n                }).\r\n                when('/driverReports',\r\n                {\r\n                    template: '<driver-reports></driver-reports>'\r\n                }).\r\n                when('/access-forbidden',\r\n                {\r\n                    templateUrl: 'Content/app/access-forbidden.html',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/manageAccount',\r\n                {\r\n                    template: '<manage-account></manage-account>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                otherwise('/trips');\r\n        }\r\n    ]).run(['$rootScope', '$location', 'AuthService',\r\n        function ($rootScope, $location, authService) {\r\n            $rootScope.$on('$routeChangeStart',\r\n                function (event, next) {\r\n                    var currentRole = authService.authData.role; \r\n                    next.acceptedRoles = next.acceptedRoles ? next.acceptedRoles : [];\r\n\r\n                    //if current user is not authenticated or his role is not accepted to view particular route\r\n                    if (next.allowAnonymus) {\r\n                        return true;\r\n                    }\r\n\r\n                    if (currentRole != \"Admin\" && next.acceptedRoles.indexOf(currentRole) == -1) {\r\n                        if (!authService.authData.isAuth) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $location.path('/access-forbidden');\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n    ]);","'use strict';\r\n\r\nangular.\r\n  module('VektorApp').\r\n  animation('.client', function clientAnimationFactory() {\r\n    return {\r\n      addClass: animateIn,\r\n      removeClass: animateOut\r\n    };\r\n\r\n    function animateIn(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: 500,\r\n        left: 0\r\n      }).animate({\r\n        top: 0\r\n      }, done);\r\n\r\n      return function animateInEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n\r\n    function animateOut(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n      }).animate({\r\n        top: -500\r\n      }, done);\r\n\r\n      return function animateOutEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core` module\r\nangular.module('core', ['core.client', 'core.trip', 'core.bus', 'core.city', 'core.manageAccount',\r\n    'core.driver', 'core.agent', 'core.agentReport', 'core.driverReport', 'core.clientTrip', 'core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('core').\r\n  filter('checkmark', function() {\r\n    return function(input) {\r\n      return input ? '\\u2713' : '\\u2718';\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core.client` module\r\nangular.module('core.client', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.client').\r\n  factory('Client', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clients/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.clientTrip` module\r\nangular.module('core.clientTrip', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.clientTrip').\r\n  factory('ClientTrip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clientTrips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.trip', ['ngResource']);","angular.\r\n  module('core.trip').\r\n  factory('Trip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/trips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            get: {\r\n                method: 'GET',\r\n                params: { Id: 'id' }\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE'\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nconst expenseSumFun = (acc, expense) => acc + expense.Cost;\r\n\r\nangular.module('core.trip')\r\n    .factory('tripCashService', function () {\r\n        return {\r\n            countIncomes: function (trip) {\r\n                var expenses = this.countTotalExpenses(trip);\r\n                var incomes = this.countDriverCashBox(trip);\r\n\r\n                return incomes - (expenses.compolsuryTotal + expenses.unexpectedTotal + expenses.agentExpensesTotal);\r\n            },\r\n\r\n            countDriverCashBox: function (trip) {\r\n                return trip.tripClients.reduce((acc, client) => acc + client.Price, 0);\r\n            },\r\n\r\n            countAgentExpenses: function (trip) {\r\n                return trip.tripClients.reduce((acc, client) => acc + client.AgentPrice, 0);\r\n            },\r\n\r\n            countTotalExpenses: function (trip) {\r\n                var compulsoryExpensesSum = trip.compulsoryExpenses.reduce(expenseSumFun, 0);\r\n                var unexpectedExpensesSum = trip.unexpectedExpenses.reduce(expenseSumFun, 0);\r\n\r\n                var agentExpensesSum = this.countAgentExpenses(trip);\r\n\r\n                return {\r\n                    compolsuryTotal: compulsoryExpensesSum,\r\n                    unexpectedTotal: unexpectedExpensesSum,\r\n                    agentExpensesTotal: agentExpensesSum\r\n                };\r\n            }\r\n        }\r\n    });\r\n","'use strict';\r\n\r\nangular.module('core.driver', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.driver').\r\n  factory('Driver', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/drivers/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.bus` module\r\nangular.module('core.bus', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.bus').\r\n  factory('Bus', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/buses/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.city', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.city').\r\n  service('City', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/Cities/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agent` module\r\nangular.module('core.agent', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.agent').\r\n  factory('Agent', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agents/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agentReport` module\r\nangular.module('core.agentReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.agentReport').\r\n  factory('AgentReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agentReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.driverReport` module\r\nangular.module('core.driverReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.driverReport').\r\n  factory('DriverReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/driverReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.authentication', []);","'use strict';\r\n\r\nconst authDataResourceKey = \"authorizationData\";\r\n\r\nangular.\r\n  module('core.authentication').\r\n      factory('AuthService', ['localStorageService', '$http', '$q', function (localStorageService, $http, $q) {\r\n          var authServiceFactory = {};\r\n          var observerCallbacks = [];\r\n\r\n          var authData = localStorageService.get(authDataResourceKey);\r\n          authServiceFactory.authData = {\r\n              isAuth: authData != null,\r\n              name: authData ? authData.name : \"\",\r\n              role: authData ? authData.role : \"guest\",\r\n          };\r\n\r\n          authServiceFactory.registerObserverCallback = function (callback) {\r\n              observerCallbacks.push(callback);\r\n          };\r\n\r\n          //call this when you know that authData has been changed\r\n          var notifyObservers = function () {\r\n              angular.forEach(observerCallbacks, function (callback) {\r\n                  callback();\r\n              });\r\n          }\r\n\r\n          authServiceFactory.saveRegistration = function (registration) {\r\n              authServiceFactory.logOut();\r\n\r\n              return $http.post('/api/Account/Register', registration).then(function (response) {\r\n                  return response;\r\n              });\r\n          };\r\n\r\n          authServiceFactory.logOut = function () {\r\n              localStorageService.remove(authDataResourceKey);\r\n\r\n              authServiceFactory.authData.isAuth = false;\r\n              authServiceFactory.authData.role = \"\";\r\n              authServiceFactory.authData.name = \"\";\r\n\r\n              notifyObservers();\r\n          };\r\n\r\n          authServiceFactory.login = function (loginData) {\r\n              var data = \"grant_type=password&username=\" + loginData.email + \"&password=\" + loginData.password;\r\n\r\n              var deferred = $q.defer();\r\n\r\n              $http.post('/api/token', data, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                   .then(function (response) {\r\n                       localStorageService.set(authDataResourceKey, { token: response.data.access_token, name: response.data.name, role: response.data.role });\r\n\r\n                       authServiceFactory.authData.isAuth = true;\r\n                       authServiceFactory.authData.name = response.data.name;\r\n                       authServiceFactory.authData.role = response.data.role;\r\n\r\n                       notifyObservers();\r\n\r\n                       deferred.resolve(response);\r\n                   },\r\n                   function (err, status) {\r\n                       authServiceFactory.logOut();\r\n                       deferred.reject(err);\r\n                   });\r\n\r\n              return deferred.promise;\r\n          };\r\n\r\n          authServiceFactory.UpdateAuthData = function (email, name) {\r\n              var previousData = localStorageService.get(authDataResourceKey);\r\n\r\n              var newName = name ? name : previousData.name;\r\n\r\n              localStorageService.set(authDataResourceKey,\r\n              {\r\n                  token: previousData.token,\r\n                  name: newName\r\n              });\r\n\r\n              authServiceFactory.authData.name = newName;\r\n              notifyObservers();\r\n          }\r\n\r\n          return authServiceFactory;\r\n      }\r\n    ]);","'use strict';\r\nangular.module('core.authentication')\r\n    .factory('authInterceptorService', ['$q', '$injector', '$location', 'localStorageService', function ($q, $injector, $location, localStorageService) {\r\n\r\n        var authInterceptorServiceFactory = {};\r\n\r\n        authInterceptorServiceFactory.request = function (config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = localStorageService.get('authorizationData');\r\n\r\n            if (authData) {\r\n                config.headers.Authorization = 'Bearer ' + authData.token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        authInterceptorServiceFactory.responseError = function (rejection) {\r\n            if (rejection.status === 401) {\r\n                var authService = $injector.get('AuthService');\r\n\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        return authInterceptorServiceFactory;\r\n    }]);","'use strict';\r\n\r\nangular.module('core.manageAccount', []);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.manageAccount').\r\n  factory('ManageAccountService', ['$http',\r\n    function ($http) {\r\n        var manageAccountFactory = {};\r\n\r\n        manageAccountFactory.updateAccount = function (accountData) {\r\n            return $http.put('/api/Account/', accountData).then(function(response) {\r\n                return response;\r\n            });\r\n        }\r\n\r\n        manageAccountFactory.getAccountInfo = function () {\r\n            return $http.get('/api/Account/').then(function(response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        return manageAccountFactory;\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `clientTripList` module\r\nangular.module('clientTripList', ['core.clientTrip']);\r\n","'use strict';\r\n\r\n// Register `clientTripList` component, along with its associated controller and template\r\nangular.\r\n  module('clientTripList').\r\n  component('clientTripList', {\r\n      templateUrl: 'Content/app/clientTrip-list/clientTrip-list.template.html',\r\n      controller: ['ClientTrip', '$scope', 'City', 'Agent',\r\n        function (ClientTrip, $scope, City, Agent) {\r\n            var that = this;\r\n\r\n            this.clientFilter = '';\r\n            this.clients = [];\r\n            this.cities = City.query();\r\n            this.agents = Agent.query();\r\n            this.orderProp = 'Id';\r\n\r\n            this.removeFromTrip = function (client) {\r\n                var index = $scope.$parent.$ctrl.trip.tripClients.indexOf(client);\r\n                $scope.$parent.$ctrl.trip.tripClients.splice(index, 1);\r\n            }\r\n\r\n            this.addToTrip = function (client) {\r\n                if ($scope.$parent.$ctrl.trip.tripClients.indexOf(client) === -1) {\r\n                    $scope.$parent.$ctrl.trip.tripClients.push(client);\r\n                }\r\n                else {\r\n                    console.log(\"This item already exists\");\r\n                }\r\n            }\r\n\r\n            this.clientFilterAction = function () {\r\n                if (that.clientFilter.length > 1) {\r\n                    ClientTrip.query({ filter: that.clientFilter },\r\n                        function (clientTrips) {\r\n                            that.clients = clientTrips;\r\n                        });\r\n                } else {\r\n                    that.clients = [];\r\n                }\r\n            };\r\n\r\n            this.filterThrottled = _.debounce(that.clientFilterAction, 500);\r\n\r\n            $scope.$watch('$ctrl.clientFilter', that.filterThrottled);\r\n\r\n            $scope.$on('clearClientTripsEvent', function (event, params) {\r\n                that.clientFilter = '';\r\n                that.clients = [];\r\n            });\r\n        }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `clientDetail` module\r\nangular.module('clientDetail', [\r\n  'ngRoute',\r\n  'core.client'\r\n]);\r\n","'use strict';\r\n\r\n// Register `clientDetail` component, along with its associated controller and template\r\nangular.\r\n  module('clientDetail').\r\n  component('clientDetail', {\r\n    templateUrl: 'Content/app/client-detail/client-detail.template.html',\r\n    controller: ['$routeParams', 'Client',\r\n      function ClientDetailController($routeParams, Client) {\r\n        var self = this;\r\n        self.client = Client.get({clientId: $routeParams.clientId}, function(client) {\r\n          //self.setImage(client.images[0]);\r\n        });\r\n\r\n        //self.setImage = function setImage(imageUrl) {\r\n        //  self.mainImageUrl = imageUrl;\r\n        //};\r\n      }\r\n    ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('tripList', ['core.trip', 'core.bus', 'ngMap', 'googleMaps']);","'use strict';\r\n\r\nangular.\r\nmodule('tripList').\r\ncomponent('tripList', {\r\n    templateUrl: 'Content/app/trip-list/trip-list.template.html',\r\n    controller: ['Trip', 'Bus', 'City', 'Driver', '$uibModal', '$scope', 'PdfMaker', '$filter', 'googleMapsService', 'tripCashService', '$q', '$timeout',\r\n        function (Trip, Bus, City, Driver, $uibModal, $scope, PdfMaker, $filter, googleMapsService, tripCashService, $q, $timeout) {\r\n            var that = this;\r\n\r\n            this.showAddTripForm = false;\r\n            this.isEditMode = false;\r\n            this.dateNow = new Date();\r\n            this.mapCenterLatLng = new google.maps.LatLng(49.361625, 32.139730);\r\n\r\n            this.trip = {\r\n                tripClients: [],\r\n                compulsoryExpenses: [],\r\n                unexpectedExpenses: [],\r\n                startDate: that.dateNow,\r\n                startTime: that.dateNow,\r\n                endDate: that.dateNow,\r\n                endTime: that.dateNow\r\n            };\r\n\r\n            this.trips = Trip.query();\r\n            this.buses = Bus.query();\r\n            this.cities = City.query();\r\n            this.drivers = Driver.query();\r\n            this.dateFormat = \"dd-MMM-yyyy\";\r\n            this.dateTimeFormat = 'MMM dd HH:mm';\r\n\r\n            this.dateOptions = {\r\n                minDate: new Date(),\r\n                showWeeks: false,\r\n                startingDay: 1\r\n            };\r\n\r\n            this.timeOptions = {\r\n                minuteStep: 5\r\n            }\r\n\r\n            this.startDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.startDateOpen = function () {\r\n                that.startDatePopup.opened = true;\r\n            };\r\n\r\n            this.endDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.endDateOpen = function () {\r\n                that.endDatePopup.opened = true;\r\n            };\r\n\r\n            this.showAddForm = function () {\r\n                that.showAddTripForm = !that.showAddTripForm;\r\n            }\r\n\r\n            this.add = function () {\r\n                that.submitted = true;\r\n\r\n                if (that.trip.tripClients.length === 0) {\r\n                    $scope.form.$setValidity('isAnyClient', false);\r\n                    return;\r\n                }\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (that.isEditMode) {\r\n                    that.update();\r\n                } else {\r\n                    that.create();\r\n                }\r\n            };\r\n\r\n            this.create = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.add(that.trip, function (createdTrip) {\r\n                    that.trips.push(createdTrip);\r\n                    that.showAddTripForm = false;\r\n                    that.clearTripModel();\r\n                });\r\n            };\r\n\r\n            this.update = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.update(\r\n                    { id: that.trip.id },\r\n                    that.trip,\r\n                    function (updatedTrip) {\r\n                        that.trips = Trip.query();\r\n\r\n                        that.showAddTripForm = false;\r\n                        that.clearTripModel();\r\n                    });\r\n            };\r\n\r\n            this.clearTripModel = function () {\r\n                that.dateNow = new Date();\r\n                that.isEditMode = false;\r\n                that.trip = {\r\n                    tripClients: [],\r\n                    startDate: that.dateNow,\r\n                    startTime: that.dateNow,\r\n                    endDate: that.dateNow,\r\n                    endTime: that.dateNow\r\n                };\r\n                that.submitted = false;\r\n                $scope.form.$setPristine();\r\n                $scope.form.$setUntouched();\r\n                $scope.$broadcast('clearClientTripsEvent');\r\n            };\r\n\r\n            this.joinTripDateAndTime = function () {\r\n                that.trip.date = new Date(\r\n                    that.trip.startDate.getFullYear(),\r\n                    that.trip.startDate.getMonth(),\r\n                    that.trip.startDate.getDate(),\r\n                    that.trip.startTime.getHours(),\r\n                    that.trip.startTime.getMinutes());\r\n\r\n                that.trip.arrivalDate = new Date(\r\n                    that.trip.endDate.getFullYear(),\r\n                    that.trip.endDate.getMonth(),\r\n                    that.trip.endDate.getDate(),\r\n                    that.trip.endTime.getHours(),\r\n                    that.trip.endTime.getMinutes());\r\n            };\r\n\r\n            this.openDriversList = function () {\r\n                var modalOptions = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    component: 'driverList',\r\n                    resolve: {\r\n                        drivers: function () {\r\n                            return that.drivers;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var modalInstance = $uibModal.open(modalOptions);\r\n\r\n                modalInstance.result.then(function (drivers) {\r\n                    that.drivers = drivers;\r\n                });\r\n            };\r\n\r\n            this.createPDF = function (trip) {\r\n                if (!trip.directionLoadingFaled) {\r\n                    googleMapsService.getGoogleMapsImage(trip.cityFrom.Name,\r\n                        trip.cityTo.Name,\r\n                        trip.waypoints,\r\n                        trip.polyline,\r\n                        function (base64Img) {\r\n                            that.createTripReportPdf(trip, base64Img);\r\n                        });\r\n                } else {\r\n                    that.createTripReportPdf(trip, null);\r\n                }\r\n            }\r\n\r\n            this.createTripReportPdf = function (trip, base64Img) {\r\n                var tableBody = [\r\n                    [\r\n                        { text: '№', style: 'tableHeader' },\r\n                        { text: 'Имя Фамилия', style: 'tableHeader' },\r\n                        { text: 'Телефон', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Стоимость', style: 'tableHeader' },\r\n                        { text: 'Не вых.', style: 'tableHeader' },\r\n                        { text: 'Статус', style: 'tableHeader' },\r\n                        { text: 'Aгент', style: 'tableHeader' }\r\n                    ]\r\n                ];\r\n\r\n                trip.tripClients.map((client, i) =>\r\n                    tableBody.push([\r\n                        (i + 1).toString(),\r\n                        client.Name,\r\n                        client.Phone,\r\n                        client.To ? client.To : '',\r\n                        client.From ? client.From : '',\r\n                        client.Price.toString(),\r\n                        client.IsStayInBus ? 'Да' : '',\r\n                        (client.HasMinorChild ? 'С ребенком; ' : '') + (client.HasDisability ? 'Инвалид' : ''),\r\n                        client.AgentName ?\r\n                            client.AgentName + ' - ' + (client.AgentPrice ? client.AgentPrice : 0)\r\n                            : '']));\r\n\r\n                //pdfMake doesnt work with initializing via variable\r\n                var compolsuryExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n                var unexpectedExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n\r\n                trip.compulsoryExpenses.map((expense) =>\r\n                    compolsuryExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                trip.unexpectedExpenses.map((expense) =>\r\n                    unexpectedExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                var expenses = tripCashService.countTotalExpenses(trip);\r\n\r\n                var bus = trip.bus != null ? trip.bus.FriendlyName + ' ' + trip.bus.RegistrationNumber + ', ' : '';\r\n                var driver = trip.driver != null ? 'Водитель: ' + trip.driver.FullName : '';\r\n                var fileName = trip.cityFrom.Name.concat(' - ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy/MM/dd\"), '.pdf');\r\n\r\n                var options = {\r\n                    fileName: fileName,\r\n                    docDefinition: {\r\n                        pageOrientation: 'portrait',\r\n                        fontSize: 12,\r\n                        content: [\r\n                            {\r\n                                text: trip.cityFrom.Name.concat(' --> ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy-MM-dd HH:mm\"))\r\n                            },\r\n                            {\r\n                                text: bus + driver\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Обязательные расходы:'\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Дополнительные расходы:'\r\n                                }]\r\n                            },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: compolsuryExpenseTable\r\n                                    }\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: unexpectedExpenseTable\r\n                                    }\r\n                                }]\r\n                            },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Итого: ' + expenses.compolsuryTotal\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Итого: ' + expenses.unexpectedTotal\r\n                                }]\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                text: 'Клиенты:'\r\n                            },\r\n                            {\r\n                                table: {\r\n                                    headerRows: 1,\r\n                                    body: tableBody\r\n                                }\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                text: 'Касса водителя: ' + tripCashService.countDriverCashBox(trip)\r\n                            },\r\n                            {\r\n                                text: 'Агентские по рейсу суммарно: ' + expenses.agentExpensesTotal\r\n                            },\r\n                            {\r\n                                text: 'Доход: ' + tripCashService.countIncomes(trip)\r\n                            },\r\n                            { text: ' ' }\r\n                        ]\r\n                    }\r\n                }\r\n\r\n                if (base64Img != null) {\r\n                    options.docDefinition.content.push({ image: base64Img });\r\n                }\r\n\r\n                PdfMaker.createAndDownload(options);\r\n            }\r\n\r\n            this.editTrip = function (trip) {\r\n                //parce time to utc object, needed for uib datetime pickers\r\n                var startDate = new Date(trip.date);\r\n                var endDate = new Date(trip.arrivalDate);\r\n\r\n                that.isEditMode = true;\r\n                that.trip = trip;\r\n                that.trip.startDate = startDate;\r\n                that.trip.startTime = startDate;\r\n                that.trip.endDate = endDate;\r\n                that.trip.endTime = endDate;\r\n                that.showAddTripForm = true;\r\n            }; \r\n\r\n            this.disableEditMode = function () {\r\n                that.showAddTripForm = false;\r\n                that.isEditMode = false;\r\n                that.clearTripModel();\r\n            }\r\n\r\n            this.delete = function (trip) {\r\n                var msg = 'Вы уверены, что хотите удалить маршрут ' + trip.cityFrom.Name + '---->' + trip.cityTo.Name + ', ' + trip.date + '?';\r\n                if (confirm(msg)) {\r\n                    Trip.remove({ id: trip.id },\r\n                        function onSuccess(deletedTrip) {\r\n                            var index = that.trips.map(function (e) { return e.id }).indexOf(deletedTrip.id);\r\n                            if (index > -1) {\r\n                                that.trips.splice(index, 1);\r\n                            }\r\n                        },\r\n                        function onError(error) {\r\n                            var errorMessage = 'Маршрут не удален. Ошибка удаления: ' + error.data.Message;\r\n                            alert(errorMessage);\r\n                        });\r\n                }\r\n            }\r\n\r\n            this.removeExpense = function(expensesArray, index) {\r\n                expensesArray.splice(index, 1);\r\n            }\r\n\r\n            this.addCompolsoryExpense = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.compulsoryExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.compulsoryNewCost = 0;\r\n                    that.compulsoryNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.addUnexpectedExpens = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.unexpectedExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.unexpectedNewCost = 0;\r\n                    that.unexpectedNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.getDriverCashbox = function (trip) {\r\n                return tripCashService.countDriverCashBox(trip);\r\n            }\r\n\r\n            this.getIncomes = function (trip) {\r\n                return tripCashService.countIncomes(trip);\r\n            }\r\n\r\n            this.getAgentExpenses = function (trip) {\r\n                return tripCashService.countAgentExpenses(trip);\r\n            }\r\n\r\n            this.mapInitialized = function (map, trip) {\r\n                google.maps.event.trigger(map, 'resize');\r\n\r\n                var directionsDisplay = new google.maps.DirectionsRenderer;\r\n                directionsDisplay.setMap(map);\r\n\r\n                that.getTripWaypoints(trip.tripClients, trip.cityFrom.Name, trip.cityTo.Name)\r\n                    .then(function (response) {\r\n                        if (response.response != null) {\r\n                            directionsDisplay.setDirections(response.response);\r\n                            trip.polyline = response.response.routes[0].overview_polyline;\r\n                        } else {\r\n                            trip.directionLoadingFaled = true;\r\n                        }\r\n\r\n                        trip.waypoints = response.waypoints;\r\n                    });\r\n            }\r\n\r\n            this.getTripWaypoints = function (clients, origin, destination) {\r\n                var waypoints = [];\r\n                var deferred = $q.defer();\r\n\r\n                var addToWaypoints = function (location) {\r\n                    if (!waypoints.some((wp) =>\r\n                        wp.location == location) && location != origin && location != destination) {\r\n                        location = location.concat(', Украина');\r\n                        waypoints.push({ location: location, stopover: true });\r\n                    }\r\n                }\r\n\r\n                clients.map(function (client) {\r\n                    addToWaypoints(client.To);\r\n                    addToWaypoints(client.From);\r\n                });\r\n\r\n                googleMapsService.optimizeWaypoints(origin, destination, waypoints,\r\n                    function (response) {\r\n                        deferred.resolve(response);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            $scope.$watchCollection('$ctrl.trip.tripClients', function (newValue, previousValue) {\r\n                if (newValue && newValue.length > 0) {\r\n                    $scope.form.$setValidity('isAnyClient', true);\r\n                }\r\n            });\r\n        }]\r\n});","'use strict';\r\n\r\n// Define the `driverList` module\r\nangular.module('driverList', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverList')\r\n  .component('driverList',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-list.template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [\r\n        'Driver', '$scope', '$uibModal', function (Driver, $scope, $uibModal) {\r\n            var that = this;\r\n            that.drivers = [];\r\n            that.addDriverBlockVisible = false;\r\n            that.addNewClass = \"\";\r\n\r\n            that.$onInit = function () {\r\n                that.drivers = that.resolve.drivers;\r\n            };\r\n\r\n            that.closeModal = function () {\r\n                that.close({ $value: that.drivers });\r\n            };\r\n\r\n            that.editDriver = function (driver) {\r\n                $scope.$broadcast('editDriverEvent', { driver: driver });\r\n            };\r\n\r\n            that.showAddDriverBlock = function () {\r\n                that.addDriverBlockVisible = !that.addDriverBlockVisible;\r\n                that.addNewClass = that.addDriverBlockVisible ? \"not-active\" : \"\";\r\n            };\r\n\r\n            that.deleteDriver = function (id) {\r\n                $scope.$broadcast('deleteDriverEvent', { id: id });\r\n            };\r\n        }\r\n      ]\r\n  });","'use strict';\r\n\r\n// Define the `driverCrud` module\r\nangular.module('driverCrud', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverCrud')\r\n  .component('driverCrud',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-crud/driver-crud.template.html',\r\n    controller: [\r\n      'Driver', '$scope', function (Driver, $scope) {\r\n        var that = this;\r\n        this.maxPhotoWidth = 150;\r\n        this.maxPhotoHeight = 150;\r\n        this.driver = {};\r\n\r\n        this.cancel = function () {\r\n          $scope.$parent.$ctrl.showAddDriverBlock();\r\n        };\r\n\r\n        this.save = function (driver) {\r\n          that.driver = driver;\r\n          if (driver.Id > 0) {\r\n            Driver.update({ id: driver.Id },\r\n              driver,\r\n              function (editedDriver) {\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          } else {\r\n            Driver.add(driver,\r\n              function onSuccess(createdDriver) {\r\n                $scope.$parent.$ctrl.drivers.push(createdDriver);\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          }\r\n        };\r\n\r\n        this.deleteDriver = function (id) {\r\n          Driver.delete({ id: id },\r\n            function onSuccess(deletedDriver) {\r\n              var index = $scope.$parent.$ctrl.drivers.map(function(e) { return e.Id }).indexOf(deletedDriver.Id);\r\n              if (index > -1) {\r\n                $scope.$parent.$ctrl.drivers.splice(index, 1);\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        $scope.$on('deleteDriverEvent',\r\n          function(event, params) {\r\n            that.deleteDriver(params.id);\r\n          }\r\n        );\r\n\r\n        $scope.$on('editDriverEvent',\r\n          function (event, params) {\r\n            that.driver = params.driver;\r\n            $(\"#photoPreview\").attr(\"src\", 'data:image/png;base64,' + that.driver.Photo);\r\n            $scope.$parent.$ctrl.showAddDriverBlock();\r\n          }\r\n        );\r\n\r\n        this.resizeBase64Img = function (base64Img, maxWidth, maxHeight) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var deferred = $.Deferred();\r\n\r\n            $(\"<img/>\").attr(\"src\", base64Img).load( function () {\r\n                var width = this.width;\r\n                var height = this.height;\r\n\r\n                if (width > height) {\r\n                    if (width > maxWidth) {\r\n                        height *= maxWidth / width;\r\n                        width = maxWidth;\r\n                    }\r\n                } else {\r\n                    if (height > maxHeight) {\r\n                        width *= maxHeight / height;\r\n                        height = maxHeight;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.drawImage(this, 0, 0, width, height);\r\n                deferred.resolve($(\"<img/>\").attr(\"src\", canvas.toDataURL()));\r\n            });\r\n            return deferred.promise();\r\n        }\r\n\r\n        $(\"#driverPhoto\").change(function () {\r\n            if (this.files && this.files[0]) {\r\n                var fr = new FileReader();\r\n                fr.onload = function (e) {\r\n                    that.resizeBase64Img(e.target.result, that.maxPhotoWidth, that.maxPhotoHeight)\r\n                        .then(function (newImg) {\r\n                            that.driver.Photo = newImg[0].src.replace('data:image/png;base64,', '');\r\n                            console.log(newImg[0].src);\r\n                            $(\"#photoPreview\").attr(\"src\", newImg[0].src);\r\n                        }\r\n                    );\r\n                };\r\n                fr.readAsDataURL(this.files[0]);\r\n            }\r\n        });\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalBus` module\r\nangular.module('modalBus', ['core.bus']);","'use strict';\r\n\r\n// Register `modalBus` component, along with its associated controller and template\r\nangular.\r\n  module('modalBus').\r\n  component('modalBus', {\r\n    templateUrl: 'Content/app/bus-list/modal/modalBus-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.bus = that.resolve.bus;\r\n        if (that.bus && that.bus.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.bus });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `busList` module\r\nangular.module('busList', ['core.bus']);\r\n","'use strict';\r\n\r\n// Register `busList` component, along with its associated controller and template\r\nangular.module('busList')\r\n  .component('busList',\r\n  {\r\n    templateUrl: 'Content/app/bus-list/bus-list.template.html',\r\n    controller: [\r\n      'Bus', '$scope', '$uibModal',\r\n      function (Bus, $scope, $uibModal) {\r\n        var that = this;\r\n        that.buses = Bus.query();\r\n        that.bus = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalBus',\r\n          resolve: {\r\n            bus: function() {\r\n              return that.bus;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addBus = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.add(bus,\r\n              function onSuccess(createdBus) {\r\n                that.buses.push(createdBus);\r\n                that.clearBus();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editBus = function(bus) {\r\n          that.bus = bus;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.update({ id: bus.Id },\r\n              bus,\r\n              that.clearBus);\r\n          },\r\n          that.clearBus);\r\n        };\r\n\r\n        that.deleteBus = function(id) {\r\n          Bus.delete({ id: id },\r\n            function onSuccess(deletedBus) {\r\n              var index = that.buses.map(function (e) { return e.Id }).indexOf(deletedBus.Id);\r\n              if (index > -1) {\r\n                that.buses.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clearBus = function () {\r\n            that.bus = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `agentList` module\r\nangular.module('agentList', ['core.agent']);\r\n","'use strict';\r\n\r\n// Register `agentList` component, along with its associated controller and template\r\nangular.module('agentList')\r\n  .component('agentList',\r\n  {\r\n    templateUrl: 'Content/app/agent-list/agent-list.template.html',\r\n    controller: [\r\n      'Agent', '$scope', '$uibModal',\r\n      function (Agent, $scope, $uibModal) {\r\n        var that = this;\r\n\r\n        that.agents = Agent.query();\r\n        that.agent = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalAgent',\r\n          resolve: {\r\n            agent: function() {\r\n              return that.agent;\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n        that.addAgent = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.add(agent,\r\n              function onSuccess(createdAgent) {\r\n                that.agents.push(createdAgent);\r\n                  that.clearAgent();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editAgent = function(agent) {\r\n          that.agent = agent;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.update({ id: agent.Id },\r\n              agent,\r\n              that.clearAgent);\r\n          },\r\n          that.clearAgent);\r\n        };\r\n\r\n        that.deleteAgent = function(id) {\r\n          Agent.delete({ id: id },\r\n            function onSuccess(deletedAgent) {\r\n              var index = that.agents.map(function (e) { return e.Id }).indexOf(deletedAgent.Id);\r\n              if (index > -1) {\r\n                that.agents.splice(index, 1);\r\n              }\r\n            },\r\n            function onError(error) {\r\n                var errorMessage = error.data.Message;\r\n                alert(errorMessage);\r\n            });\r\n        };\r\n\r\n        that.clearAgent = function () {\r\n            that.agent = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalAgent` module\r\nangular.module('modalAgent', ['core.agent']);","'use strict';\r\n\r\n// Register `modalAgent` component, along with its associated controller and template\r\nangular.\r\n  module('modalAgent').\r\n  component('modalAgent', {\r\n    templateUrl: 'Content/app/agent-list/modal/modalAgent-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.agent = that.resolve.agent;\r\n        if (that.agent && that.agent.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.agent });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `reports` module\r\nangular.module('reports', []);\r\n","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('agentReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/agent-reports.template.html',\r\n        controller: [\r\n            'Agent', 'AgentReport', '$filter', 'PdfMaker',\r\n            function (Agent, AgentReport, $filter, pdfMaker) {\r\n                var that = this;\r\n\r\n                that.agents = Agent.query();\r\n                that.agent = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                that.dateFrom = new Date();\r\n                that.dateTo = new Date();\r\n                that.dateOptions = {\r\n                    showWeeks: false,\r\n                    startingDay: 0,\r\n                    maxDate: new Date()\r\n                }\r\n                that.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function (reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по агенту ' + that.agent.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].AgentCompensation;\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n\r\n                    var options = {\r\n                        id: that.agent.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    AgentReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Водитель', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Компенсация за рейс', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.DriverInfo,\r\n                        report.ClientsCount.toString(),\r\n                        report.AgentCompensation.toString()]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.agent.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Агент: ' + that.agent.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('driverReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/driver-reports.template.html',\r\n        controller: [\r\n            'Driver', 'DriverReport', '$filter', 'PdfMaker',\r\n             function (Driver, DriverReport, $filter, pdfMaker) {\r\n                 var that = this;\r\n\r\n                 that.drivers = Driver.query();\r\n                 that.driver = {};\r\n                 that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                 that.dateFrom = new Date();\r\n                 that.dateTo = new Date();\r\n                 that.dateOptions = {\r\n                     showWeeks: false,\r\n                     startingDay: 0,\r\n                     maxDate: new Date()\r\n                 }\r\n\r\n                 that.DriverReports = {};\r\n                 that.reportTitle = '';\r\n                 that.totalTitle = '';\r\n                 that.totalPrice = '';\r\n                 that.reportIsShowing = false;\r\n\r\n                 that.startDatePopup = {\r\n                     opened: false\r\n                 };\r\n\r\n                 that.startDateOpen = function () {\r\n                     that.startDatePopup.opened = true;\r\n                 };\r\n\r\n                 that.endDatePopup = {\r\n                     opened: false\r\n                 };\r\n\r\n                 that.endDateOpen = function () {\r\n                     that.endDatePopup.opened = true;\r\n                 };\r\n\r\n                 that.onGetReports = function (reports) {\r\n                     reports.map(function (report) {\r\n                         that.DriverReports[report.DriverName]\r\n                             ? that.DriverReports[report.DriverName].push(report)\r\n                             : that.DriverReports[report.DriverName] = [report];\r\n                     });\r\n\r\n                     that.totalIncomes = that.getTotalIncomes(reports);\r\n                     that.isMultipleDriversMode = Object.keys(that.DriverReports).length > 1;\r\n                     that.reportIsShowing = true;\r\n                 };\r\n\r\n                 that.createReport = function () {\r\n                     that.DriverReports = {};\r\n                     that.reportTitle = '';\r\n                     that.totalTitle = '';\r\n                     that.totalPrice = '';\r\n                     that.reportIsShowing = false;\r\n\r\n                     var options = {\r\n                         id: that.driver ? that.driver.Id : null,\r\n                         dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                         dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                     };\r\n\r\n                     DriverReport.query(options, that.onGetReports);\r\n                 };\r\n\r\n                 //reports : particular DriverReports for driver or null if calculate total incomes for all drivers\r\n                 that.getTotalIncomes = function (reports) {\r\n                     const totalIncomes = reports.reduce((acc, report) => acc + report.TotalIncomes, 0);\r\n\r\n                     return totalIncomes;\r\n                 }\r\n\r\n                 that.getReportsPdfTable = function (reports, driverName) {\r\n                     var title = [\r\n                         { text: 'Водитель: ' + driverName }];\r\n\r\n                     var table = [[\r\n                         { text: 'Дата Отправления' },\r\n                         { text: 'Откуда' },\r\n                         { text: 'Куда' },\r\n                         { text: 'Автобус' },\r\n                         { text: 'Кол-во пас.' },\r\n                         { text: 'Постоянные расходы' },\r\n                         { text: 'Непред. расходы' },\r\n                         { text: 'Касса' },\r\n                         { text: 'Доход' }]];\r\n\r\n                     reports.map((report) => table.push([\r\n                           report.TripDate,\r\n                           report.CityFrom,\r\n                           report.CityTo,\r\n                           report.BusInfo,\r\n                           report.ClientsCount ? report.ClientsCount.toString() : '',\r\n                           report.CompulsoryExpenses ? report.CompulsoryExpenses.toString() : '0',\r\n                           report.UnexpectedExpenses ? report.UnexpectedExpenses.toString() : '0',\r\n                           report.DriverCashBox ? report.DriverCashBox.toString() : '0',\r\n                           report.TotalIncomes ? report.TotalIncomes.toString() : '0']));\r\n\r\n                     title.push(\r\n                         { table: { body: table } },\r\n                         { text: ' ' },\r\n                         { text: 'Итого: ' + that.getTotalIncomes(reports) },\r\n                         { text: ' ' });\r\n\r\n                     return title;\r\n                 }\r\n\r\n                 that.createPDF = function (driverName) {\r\n                     const datePeriod = $filter('date')(that.dateFrom, that.dateTimeFormat).\r\n                        concat(' - ', $filter('date')(that.dateTo, that.dateTimeFormat));\r\n\r\n                     var content = [{ text: 'Oтчет за период: ' + datePeriod }, { text: ' ' }];\r\n\r\n                     function generateReport(driversName) {\r\n                         var report = that.getReportsPdfTable(that.DriverReports[driversName], driversName);\r\n\r\n                         content = content.concat(report);\r\n                     }\r\n\r\n                     if (driverName) {\r\n                         generateReport(driverName);\r\n                     } else {\r\n                         Object.keys(that.DriverReports).map((driversName) => generateReport(driversName));\r\n                     }\r\n\r\n                     if (!driverName) {\r\n                         content.push(\r\n                             { text: ' ' },\r\n                             { text: 'Итого по всем водителям за период ' + datePeriod + ' : ' + that.totalIncomes });\r\n                     }\r\n\r\n                     const driverFileNaming = driverName ? driverName : 'по всем водителям';\r\n                     var options = {\r\n                         fileName: 'Oтчет ' + datePeriod + ' ' + driverFileNaming,\r\n                         docDefinition: {\r\n                             pageOrientation: 'portrait',\r\n                             fontSize: 12,\r\n                             content: content\r\n                         }\r\n                     }\r\n\r\n                     pdfMaker.createAndDownload(options);\r\n                 }\r\n             }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Define the `clientList` module\r\nangular.module('clientList', ['core.client']);\r\n","'use strict';\r\n\r\n// Register `clientList` component, along with its associated controller and template\r\nangular.module('clientList')\r\n  .component('clientList',\r\n  {\r\n     templateUrl: 'Content/app/client-list/client-list.template.html',\r\n     controller: [\r\n      'Client', 'Trip', '$scope', '$uibModal',\r\n      function (Client,Trip, $scope, $uibModal) {\r\n        var that = this;\r\n        that.clients = Client.query();\r\n        that.client = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalClient',\r\n          resolve: {\r\n            client: function() {\r\n              return that.client;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addClient = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.clients.push(client);\r\n            that.clearClient();\r\n          });\r\n        };\r\n\r\n        that.editClient = function(client) {\r\n          that.client = client;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.update({ id: client.Id },\r\n              client,\r\n              that.clearClient);\r\n          }, that.clearClient);\r\n        };\r\n\r\n        that.deleteClient = function(id) {\r\n          Client.delete({ id: id },\r\n            function onSuccess(deletedClient) {\r\n              var index = that.clients.map(function (e) { return e.Id }).indexOf(deletedClient.Id);\r\n              if (index > -1) {\r\n                that.clients.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clientInfo = function(client) {\r\n            Trip.query({ clientId: client.Id }, function (clientTrips) {\r\n                var options = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    component: 'modalClientTrips',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        info: function () {\r\n                            return {\r\n                                client: client,\r\n                                trips: clientTrips\r\n                            };\r\n                        }\r\n                    }\r\n                };\r\n                $uibModal.open(options);\r\n            });\r\n        };\r\n\r\n        that.clearClient = function() {\r\n            that.client = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalClient` module\r\nangular.module('modalClient', ['core.client']);","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClient', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClient-template.html',\r\n\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n\r\n      controller: ['Client', function (Client) {\r\n          var that = this;\r\n\r\n          that.message = '';\r\n          that.$onInit = function () {\r\n              that.client = that.resolve.client;\r\n              if (that.client && that.client.Id > 0) {\r\n                  that.headerTitle = 'Редактирование';\r\n              } else {\r\n                  that.headerTitle = 'Создание';\r\n              }\r\n          };\r\n\r\n          that.ok = function () {\r\n              Client.add(that.client,\r\n                  function onSuccess(createdClient) {\r\n                      that.close({ $value: createdClient });\r\n                  },\r\n                  function onError(response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join(' ');\r\n                  });\r\n          };\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClientTrips', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClientTrips-template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: ['$filter', function ($filter) {\r\n          var that = this;\r\n\r\n          that.trips = {};\r\n          that.client = {};\r\n\r\n          that.$onInit = function () {\r\n              that.trips = that.resolve.info.trips;\r\n              that.client = that.resolve.info.client;\r\n          };\r\n\r\n          that.getClienPrice = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].Price;\r\n          };\r\n\r\n          that.getClienAdditionalExpenses = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].AdditionalExpenses;\r\n          };\r\n\r\n          that.getClientAgent = function (trip) {\r\n              var clientTrip = trip.tripClients.find((client) => client.ClientId == that.client.Id);\r\n\r\n              trip.agentName = clientTrip.AgentName;\r\n          }\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\nangular.module('citiesList', ['core.city', 'google.places']);","'use strict';\r\n\r\nangular.\r\n  module('citiesList').\r\n  component('citiesList', {\r\n      templateUrl: 'Content/app/cities-list/cities-list.template.html',\r\n      controller: ['City', '$scope', function CitiesListController(City, $scope) {\r\n          var that = this;\r\n\r\n          this.cities = City.query();\r\n          this.showAddCityForm = false;\r\n          this.choosedPlace = '';\r\n\r\n          this.showAddForm = function () {\r\n              that.showAddCityForm = !that.showAddCityForm;\r\n          }\r\n\r\n          $scope.autocompleteOptions = {\r\n              componentRestrictions: { country: 'ukr' },\r\n              types: ['(cities)']\r\n          }\r\n\r\n          this.saveCity = function () {\r\n              if (that.choosedPlace) {\r\n                  that.showAddCityForm = false;\r\n                  let cityName = that.choosedPlace.name ? that.choosedPlace.name : that.choosedPlace;\r\n\r\n                  City.add({ name: cityName }, function (createdCity) {\r\n                      that.cities.push(createdCity);\r\n                      that.choosedPlace = '';\r\n                  });\r\n              }\r\n          }\r\n\r\n          this.removeCity = function (cityId) {\r\n              City.delete({ id: cityId }, function onSuccess(deletedCity) {\r\n                  that.cities = that.cities.filter((el) => el.Id != cityId);\r\n              });\r\n          }\r\n\r\n          this.setCityFromAutocomplete = function (err, place) {\r\n              that.city.name = place;\r\n          }\r\n      }]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `pdfMaker` module\r\nangular.module('pdfMaker', []);","'use strict';\r\n\r\n// Register `pdfMaker` component, along with its associated controller and template\r\nangular.\r\n    module('pdfMaker').\r\n    factory('PdfMaker', function() {\r\n        return {\r\n            createAndDownload: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).download(options.fileName ? options.fileName : 'file.pdf');\r\n            },\r\n            createAndOpen: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).open();\r\n            }\r\n        }\r\n    });","'use strict';\r\n\r\nangular.module('signUp', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('signUp').\r\n  component('signUp', {\r\n      templateUrl: 'Content/app/authentication/signup/signup.template.html',\r\n      controller: ['AuthService', '$location', function (authService, $location) {\r\n          var that = this;\r\n\r\n          this.savedSuccessfully = false;\r\n          this.message = \"\";\r\n\r\n          this.registration = {\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\"\r\n          };\r\n\r\n          this.signUp = function (formValid) {\r\n              if (formValid) {\r\n                  authService.saveRegistration(this.registration).then(function (response) {\r\n                      that.savedSuccessfully = true;\r\n                      that.message = \"User has been registered successfully, you will be redirected to login page in 2 seconds.\";\r\n\r\n                      $location.path('/login');\r\n                  },\r\n                  function (response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join('\\n');\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('signIn', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('signIn').\r\n    component('signIn',\r\n    {\r\n        templateUrl: 'Content/app/authentication/signin/signin.template.html',\r\n        controller: ['AuthService', '$location', function(authService, $location) {\r\n            var that = this;\r\n\r\n            if (authService.authData.isAuth) {\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            this.loginData={\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n            this.message=\"\";\r\n\r\n            this.login = function() {\r\n                authService.login(this.loginData).then(function(response) {\r\n                    $location.path('/trips');\r\n                },\r\n                function(err) {\r\n                    that.message=err.data.error_description;\r\n                });\r\n            };\r\n        }\r\n    ]\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('navBar', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('navBar').\r\n    component('navbar',\r\n    {\r\n        templateUrl: 'Content/app/navbar/navbar.template.html',\r\n        controller: ['AuthService', 'authConstants', function (authService, authConstants) {\r\n            var that = this;\r\n\r\n            this.ClientAccessRoles = authConstants.ClientAccessRoles;\r\n            this.BusesAccessRoles = authConstants.BussesAccessRoles;\r\n\r\n            this.updateAuthData = function () {\r\n                that.isAuth = authService.authData.isAuth;\r\n                that.currentRole = authService.authData.role;\r\n            }\r\n\r\n            authService.registerObserverCallback(that.updateAuthData);\r\n\r\n            this.isAuth = authService.authData.isAuth;\r\n            this.currentRole = authService.authData.role;\r\n\r\n            this.hasRole = function (allowedRoles) {\r\n                if (that.isAuth) {\r\n                    if (!allowedRoles) {\r\n                        return that.currentRole == 'Admin';\r\n                    }\r\n\r\n                    return allowedRoles.indexOf(that.currentRole) != -1 || that.currentRole == 'Admin';\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }]\r\n    });\r\n\r\n","angular.module('VektorApp')\r\n    .directive(\"compareTo\",\r\n        function() {\r\n            return {\r\n                require: \"ngModel\",\r\n                scope: {\r\n                    otherModelValue: \"=compareTo\"\r\n                },\r\n                link: function(scope, element, attributes, ngModel) {\r\n\r\n                    ngModel.$validators.compareTo=function(modelValue) {\r\n                        return modelValue == scope.otherModelValue;\r\n                    };\r\n\r\n                    scope.$watch(\"otherModelValue\",\r\n                        function() {\r\n                            ngModel.$validate();\r\n                        });\r\n                }\r\n            };\r\n        });","'use strict';\r\n\r\nangular.module('manageAccount', ['core.manageAccount', 'core.authentication']);","'use strict';\r\n\r\nangular.module('manageAccount').component('manageAccount', {\r\n    templateUrl: 'Content/app/manage-account/manage-account.template.html',\r\n    controller: ['ManageAccountService', 'AuthService', function (manageAccountService, authService) {\r\n        var that = this;\r\n\r\n        this.message = \"\";\r\n        this.updateSuccefull = null;\r\n        this.accountData = {};\r\n\r\n        manageAccountService.getAccountInfo().then(function (response) {\r\n            that.accountData.email = response.Email;\r\n            that.accountData.name = response.Name;\r\n        });\r\n\r\n        this.update = function (formValid) {\r\n            if (formValid) {\r\n                manageAccountService.updateAccount(this.accountData)\r\n                    .then(function () {\r\n                        that.message = \"Account has been successfully updated\";\r\n                        that.updateSuccefull = true;\r\n\r\n                        authService.UpdateAuthData(that.accountData.email, that.accounData.name);\r\n                    },\r\n                    function (response) {\r\n                        var errors = [];\r\n                        for (var key in response.data.ModelState) {\r\n                            for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                                errors.push(response.data.ModelState[key][i]);\r\n                            }\r\n                        }\r\n\r\n                        that.message = errors.join('\\n');\r\n                        that.updateSuccefull = false;\r\n                    });\r\n            }\r\n        }\r\n    }]\r\n});","angular.module('googleMaps', []);","'use strict';\r\n\r\n// Define the `googleMaps` service\r\nangular.module('googleMaps')\r\n    .factory('googleMapsService', [function () {\r\n        var googleMapsFactory = {};\r\n        var directionsService = new google.maps.DirectionsService;\r\n        var googleMapsServiceBase = 'https://maps.googleapis.com/maps/api/staticmap?size=500x400&maptype=roadmap';\r\n\r\n        googleMapsFactory.optimizeWaypoints = function (cityFrom, cityTo, waypoints, callback) {\r\n            var orderedWaypoints = [];\r\n\r\n            directionsService.route({\r\n                origin: cityFrom + ', Украина',\r\n                destination: cityTo + ', Украина',\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                waypoints: waypoints ,\r\n                optimizeWaypoints: true\r\n            }, function (response) {\r\n                if (response != null) {\r\n                    response.routes[0].waypoint_order.map((order) => orderedWaypoints.push(waypoints[order]));\r\n                };\r\n\r\n                callback({response: response, waypoints: orderedWaypoints});\r\n            });\r\n        }\r\n\r\n        googleMapsFactory.getGoogleMapsImage = function (cityFrom, cityTo, waypoints, polyline, callback) {\r\n            //generate static maps url with direction polyline\r\n            var url = googleMapsServiceBase.concat(\r\n                googleMapsFactory.covertWaypointsToUrlParams(cityFrom, cityTo, waypoints),\r\n                '&path=color:0x0000ff80|weight:5|enc:', polyline,\r\n                '&key=AIzaSyBkEIsxJ1ZqsEBPUYsef_jF2ajuSkmbxJ4');\r\n\r\n            //convert image to base64\r\n            googleMapsFactory.convertImgToDataURL(url, callback);\r\n        }\r\n\r\n        googleMapsFactory.covertWaypointsToUrlParams = function (cityFrom, cityTo, waypoints) {\r\n            var urlParams = '';\r\n\r\n            //variable to avoid js locking\r\n            var getUrlParam = function (location, color) {\r\n                color = color ? color : 'green';\r\n\r\n                return '&markers=color:' + color + '|' + location;\r\n            };\r\n\r\n            urlParams += getUrlParam(cityFrom);\r\n            waypoints.map((waypoint) => urlParams += getUrlParam(waypoint.location));\r\n            urlParams += getUrlParam(cityTo, 'red');\r\n\r\n            return urlParams;\r\n        }\r\n\r\n        googleMapsFactory.convertImgToDataURL = function (url, callback) {\r\n            var img = new Image();\r\n            img.crossOrigin = 'Anonymous';\r\n\r\n            img.onload = function () {\r\n                var canvas = document.createElement('CANVAS');\r\n                var ctx = canvas.getContext('2d');\r\n                var dataURL;\r\n\r\n                canvas.height = this.height;\r\n                canvas.width = this.width;\r\n                ctx.drawImage(this, 0, 0);\r\n\r\n                dataURL = canvas.toDataURL();\r\n                callback(dataURL);\r\n\r\n                canvas = null;\r\n            };\r\n\r\n            img.src = url;\r\n        }\r\n\r\n        return googleMapsFactory;\r\n    }]);","angular.module('VektorApp')\r\n\t.directive('loading', ['$http', '$timeout', function ($http, $timeout) {\r\n\treturn {\r\n\t\trestrict: 'A',\r\n\t\tlink: function (scope, elm, attrs) {\r\n\t\t\tscope.isLoading = function () {\r\n\t\t\t\treturn $http.pendingRequests.length > 0;\r\n\t\t\t};\r\n\r\n\t\t\tscope.$watch(scope.isLoading, function (newValue) {\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t    elm.show();\r\n\t\t\t\t} else {\r\n\t\t\t\t\telm.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n}]);"]}