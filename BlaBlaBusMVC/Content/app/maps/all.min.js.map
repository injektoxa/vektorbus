{"version":3,"sources":["app.module.js","app.config.js","app.animations.js","core/core.module.js","core/checkmark/checkmark.filter.js","core/client/client.module.js","core/client/client.service.js","core/clientTrip/clientTrip.module.js","core/clientTrip/clientTrip.service.js","core/trip/trip.module.js","core/trip/trip.service.js","core/trip/trip-cash.service.js","core/driver/driver.module.js","core/driver/driver.service.js","core/bus/bus.module.js","core/bus/bus.service.js","core/city/city.module.js","core/city/city.service.js","core/agent/agent.module.js","core/agent/agent.service.js","core/agentReport/agentReport.module.js","core/agentReport/agentReport.service.js","core/driverReport/driverReport.module.js","core/driverReport/driverReport.service.js","core/authentication/authentication.module.js","core/authentication/authentication.service.js","core/authentication/authInterceptor.service.js","core/manageAccount/manageAccount.module.js","core/manageAccount/manageAccount.service.js","clientTrip-list/clientTrip-list.module.js","clientTrip-list/clientTrip-list.component.js","client-detail/client-detail.module.js","client-detail/client-detail.component.js","trip-list/trip-list.module.js","trip-list/trip-list.component.js","driver-list/driver-list.module.js","driver-list/driver-list.component.js","driver-list/driver-crud/driver-crud.module.js","driver-list/driver-crud/driver-crud.component.js","bus-list/modal/modalBus.module.js","bus-list/modal/modalBus.component.js","bus-list/bus-list.module.js","bus-list/bus-list.component.js","agent-list/agent-list.module.js","agent-list/agent-list.component.js","agent-list/modal/modalAgent.module.js","agent-list/modal/modalAgent.component.js","reports/reports.module.js","reports/agent-reports.component.js","reports/driver-reports.component.js","client-list/client-list.module.js","client-list/client-list.component.js","client-list/modal/modalClient.module.js","client-list/modal/modalClient.component.js","client-list/modal/modalClientTrips.component.js","cities-list/cities-list.module.js","cities-list/cities-list.component.js","pdfMaker/pdfMaker.module.js","pdfMaker/pdfMaker.service.js","authentication/signup/signup.module.js","authentication/signup/signup.component.js","authentication/signin/signin.module.js","authentication/signin/signin.component.js","navbar/navbar.module.js","navbar/navbar.component.js","Derectives/compare-passwords.derective.js","manage-account/manage-account.module.js","manage-account/manage-account.component.js","google-maps/google-maps.module.js","google-maps/google-maps.service.js","Derectives/loading.derective.js"],"names":["angular","module","constant","ClientAccessRoles","BussesAccessRoles","AllRoles","config","$locationProvider","$routeProvider","authConstants","$httpProvider","$qProvider","interceptors","push","defaults","useXDomain","headers","common","html5Mode","errorOnUnhandledRejections","when","template","acceptedRoles","allowAnonymus","templateUrl","otherwise","run","$rootScope","$location","authService","$on","event","next","currentRole","authData","role","indexOf","isAuth","path","animation","animateIn","element","className","done","css","display","position","top","left","animate","wasCanceled","stop","animateOut","addClass","removeClass","filter","input","factory","$resource","query","method","isArray","add","update","remove","params","Id","get","countDriverCashBox","trip","expenseSumFun","acc","expense","Cost","compulsoryExpensesSum","compulsoryExpenses","reduce","unexpectedExpensesSum","unexpectedExpenses","incomes","tripClients","client","Price","service","id","dateFrom","dateTo","authDataResourceKey","localStorageService","$http","$q","authServiceFactory","observerCallbacks","name","registerObserverCallback","callback","notifyObservers","forEach","saveRegistration","registration","logOut","post","then","response","login","loginData","data","email","password","deferred","defer","Content-Type","set","token","access_token","resolve","err","status","reject","promise","UpdateAuthData","previousData","newName","$injector","authInterceptorServiceFactory","request","Authorization","responseError","rejection","manageAccountFactory","updateAccount","accountData","put","getAccountInfo","component","controller","ClientTrip","$scope","City","Agent","that","this","clientFilter","clients","cities","agents","orderProp","removeFromTrip","index","$parent","$ctrl","splice","addToTrip","console","log","clientFilterAction","length","clientTrips","filterThrottled","_","debounce","$watch","$routeParams","Client","self","clientId","Trip","Bus","Driver","$uibModal","PdfMaker","$filter","googleMapsService","tripCashService","showAddTripForm","isEditMode","dateNow","Date","mapCenterLatLng","startDate","startTime","endDate","endTime","trips","buses","drivers","dateFormat","dateOptions","minDate","showWeeks","startingDay","timeOptions","minuteStep","startDatePopup","opened","startDateOpen","endDatePopup","endDateOpen","showAddForm","submitted","form","$setValidity","$invalid","create","joinTripDateAndTime","createdTrip","clearTripModel","updatedTrip","$setPristine","$setUntouched","$broadcast","date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","arrivalDate","openDriversList","modalOptions","backdrop","size","modalInstance","open","result","createPDF","tableBody","text","style","i","Name","Phone","To","From","toString","IsStayInBus","HasMinorChild","HasDisability","compolsuryExpenseTable","unexpectedExpenseTable","map","Comment","bus","FriendlyName","RegistrationNumber","driver","FullName","fileName","cityFrom","concat","cityTo","getGoogleMapsImage","waypoints","polyline","base64Img","options","docDefinition","pageOrientation","fontSize","content","columns","width","table","headerRows","body","image","createAndDownload","editTrip","disableEditMode","delete","msg","confirm","deletedTrip","e","error","errorMessage","Message","alert","addCompolsoryExpense","cost","comment","compulsoryNewCost","compulsoryNewComment","addUnexpectedExpens","unexpectedNewCost","unexpectedNewComment","getDriverCashbox","mapInitialized","google","maps","trigger","setZoom","initMap","getTripWaypoints","origin","destination","addToWaypoints","location","some","wp","stopover","optimizeWaypoints","$watchCollection","newValue","previousValue","bindings","close","dismiss","addDriverBlockVisible","addNewClass","$onInit","closeModal","$value","editDriver","showAddDriverBlock","deleteDriver","maxPhotoWidth","maxPhotoHeight","cancel","save","editedDriver","createdDriver","deletedDriver","$","attr","Photo","resizeBase64Img","maxWidth","maxHeight","canvas","document","createElement","Deferred","load","height","context","getContext","drawImage","toDataURL","change","files","fr","FileReader","onload","target","newImg","src","replace","readAsDataURL","headerTitle","ok","addBus","createdBus","clearBus","editBus","deleteBus","deletedBus","agent","addAgent","createdAgent","clearAgent","editAgent","deleteAgent","deletedAgent","AgentReport","pdfMaker","dateTimeFormat","maxDate","reports","reportTitle","totalTitle","totalPrice","reportIsShowing","onGetReports","AgentCompensation","createReport","report","TripDate","CityFrom","CityTo","BusInfo","DriverInfo","ClientsCount","datePeriod","DriverReport","DriverCashBox","CompulsoryExpenses","UnexpectedExpenses","addClient","createdClient","clearClient","editClient","deleteClient","deletedClient","clientInfo","info","getClienPrice","found","ClientId","getClienAdditionalExpenses","AdditionalExpenses","showAddCityForm","choosedPlace","autocompleteOptions","componentRestrictions","country","types","saveCity","cityName","removeCity","cityId","el","setCityFromAutocomplete","place","city","pdfMake","createPdf","download","createAndOpen","savedSuccessfully","message","confirmPassword","signUp","formValid","errors","key","ModelState","join","error_description","BusesAccessRoles","updateAuthData","hasRole","allowedRoles","directive","require","scope","otherModelValue","link","attributes","ngModel","$validators","compareTo","modelValue","$validate","manageAccountService","updateSuccefull","Email","accounData","googleMapsFactory","directionsService","DirectionsService","googleMapsServiceBase","orderedWaypoints","route","travelMode","TravelMode","DRIVING","routes","waypoint_order","order","overview_polyline","url","covertWaypointsToUrlParams","convertImgToDataURL","urlParams","getUrlParam","color","waypoint","img","Image","crossOrigin","dataURL","ctx","$timeout","restrict","elm","attrs","isLoading","pendingRequests","show","hide"],"mappings":"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","file":"../all.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('VektorApp', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ui.bootstrap',\r\n  'core',\r\n  'pdfMaker',\r\n  'clientDetail',\r\n  'clientList',\r\n  'clientTripList',\r\n  'tripList',\r\n  'busList',\r\n  'modalBus',\r\n  'driverList',\r\n  'driverCrud',\r\n  'citiesList',\r\n  'agentList',\r\n  'modalAgent',\r\n  'modalClient',\r\n  'reports',\r\n  'signUp',\r\n  'signIn',\r\n  'LocalStorageModule',\r\n  'navBar',\r\n  'manageAccount',\r\n  'googleMaps'\r\n]);","'use strict';\r\n\r\nangular.\r\n    module('VektorApp')\r\n    .constant('authConstants',\r\n    {\r\n        ClientAccessRoles: ['Driver'],\r\n        BussesAccessRoles: ['Driver', 'Partner'],\r\n        AllRoles: ['User', 'Driver', 'Partner']\r\n    })\r\n    .config(['$locationProvider', '$routeProvider', 'authConstants', '$httpProvider', '$qProvider',\r\n        function config($locationProvider, $routeProvider, authConstants, $httpProvider, $qProvider) {\r\n\r\n            $httpProvider.interceptors.push('authInterceptorService');\r\n\r\n            //allow CORS\r\n            $httpProvider.defaults.useXDomain = true;\r\n            delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n\r\n            $locationProvider.html5Mode(true);\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n\r\n            $routeProvider.\r\n                when('/clients',\r\n                {\r\n                    template: '<client-list></client-list>',\r\n                    acceptedRoles: authConstants.ClientAccessRoles\r\n                }).\r\n                when('/clients/:clientId',\r\n                {\r\n                    template: '<client-detail></client-detail>'\r\n                }).\r\n                when('/trips',\r\n                {\r\n                    template: '<trip-list></trip-list>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                when('/buses',\r\n                {\r\n                    template: '<bus-list></bus-list>',\r\n                    acceptedRoles: authConstants.BussesAccessRoles\r\n                }).\r\n                when('/cities',\r\n                {\r\n                    template: '<cities-list></cities-list>'\r\n                }).\r\n                when('/signup',\r\n                {\r\n                    template: '<sign-up></sign-up>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/login',\r\n                {\r\n                    template: '<sign-in></sign-in>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/agents',\r\n                {\r\n                    template: '<agent-list></agent-list>'\r\n                }).\r\n                when('/agentReports',\r\n                {\r\n                    template: '<agent-reports></agent-reports>'\r\n                }).\r\n                when('/driverReports',\r\n                {\r\n                    template: '<driver-reports></driver-reports>'\r\n                }).\r\n                when('/access-forbidden',\r\n                {\r\n                    templateUrl: 'Content/app/access-forbidden.html',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/manageAccount',\r\n                {\r\n                    template: '<manage-account></manage-account>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                otherwise('/trips');\r\n        }\r\n    ]).run(['$rootScope', '$location', 'AuthService',\r\n        function ($rootScope, $location, authService) {\r\n            $rootScope.$on('$routeChangeStart',\r\n                function (event, next) {\r\n                    var currentRole = authService.authData.role; \r\n                    next.acceptedRoles = next.acceptedRoles ? next.acceptedRoles : [];\r\n\r\n                    //if current user is not authenticated or his role is not accepted to view particular route\r\n                    if (next.allowAnonymus) {\r\n                        return true;\r\n                    }\r\n\r\n                    if (currentRole != \"Admin\" && next.acceptedRoles.indexOf(currentRole) == -1) {\r\n                        if (!authService.authData.isAuth) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $location.path('/access-forbidden');\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n    ]);","'use strict';\r\n\r\nangular.\r\n  module('VektorApp').\r\n  animation('.client', function clientAnimationFactory() {\r\n    return {\r\n      addClass: animateIn,\r\n      removeClass: animateOut\r\n    };\r\n\r\n    function animateIn(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: 500,\r\n        left: 0\r\n      }).animate({\r\n        top: 0\r\n      }, done);\r\n\r\n      return function animateInEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n\r\n    function animateOut(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n      }).animate({\r\n        top: -500\r\n      }, done);\r\n\r\n      return function animateOutEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core` module\r\nangular.module('core', ['core.client', 'core.trip', 'core.bus', 'core.city', 'core.manageAccount',\r\n    'core.driver', 'core.agent', 'core.agentReport', 'core.driverReport', 'core.clientTrip', 'core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('core').\r\n  filter('checkmark', function() {\r\n    return function(input) {\r\n      return input ? '\\u2713' : '\\u2718';\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core.client` module\r\nangular.module('core.client', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.client').\r\n  factory('Client', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clients/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.clientTrip` module\r\nangular.module('core.clientTrip', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.clientTrip').\r\n  factory('ClientTrip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clientTrips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.trip', ['ngResource']);","angular.\r\n  module('core.trip').\r\n  factory('Trip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/trips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            get: {\r\n                method: 'GET',\r\n                params: { Id: 'id' }\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE'\r\n            }\r\n        });\r\n    }\r\n  ]);","angular.module('core.trip')\r\n    .factory('tripCashService', function () {\r\n        return {\r\n            countDriverCashBox: function (trip) {\r\n                var expenseSumFun = (acc, expense) => acc + expense.Cost;\r\n\r\n                var compulsoryExpensesSum = trip.compulsoryExpenses.reduce(expenseSumFun, 0);\r\n                var unexpectedExpensesSum = trip.unexpectedExpenses.reduce(expenseSumFun, 0);\r\n\r\n                var incomes = trip.tripClients.reduce((acc, client) => acc + client.Price, 0);\r\n\r\n                return incomes - (compulsoryExpensesSum + unexpectedExpensesSum);\r\n            }\r\n        }\r\n    });\r\n","'use strict';\r\n\r\nangular.module('core.driver', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.driver').\r\n  factory('Driver', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/drivers/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.bus` module\r\nangular.module('core.bus', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.bus').\r\n  factory('Bus', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/buses/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.city', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.city').\r\n  service('City', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/Cities/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agent` module\r\nangular.module('core.agent', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.agent').\r\n  factory('Agent', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agents/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agentReport` module\r\nangular.module('core.agentReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.agentReport').\r\n  factory('AgentReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agentReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.driverReport` module\r\nangular.module('core.driverReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.driverReport').\r\n  factory('DriverReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/driverReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.authentication', []);","'use strict';\r\n\r\nconst authDataResourceKey = \"authorizationData\";\r\n\r\nangular.\r\n  module('core.authentication').\r\n      factory('AuthService', ['localStorageService', '$http', '$q', function (localStorageService, $http, $q) {\r\n          var authServiceFactory = {};\r\n          var observerCallbacks = [];\r\n\r\n          var authData = localStorageService.get(authDataResourceKey);\r\n          authServiceFactory.authData = {\r\n              isAuth: authData != null,\r\n              name: authData ? authData.name : \"\",\r\n              role: authData ? authData.role : \"guest\",\r\n          };\r\n\r\n          authServiceFactory.registerObserverCallback = function (callback) {\r\n              observerCallbacks.push(callback);\r\n          };\r\n\r\n          //call this when you know that authData has been changed\r\n          var notifyObservers = function () {\r\n              angular.forEach(observerCallbacks, function (callback) {\r\n                  callback();\r\n              });\r\n          }\r\n\r\n          authServiceFactory.saveRegistration = function (registration) {\r\n              authServiceFactory.logOut();\r\n\r\n              return $http.post('/api/Account/Register', registration).then(function (response) {\r\n                  return response;\r\n              });\r\n          };\r\n\r\n          authServiceFactory.logOut = function () {\r\n              localStorageService.remove(authDataResourceKey);\r\n\r\n              authServiceFactory.authData.isAuth = false;\r\n              authServiceFactory.authData.role = \"\";\r\n              authServiceFactory.authData.name = \"\";\r\n\r\n              notifyObservers();\r\n          };\r\n\r\n          authServiceFactory.login = function (loginData) {\r\n              var data = \"grant_type=password&username=\" + loginData.email + \"&password=\" + loginData.password;\r\n\r\n              var deferred = $q.defer();\r\n\r\n              $http.post('/api/token', data, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                   .then(function (response) {\r\n                       localStorageService.set(authDataResourceKey, { token: response.data.access_token, name: response.data.name, role: response.data.role });\r\n\r\n                       authServiceFactory.authData.isAuth = true;\r\n                       authServiceFactory.authData.name = response.data.name;\r\n                       authServiceFactory.authData.role = response.data.role;\r\n\r\n                       notifyObservers();\r\n\r\n                       deferred.resolve(response);\r\n                   },\r\n                   function (err, status) {\r\n                       authServiceFactory.logOut();\r\n                       deferred.reject(err);\r\n                   });\r\n\r\n              return deferred.promise;\r\n          };\r\n\r\n          authServiceFactory.UpdateAuthData = function (email, name) {\r\n              var previousData = localStorageService.get(authDataResourceKey);\r\n\r\n              var newName = name ? name : previousData.name;\r\n\r\n              localStorageService.set(authDataResourceKey,\r\n              {\r\n                  token: previousData.token,\r\n                  name: newName\r\n              });\r\n\r\n              authServiceFactory.authData.name = newName;\r\n              notifyObservers();\r\n          }\r\n\r\n          return authServiceFactory;\r\n      }\r\n    ]);","'use strict';\r\nangular.module('core.authentication')\r\n    .factory('authInterceptorService', ['$q', '$injector', '$location', 'localStorageService', function ($q, $injector, $location, localStorageService) {\r\n\r\n        var authInterceptorServiceFactory = {};\r\n\r\n        authInterceptorServiceFactory.request = function (config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = localStorageService.get('authorizationData');\r\n\r\n            if (authData) {\r\n                config.headers.Authorization = 'Bearer ' + authData.token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        authInterceptorServiceFactory.responseError = function (rejection) {\r\n            if (rejection.status === 401) {\r\n                var authService = $injector.get('authService');\r\n\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        return authInterceptorServiceFactory;\r\n    }]);","'use strict';\r\n\r\nangular.module('core.manageAccount', []);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.manageAccount').\r\n  factory('ManageAccountService', ['$http',\r\n    function ($http) {\r\n        var manageAccountFactory = {};\r\n\r\n        manageAccountFactory.updateAccount = function (accountData) {\r\n            return $http.put('/api/Account/', accountData).then(function(response) {\r\n                return response;\r\n            });\r\n        }\r\n\r\n        manageAccountFactory.getAccountInfo = function () {\r\n            return $http.get('/api/Account/').then(function(response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        return manageAccountFactory;\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `clientTripList` module\r\nangular.module('clientTripList', ['core.clientTrip']);\r\n","'use strict';\r\n\r\n// Register `clientTripList` component, along with its associated controller and template\r\nangular.\r\n  module('clientTripList').\r\n  component('clientTripList', {\r\n      templateUrl: 'Content/app/clientTrip-list/clientTrip-list.template.html',\r\n      controller: ['ClientTrip', '$scope', 'City', 'Agent',\r\n        function (ClientTrip, $scope, City, Agent) {\r\n            var that = this;\r\n\r\n            this.clientFilter = '';\r\n            this.clients = [];\r\n            this.cities = City.query();\r\n            this.agents = Agent.query();\r\n            this.orderProp = 'Id';\r\n\r\n            this.removeFromTrip = function (client) {\r\n                var index = $scope.$parent.$ctrl.trip.tripClients.indexOf(client);\r\n                $scope.$parent.$ctrl.trip.tripClients.splice(index, 1);\r\n            }\r\n\r\n            this.addToTrip = function (client) {\r\n                if ($scope.$parent.$ctrl.trip.tripClients.indexOf(client) === -1) {\r\n                    $scope.$parent.$ctrl.trip.tripClients.push(client);\r\n                }\r\n                else {\r\n                    console.log(\"This item already exists\");\r\n                }\r\n            }\r\n\r\n            this.clientFilterAction = function () {\r\n                if (that.clientFilter.length > 1) {\r\n                    ClientTrip.query({ filter: that.clientFilter },\r\n                        function (clientTrips) {\r\n                            that.clients = clientTrips;\r\n                        });\r\n                } else {\r\n                    that.clients = [];\r\n                }\r\n            };\r\n\r\n            this.filterThrottled = _.debounce(that.clientFilterAction, 500);\r\n\r\n            $scope.$watch('$ctrl.clientFilter', that.filterThrottled);\r\n\r\n            $scope.$on('clearClientTripsEvent', function (event, params) {\r\n                that.clientFilter = '';\r\n                that.clients = [];\r\n            });\r\n        }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `clientDetail` module\r\nangular.module('clientDetail', [\r\n  'ngRoute',\r\n  'core.client'\r\n]);\r\n","'use strict';\r\n\r\n// Register `clientDetail` component, along with its associated controller and template\r\nangular.\r\n  module('clientDetail').\r\n  component('clientDetail', {\r\n    templateUrl: 'Content/app/client-detail/client-detail.template.html',\r\n    controller: ['$routeParams', 'Client',\r\n      function ClientDetailController($routeParams, Client) {\r\n        var self = this;\r\n        self.client = Client.get({clientId: $routeParams.clientId}, function(client) {\r\n          //self.setImage(client.images[0]);\r\n        });\r\n\r\n        //self.setImage = function setImage(imageUrl) {\r\n        //  self.mainImageUrl = imageUrl;\r\n        //};\r\n      }\r\n    ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('tripList', ['core.trip', 'core.bus', 'ngMap', 'googleMaps']);","'use strict';\r\n\r\nangular.\r\nmodule('tripList').\r\ncomponent('tripList', {\r\n    templateUrl: 'Content/app/trip-list/trip-list.template.html',\r\n    controller: ['Trip', 'Bus', 'City', 'Driver', '$uibModal', '$scope', 'PdfMaker', '$filter', 'googleMapsService', 'tripCashService', '$q',\r\n        function (Trip, Bus, City, Driver, $uibModal, $scope, PdfMaker, $filter, googleMapsService, tripCashService, $q) {\r\n            var that = this;\r\n\r\n            this.showAddTripForm = false;\r\n            this.isEditMode = false;\r\n            this.dateNow = new Date();\r\n            this.mapCenterLatLng = '49.361625, 32.139730';\r\n\r\n            this.trip = {\r\n                tripClients: [],\r\n                compulsoryExpenses: [],\r\n                unexpectedExpenses: [],\r\n                startDate: that.dateNow,\r\n                startTime: that.dateNow,\r\n                endDate: that.dateNow,\r\n                endTime: that.dateNow\r\n            };\r\n\r\n            this.trips = Trip.query();\r\n            this.buses = Bus.query();\r\n            this.cities = City.query();\r\n            this.drivers = Driver.query();\r\n            this.dateFormat = \"dd-MMM-yyyy\";\r\n            this.dateOptions = {\r\n                minDate: new Date(),\r\n                showWeeks: false,\r\n                startingDay: 1\r\n            };\r\n\r\n            this.timeOptions = {\r\n                minuteStep: 5\r\n            }\r\n\r\n            this.startDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.startDateOpen = function () {\r\n                that.startDatePopup.opened = true;\r\n            };\r\n\r\n            this.endDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.endDateOpen = function () {\r\n                that.endDatePopup.opened = true;\r\n            };\r\n\r\n            this.showAddForm = function () {\r\n                that.showAddTripForm = !that.showAddTripForm;\r\n            }\r\n\r\n            this.add = function () {\r\n                that.submitted = true;\r\n\r\n                if (that.trip.tripClients.length === 0) {\r\n                    $scope.form.$setValidity('isAnyClient', false);\r\n                    return;\r\n                }\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (that.isEditMode) {\r\n                    that.update();\r\n                } else {\r\n                    that.create();\r\n                }\r\n            };\r\n\r\n            this.create = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.add(that.trip, function (createdTrip) {\r\n                    that.trips.push(createdTrip);\r\n                    that.showAddTripForm = false;\r\n                    that.clearTripModel();\r\n                });\r\n            };\r\n\r\n            this.update = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.update(\r\n                    { id: that.trip.id },\r\n                    that.trip,\r\n                    function (updatedTrip) {\r\n                        that.showAddTripForm = false;\r\n                        that.clearTripModel();\r\n                    });\r\n            };\r\n\r\n            this.clearTripModel = function () {\r\n                that.dateNow = new Date();\r\n                that.isEditMode = false;\r\n                that.trip = {\r\n                    tripClients: [],\r\n                    startDate: that.dateNow,\r\n                    startTime: that.dateNow,\r\n                    endDate: that.dateNow,\r\n                    endTime: that.dateNow\r\n                };\r\n                that.submitted = false;\r\n                $scope.form.$setPristine();\r\n                $scope.form.$setUntouched();\r\n                $scope.$broadcast('clearClientTripsEvent');\r\n            };\r\n\r\n            this.joinTripDateAndTime = function () {\r\n                that.trip.date = new Date(Date.UTC(\r\n                    that.trip.startDate.getFullYear(),\r\n                    that.trip.startDate.getMonth(),\r\n                    that.trip.startDate.getDate(),\r\n                    that.trip.startTime.getHours(),\r\n                    that.trip.startTime.getMinutes()));\r\n\r\n                that.trip.arrivalDate = new Date(Date.UTC(\r\n                    that.trip.endDate.getFullYear(),\r\n                    that.trip.endDate.getMonth(),\r\n                    that.trip.endDate.getDate(),\r\n                    that.trip.endTime.getHours(),\r\n                    that.trip.endTime.getMinutes()));\r\n            };\r\n\r\n            this.openDriversList = function () {\r\n                var modalOptions = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    component: 'driverList',\r\n                    resolve: {\r\n                        drivers: function () {\r\n                            return that.drivers;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var modalInstance = $uibModal.open(modalOptions);\r\n\r\n                modalInstance.result.then(function (drivers) {\r\n                    that.drivers = drivers;\r\n                });\r\n            };\r\n\r\n            this.createPDF = function (trip) {\r\n                var tableBody = [\r\n                    [\r\n                        { text: 'Имя Фамилия', style: 'tableHeader' },\r\n                        { text: 'Телефон', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Стоимость', style: 'tableHeader' },\r\n                        { text: 'Не выходит', style: 'tableHeader' },\r\n                        { text: 'Статус', style: 'tableHeader' }\r\n                    ]\r\n                ];\r\n\r\n                for (var i = 0; i < trip.tripClients.length; i++) {\r\n                    tableBody.push([\r\n                        trip.tripClients[i].Name,\r\n                        trip.tripClients[i].Phone,\r\n                        trip.tripClients[i].To ? trip.tripClients[i].To : '',\r\n                        trip.tripClients[i].From ? trip.tripClients[i].From : '',\r\n                        trip.tripClients[i].Price.toString(),\r\n                        trip.tripClients[i].IsStayInBus ? 'Да' : '',\r\n                        (trip.tripClients[i].HasMinorChild ? 'С ребенком; ' : '') +\r\n                        (trip.tripClients[i].HasDisability ? 'Инвалид' : '')\r\n                    ]);\r\n                }\r\n\r\n                //pdfMake doesnt work with initializing via variable\r\n                var compolsuryExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n                var unexpectedExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n\r\n                trip.compulsoryExpenses.map((expense) =>\r\n                    compolsuryExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                trip.unexpectedExpenses.map((expense) =>\r\n                    unexpectedExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                var bus = trip.bus != null ? trip.bus.FriendlyName + ' ' + trip.bus.RegistrationNumber + ', ' : '';\r\n                var driver = trip.driver != null ? 'Водитель: ' + trip.driver.FullName : '';\r\n                var fileName = trip.cityFrom.Name.concat(' - ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy/MM/dd\"), '.pdf');\r\n\r\n                googleMapsService.getGoogleMapsImage(trip.cityFrom.Name, trip.cityTo.Name, trip.waypoints, trip.polyline,\r\n                   function (base64Img) {\r\n                       var options = {\r\n                           fileName: fileName,\r\n                           docDefinition: {\r\n                               pageOrientation: 'portrait',\r\n                               fontSize: 12,\r\n                               content: [\r\n                                   {\r\n                                       text: trip.cityFrom.Name.concat(' --> ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy-MM-dd HH:mm\"))\r\n                                   },\r\n                                   {\r\n                                       text: bus + driver\r\n                                   },\r\n                                   {\r\n                                       text: ' '\r\n                                   },\r\n                                   {\r\n                                       columns: [\r\n                                       {\r\n                                           width: '50%',\r\n                                           text: 'Обязательные расходы:'\r\n                                       },\r\n                                       {\r\n                                           width: '50%',\r\n                                           text: 'Дополнительные расходы:'\r\n                                       }]\r\n                                   },\r\n                                   {\r\n                                       columns: [\r\n                                       {\r\n                                           width: '50%',\r\n                                           table: {\r\n                                               headerRows: 1,\r\n                                               body: compolsuryExpenseTable\r\n                                           }\r\n                                       },\r\n                                       {\r\n                                           width: '50%',\r\n                                           table: {\r\n                                               headerRows: 1,\r\n                                               body: unexpectedExpenseTable\r\n                                           }\r\n                                       }]\r\n                                   },\r\n                                   {\r\n                                       text: ' '\r\n                                   },\r\n                                   {\r\n                                       text: 'Касса водителя: ' + tripCashService.countDriverCashBox(trip)\r\n                                   },\r\n                                   {\r\n                                       text: ' '\r\n                                   },\r\n                                   {\r\n                                       text: 'Клиенты:'\r\n                                   },\r\n                                   {\r\n                                       table: {\r\n                                           headerRows: 1,\r\n                                           body: tableBody\r\n                                       }\r\n                                   },\r\n                                   {\r\n                                       text: ' '\r\n                                   },\r\n                                   {\r\n                                       image: base64Img\r\n                                   }\r\n                               ]\r\n                           }\r\n                       }\r\n\r\n                       PdfMaker.createAndDownload(options);\r\n                   });\r\n            }\r\n\r\n            this.editTrip = function (trip) {\r\n                var startDate = new Date(trip.date);\r\n                var endDate = new Date(trip.arrivalDate);\r\n\r\n                that.isEditMode = true;\r\n                that.trip = trip;\r\n                that.trip.startDate = startDate;\r\n                that.trip.startTime = startDate;\r\n                that.trip.endDate = endDate;\r\n                that.trip.endTime = endDate;\r\n                that.showAddTripForm = true;\r\n            };\r\n\r\n            this.disableEditMode = function () {\r\n                that.showAddTripForm = false;\r\n                that.isEditMode = false;\r\n                that.clearTripModel();\r\n            }\r\n\r\n            this.delete = function (trip) {\r\n                var msg = 'Вы уверены, что хотите удалить маршрут ' + trip.cityFrom.Name + '---->' + trip.cityTo.Name + ', ' + trip.date + '?';\r\n                if (confirm(msg)) {\r\n                    Trip.remove({ id: trip.id },\r\n                        function onSuccess(deletedTrip) {\r\n                            var index = that.trips.map(function (e) { return e.id }).indexOf(deletedTrip.id);\r\n                            if (index > -1) {\r\n                                that.trips.splice(index, 1);\r\n                            }\r\n                        },\r\n                        function onError(error) {\r\n                            var errorMessage = 'Маршрут не удален. Ошибка удаления: ' + error.data.Message;\r\n                            alert(errorMessage);\r\n                        });\r\n                }\r\n            }\r\n\r\n            this.addCompolsoryExpense = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.compulsoryExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.compulsoryNewCost = 0;\r\n                    that.compulsoryNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.addUnexpectedExpens = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.unexpectedExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.unexpectedNewCost = 0;\r\n                    that.unexpectedNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.getDriverCashbox = function (trip) {\r\n                return tripCashService.countDriverCashBox(trip);\r\n            }\r\n\r\n            this.mapInitialized = function (map) {\r\n                google.maps.event.trigger(map, 'resize');\r\n                map.setZoom(5);\r\n            }\r\n\r\n            this.initMap = function (trip) {\r\n                //little hack here to avoid storing several directionRenders services \r\n                //and use default ng-map api for directions service (ng-map does not support waypoint optimization)\r\n                //manually order waypoints in right order, using directions service\r\n                that.getTripWaypoints(trip.tripClients, trip.cityFrom.Name, trip.cityTo.Name)\r\n                    .then(function (response) {\r\n                        trip.waypoints = response.waypoints;\r\n                        trip.polyline = response.polyline;\r\n                    });\r\n            }\r\n\r\n            this.getTripWaypoints = function (clients, origin, destination) {\r\n                var waypoints = [];\r\n                var deferred = $q.defer();\r\n\r\n                var addToWaypoints = function (location) {\r\n                    if (!waypoints.some((wp) => wp.location == location) && location != origin && location != destination) {\r\n                        waypoints.push({ location: location, stopover: true });\r\n                    }\r\n                }\r\n\r\n                clients.map(function (client) {\r\n                    addToWaypoints(client.To);\r\n                    addToWaypoints(client.From);\r\n                });\r\n\r\n                googleMapsService.optimizeWaypoints(origin, destination, waypoints,\r\n                    function (response) {\r\n                        deferred.resolve(response);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            $scope.$watchCollection('$ctrl.trip.tripClients', function (newValue, previousValue) {\r\n                if (newValue && newValue.length > 0) {\r\n                    $scope.form.$setValidity('isAnyClient', true);\r\n                }\r\n            });\r\n        }]\r\n});","'use strict';\r\n\r\n// Define the `driverList` module\r\nangular.module('driverList', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverList')\r\n  .component('driverList',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-list.template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [\r\n        'Driver', '$scope', '$uibModal', function (Driver, $scope, $uibModal) {\r\n            var that = this;\r\n            that.drivers = [];\r\n            that.addDriverBlockVisible = false;\r\n            that.addNewClass = \"\";\r\n\r\n            that.$onInit = function () {\r\n                that.drivers = that.resolve.drivers;\r\n            };\r\n\r\n            that.closeModal = function () {\r\n                that.close({ $value: that.drivers });\r\n            };\r\n\r\n            that.editDriver = function (driver) {\r\n                $scope.$broadcast('editDriverEvent', { driver: driver });\r\n            };\r\n\r\n            that.showAddDriverBlock = function () {\r\n                that.addDriverBlockVisible = !that.addDriverBlockVisible;\r\n                that.addNewClass = that.addDriverBlockVisible ? \"not-active\" : \"\";\r\n            };\r\n\r\n            that.deleteDriver = function (id) {\r\n                $scope.$broadcast('deleteDriverEvent', { id: id });\r\n            };\r\n        }\r\n      ]\r\n  });","'use strict';\r\n\r\n// Define the `driverCrud` module\r\nangular.module('driverCrud', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverCrud')\r\n  .component('driverCrud',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-crud/driver-crud.template.html',\r\n    controller: [\r\n      'Driver', '$scope', function (Driver, $scope) {\r\n        var that = this;\r\n        this.maxPhotoWidth = 150;\r\n        this.maxPhotoHeight = 150;\r\n        this.driver = {};\r\n\r\n        this.cancel = function () {\r\n          $scope.$parent.$ctrl.showAddDriverBlock();\r\n        };\r\n\r\n        this.save = function (driver) {\r\n          that.driver = driver;\r\n          if (driver.Id > 0) {\r\n            Driver.update({ id: driver.Id },\r\n              driver,\r\n              function (editedDriver) {\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          } else {\r\n            Driver.add(driver,\r\n              function onSuccess(createdDriver) {\r\n                $scope.$parent.$ctrl.drivers.push(createdDriver);\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          }\r\n        };\r\n\r\n        this.deleteDriver = function (id) {\r\n          Driver.delete({ id: id },\r\n            function onSuccess(deletedDriver) {\r\n              var index = $scope.$parent.$ctrl.drivers.map(function(e) { return e.Id }).indexOf(deletedDriver.Id);\r\n              if (index > -1) {\r\n                $scope.$parent.$ctrl.drivers.splice(index, 1);\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        $scope.$on('deleteDriverEvent',\r\n          function(event, params) {\r\n            that.deleteDriver(params.id);\r\n          }\r\n        );\r\n\r\n        $scope.$on('editDriverEvent',\r\n          function (event, params) {\r\n            that.driver = params.driver;\r\n            $(\"#photoPreview\").attr(\"src\", 'data:image/png;base64,' + that.driver.Photo);\r\n            $scope.$parent.$ctrl.showAddDriverBlock();\r\n          }\r\n        );\r\n\r\n        this.resizeBase64Img = function (base64Img, maxWidth, maxHeight) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var deferred = $.Deferred();\r\n\r\n            $(\"<img/>\").attr(\"src\", base64Img).load( function () {\r\n                var width = this.width;\r\n                var height = this.height;\r\n\r\n                if (width > height) {\r\n                    if (width > maxWidth) {\r\n                        height *= maxWidth / width;\r\n                        width = maxWidth;\r\n                    }\r\n                } else {\r\n                    if (height > maxHeight) {\r\n                        width *= maxHeight / height;\r\n                        height = maxHeight;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.drawImage(this, 0, 0, width, height);\r\n                deferred.resolve($(\"<img/>\").attr(\"src\", canvas.toDataURL()));\r\n            });\r\n            return deferred.promise();\r\n        }\r\n\r\n        $(\"#driverPhoto\").change(function () {\r\n            if (this.files && this.files[0]) {\r\n                var fr = new FileReader();\r\n                fr.onload = function (e) {\r\n                    that.resizeBase64Img(e.target.result, that.maxPhotoWidth, that.maxPhotoHeight)\r\n                        .then(function (newImg) {\r\n                            that.driver.Photo = newImg[0].src.replace('data:image/png;base64,', '');\r\n                            console.log(newImg[0].src);\r\n                            $(\"#photoPreview\").attr(\"src\", newImg[0].src);\r\n                        }\r\n                    );\r\n                };\r\n                fr.readAsDataURL(this.files[0]);\r\n            }\r\n        });\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalBus` module\r\nangular.module('modalBus', ['core.bus']);","'use strict';\r\n\r\n// Register `modalBus` component, along with its associated controller and template\r\nangular.\r\n  module('modalBus').\r\n  component('modalBus', {\r\n    templateUrl: 'Content/app/bus-list/modal/modalBus-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.bus = that.resolve.bus;\r\n        if (that.bus && that.bus.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.bus });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `busList` module\r\nangular.module('busList', ['core.bus']);\r\n","'use strict';\r\n\r\n// Register `busList` component, along with its associated controller and template\r\nangular.module('busList')\r\n  .component('busList',\r\n  {\r\n    templateUrl: 'Content/app/bus-list/bus-list.template.html',\r\n    controller: [\r\n      'Bus', '$scope', '$uibModal',\r\n      function (Bus, $scope, $uibModal) {\r\n        var that = this;\r\n        that.buses = Bus.query();\r\n        that.bus = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalBus',\r\n          resolve: {\r\n            bus: function() {\r\n              return that.bus;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addBus = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.add(bus,\r\n              function onSuccess(createdBus) {\r\n                that.buses.push(createdBus);\r\n                that.clearBus();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editBus = function(bus) {\r\n          that.bus = bus;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.update({ id: bus.Id },\r\n              bus,\r\n              that.clearBus);\r\n          },\r\n          that.clearBus);\r\n        };\r\n\r\n        that.deleteBus = function(id) {\r\n          Bus.delete({ id: id },\r\n            function onSuccess(deletedBus) {\r\n              var index = that.buses.map(function (e) { return e.Id }).indexOf(deletedBus.Id);\r\n              if (index > -1) {\r\n                that.buses.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clearBus = function () {\r\n            that.bus = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `agentList` module\r\nangular.module('agentList', ['core.agent']);\r\n","'use strict';\r\n\r\n// Register `agentList` component, along with its associated controller and template\r\nangular.module('agentList')\r\n  .component('agentList',\r\n  {\r\n    templateUrl: 'Content/app/agent-list/agent-list.template.html',\r\n    controller: [\r\n      'Agent', '$scope', '$uibModal',\r\n      function (Agent, $scope, $uibModal) {\r\n        var that = this;\r\n\r\n        that.agents = Agent.query();\r\n        that.agent = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalAgent',\r\n          resolve: {\r\n            agent: function() {\r\n              return that.agent;\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n        that.addAgent = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.add(agent,\r\n              function onSuccess(createdAgent) {\r\n                that.agents.push(createdAgent);\r\n                  that.clearAgent();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editAgent = function(agent) {\r\n          that.agent = agent;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.update({ id: agent.Id },\r\n              agent,\r\n              that.clearAgent);\r\n          },\r\n          that.clearAgent);\r\n        };\r\n\r\n        that.deleteAgent = function(id) {\r\n          Agent.delete({ id: id },\r\n            function onSuccess(deletedAgent) {\r\n              var index = that.agents.map(function (e) { return e.Id }).indexOf(deletedAgent.Id);\r\n              if (index > -1) {\r\n                that.agents.splice(index, 1);\r\n              }\r\n            },\r\n            function onError(error) {\r\n                var errorMessage = error.data.Message;\r\n                alert(errorMessage);\r\n            });\r\n        };\r\n\r\n        that.clearAgent = function () {\r\n            that.agent = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalAgent` module\r\nangular.module('modalAgent', ['core.agent']);","'use strict';\r\n\r\n// Register `modalAgent` component, along with its associated controller and template\r\nangular.\r\n  module('modalAgent').\r\n  component('modalAgent', {\r\n    templateUrl: 'Content/app/agent-list/modal/modalAgent-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.agent = that.resolve.agent;\r\n        if (that.agent && that.agent.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.agent });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `reports` module\r\nangular.module('reports', []);\r\n","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('agentReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/agent-reports.template.html',\r\n        controller: [\r\n            'Agent', 'AgentReport', '$filter', 'PdfMaker',\r\n            function (Agent, AgentReport, $filter, pdfMaker) {\r\n                var that = this;\r\n\r\n                that.agents = Agent.query();\r\n                that.agent = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                that.dateFrom = new Date();\r\n                that.dateTo = new Date();\r\n                that.dateOptions = {\r\n                    showWeeks: false,\r\n                    startingDay: 0,\r\n                    maxDate: new Date()\r\n                }\r\n                that.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function (reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по агенту ' + that.agent.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].AgentCompensation;\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n\r\n                    var options = {\r\n                        id: that.agent.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    AgentReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Водитель', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Компенсация за рейс', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.DriverInfo,\r\n                        report.ClientsCount.toString(),\r\n                        report.AgentCompensation.toString()]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.agent.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Агент: ' + that.agent.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('driverReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/driver-reports.template.html',\r\n        controller: [\r\n            'Driver', 'DriverReport', '$filter', 'PdfMaker',\r\n            function (Driver, DriverReport, $filter, pdfMaker) {\r\n            \tvar that = this;\r\n\t\t\r\n            \tthat.drivers = Driver.query();\r\n            \tthat.driver = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n            \tthat.dateFrom = new Date();\r\n            \tthat.dateTo = new Date();\r\n            \tthat.dateOptions = {\r\n            \t\tshowWeeks: false,\r\n            \t\tstartingDay: 0,\r\n            \t\tmaxDate: new Date()\r\n            \t}\r\n            \tthat.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function(reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по водителю ' + that.driver.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") + ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +  ': ';\r\n\r\n                    that.totalPrice = reports.reduce((acc, report) => acc + report.DriverCashBox, 0);\r\n                    that.reportIsShowing = true; \r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n                    that.reportIsShowing = false;\r\n\r\n                    var options = {\r\n                        id: that.driver.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    DriverReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Постоянные расходы', style: 'tableHeader' },\r\n                        { text: 'Непред. расходы', style: 'tableHeader' },\r\n                        { text: 'Касса', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.ClientsCount ? report.ClientsCount.toString() : '',\r\n                        report.CompulsoryExpenses ? report.CompulsoryExpenses.toString() : 0,\r\n                        report.UnexpectedExpenses ? report.UnexpectedExpenses.toString() : 0,\r\n                        report.DriverCashBox ? report.DriverCashBox.toString() : 0]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.driver.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Водитель: ' + that.driver.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Define the `clientList` module\r\nangular.module('clientList', ['core.client']);\r\n","'use strict';\r\n\r\n// Register `clientList` component, along with its associated controller and template\r\nangular.module('clientList')\r\n  .component('clientList',\r\n  {\r\n     templateUrl: 'Content/app/client-list/client-list.template.html',\r\n     controller: [\r\n      'Client', 'Trip', '$scope', '$uibModal',\r\n      function (Client,Trip, $scope, $uibModal) {\r\n        var that = this;\r\n        that.clients = Client.query();\r\n        that.client = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalClient',\r\n          resolve: {\r\n            client: function() {\r\n              return that.client;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addClient = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.add(client,\r\n              function onSuccess(createdClient) {\r\n                that.clients.push(createdClient);\r\n                that.clearClient();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editClient = function(client) {\r\n          that.client = client;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.update({ id: client.Id },\r\n              client,\r\n              that.clearClient);\r\n          }, that.clearClient);\r\n        };\r\n\r\n        that.deleteClient = function(id) {\r\n          Client.delete({ id: id },\r\n            function onSuccess(deletedClient) {\r\n              var index = that.clients.map(function (e) { return e.Id }).indexOf(deletedClient.Id);\r\n              if (index > -1) {\r\n                that.clients.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clientInfo = function(client) {\r\n            Trip.query({ clientId: client.Id }, function (clientTrips) {\r\n                var options = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    component: 'modalClientTrips',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        info: function () {\r\n                            return {\r\n                                client: client,\r\n                                trips: clientTrips\r\n                            };\r\n                        }\r\n                    }\r\n                };\r\n                $uibModal.open(options);\r\n            });\r\n        };\r\n\r\n        that.clearClient = function() {\r\n            that.client = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalClient` module\r\nangular.module('modalClient', ['core.client']);","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClient', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClient-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.client = that.resolve.client;\r\n        if (that.client && that.client.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.client });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClientTrips', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClientTrips-template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [ '$filter',\r\n          function ($filter) {\r\n          var that = this;\r\n\r\n          that.trips = {};\r\n          that.client = {};\r\n          that.headerTitle = \"\";\r\n\r\n          that.$onInit = function () {\r\n              that.trips = that.resolve.info.trips;\r\n              that.client = that.resolve.info.client;\r\n              that.headerTitle = \"Информация о поездках клиента \" + that.client.Name;\r\n          };\r\n\r\n          that.getClienPrice = function(clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].Price;\r\n          };\r\n\r\n          that.getClienAdditionalExpenses = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].AdditionalExpenses;\r\n          };\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\nangular.module('citiesList', ['core.city', 'google.places']);","'use strict';\r\n\r\nangular.\r\n  module('citiesList').\r\n  component('citiesList', {\r\n      templateUrl: 'Content/app/cities-list/cities-list.template.html',\r\n      controller: ['City', '$scope', function CitiesListController(City, $scope) {\r\n          var that = this;\r\n\r\n          this.cities = City.query();\r\n          this.showAddCityForm = false;\r\n          this.choosedPlace = '';\r\n\r\n          this.showAddForm = function () {\r\n              that.showAddCityForm = !that.showAddCityForm;\r\n          }\r\n\r\n          $scope.autocompleteOptions = {\r\n              componentRestrictions: { country: 'ukr' },\r\n              types: ['(cities)']\r\n          }\r\n\r\n          this.saveCity = function () {\r\n              if (that.choosedPlace) {\r\n                  that.showAddCityForm = false;\r\n                  let cityName = that.choosedPlace.name ? that.choosedPlace.name : that.choosedPlace;\r\n\r\n                  City.add({ name: cityName }, function () {\r\n                      that.cities = City.query();\r\n                      that.choosedPlace = '';\r\n                  });\r\n              }\r\n          }\r\n\r\n          this.removeCity = function (cityId) {\r\n              City.remove({ id: cityId }), function () {\r\n                  that.cities = that.cities.filter((el) => el.id != cityId);\r\n              };\r\n          }\r\n\r\n          this.setCityFromAutocomplete = function (err, place) {\r\n              that.city.name = place;\r\n          }\r\n      }]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `pdfMaker` module\r\nangular.module('pdfMaker', []);","'use strict';\r\n\r\n// Register `pdfMaker` component, along with its associated controller and template\r\nangular.\r\n    module('pdfMaker').\r\n    factory('PdfMaker', function() {\r\n        return {\r\n            createAndDownload: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).download(options.fileName ? options.fileName : 'file.pdf');\r\n            },\r\n            createAndOpen: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).open();\r\n            }\r\n        }\r\n    });","'use strict';\r\n\r\nangular.module('signUp', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('signUp').\r\n  component('signUp', {\r\n      templateUrl: 'Content/app/authentication/signup/signup.template.html',\r\n      controller: ['AuthService', '$location', function (authService, $location) {\r\n          var that = this;\r\n\r\n          this.savedSuccessfully = false;\r\n          this.message = \"\";\r\n\r\n          this.registration = {\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\"\r\n          };\r\n\r\n          this.signUp = function (formValid) {\r\n              if (formValid) {\r\n                  authService.saveRegistration(this.registration).then(function (response) {\r\n                      that.savedSuccessfully = true;\r\n                      that.message = \"User has been registered successfully, you will be redirected to login page in 2 seconds.\";\r\n\r\n                      $location.path('/login');\r\n                  },\r\n                  function (response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join('\\n');\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('signIn', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('signIn').\r\n    component('signIn',\r\n    {\r\n        templateUrl: 'Content/app/authentication/signin/signin.template.html',\r\n        controller: ['AuthService', '$location', function(authService, $location) {\r\n            var that = this;\r\n\r\n            if (authService.authData.isAuth) {\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            this.loginData={\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n            this.message=\"\";\r\n\r\n            this.login = function() {\r\n                authService.login(this.loginData).then(function(response) {\r\n                    $location.path('/trips');\r\n                },\r\n                function(err) {\r\n                    that.message=err.data.error_description;\r\n                });\r\n            };\r\n        }\r\n    ]\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('navBar', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('navBar').\r\n    component('navbar',\r\n    {\r\n        templateUrl: 'Content/app/navbar/navbar.template.html',\r\n        controller: ['AuthService', 'authConstants', function (authService, authConstants) {\r\n            var that = this;\r\n\r\n            this.ClientAccessRoles = authConstants.ClientAccessRoles;\r\n            this.BusesAccessRoles = authConstants.BussesAccessRoles;\r\n\r\n            this.updateAuthData = function () {\r\n                that.isAuth = authService.authData.isAuth;\r\n                that.currentRole = authService.authData.role;\r\n            }\r\n\r\n            authService.registerObserverCallback(that.updateAuthData);\r\n\r\n            this.isAuth = authService.authData.isAuth;\r\n            this.currentRole = authService.authData.role;\r\n\r\n            this.hasRole = function (allowedRoles) {\r\n                if (that.isAuth) {\r\n                    if (!allowedRoles) {\r\n                        return that.currentRole == 'Admin';\r\n                    }\r\n\r\n                    return allowedRoles.indexOf(that.currentRole) != -1 || that.currentRole == 'Admin';\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }]\r\n    });\r\n\r\n","angular.module('VektorApp')\r\n    .directive(\"compareTo\",\r\n        function() {\r\n            return {\r\n                require: \"ngModel\",\r\n                scope: {\r\n                    otherModelValue: \"=compareTo\"\r\n                },\r\n                link: function(scope, element, attributes, ngModel) {\r\n\r\n                    ngModel.$validators.compareTo=function(modelValue) {\r\n                        return modelValue == scope.otherModelValue;\r\n                    };\r\n\r\n                    scope.$watch(\"otherModelValue\",\r\n                        function() {\r\n                            ngModel.$validate();\r\n                        });\r\n                }\r\n            };\r\n        });","'use strict';\r\n\r\nangular.module('manageAccount', ['core.manageAccount', 'core.authentication']);","'use strict';\r\n\r\nangular.module('manageAccount').component('manageAccount', {\r\n    templateUrl: 'Content/app/manage-account/manage-account.template.html',\r\n    controller: ['ManageAccountService', 'AuthService', function (manageAccountService, authService) {\r\n        var that = this;\r\n\r\n        this.message = \"\";\r\n        this.updateSuccefull = null;\r\n        this.accountData = {};\r\n\r\n        manageAccountService.getAccountInfo().then(function (response) {\r\n            that.accountData.email = response.Email;\r\n            that.accountData.name = response.Name;\r\n        });\r\n\r\n        this.update = function (formValid) {\r\n            if (formValid) {\r\n                manageAccountService.updateAccount(this.accountData)\r\n                    .then(function () {\r\n                        that.message = \"Account has been successfully updated\";\r\n                        that.updateSuccefull = true;\r\n\r\n                        authService.UpdateAuthData(that.accountData.email, that.accounData.name);\r\n                    },\r\n                    function (response) {\r\n                        var errors = [];\r\n                        for (var key in response.data.ModelState) {\r\n                            for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                                errors.push(response.data.ModelState[key][i]);\r\n                            }\r\n                        }\r\n\r\n                        that.message = errors.join('\\n');\r\n                        that.updateSuccefull = false;\r\n                    });\r\n            }\r\n        }\r\n    }]\r\n});","angular.module('googleMaps', []);","'use strict';\r\n\r\n// Define the `googleMaps` service\r\nangular.module('googleMaps')\r\n    .factory('googleMapsService', [function () {\r\n        var googleMapsFactory = {};\r\n        var directionsService = new google.maps.DirectionsService;\r\n        var googleMapsServiceBase = 'https://maps.googleapis.com/maps/api/staticmap?size=500x400&maptype=roadmap';\r\n\r\n        googleMapsFactory.optimizeWaypoints = function (cityFrom, cityTo, waypoints, callback) {\r\n            var orderedWaypoints = [];\r\n\r\n            directionsService.route({\r\n                origin: cityFrom,\r\n                destination: cityTo,\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                waypoints: waypoints,\r\n                optimizeWaypoints: true\r\n            }, function (response) {\r\n                response.routes[0].waypoint_order.map(\r\n                    (order) => orderedWaypoints.push(waypoints[order]));\r\n\r\n                //its required to set at least one waypoint in array, so create waypoint similar as start point, it will not be created on map\r\n                orderedWaypoints = orderedWaypoints.length > 0\r\n                    ? orderedWaypoints\r\n                    : [{ location: cityFrom, stopover: false }];\r\n\r\n                callback({ waypoints: orderedWaypoints, polyline: response.routes[0].overview_polyline });\r\n            });\r\n        }\r\n\r\n        googleMapsFactory.getGoogleMapsImage = function (cityFrom, cityTo, waypoints, polyline, callback) {\r\n            //generate static maps url with direction polyline\r\n            var url = googleMapsServiceBase.concat(\r\n                googleMapsFactory.covertWaypointsToUrlParams(cityFrom, cityTo, waypoints),\r\n                '&path=color:0x0000ff80|weight:5|enc:', polyline,\r\n                '&key=AIzaSyBkEIsxJ1ZqsEBPUYsef_jF2ajuSkmbxJ4');\r\n\r\n            //convert image to base64\r\n            googleMapsFactory.convertImgToDataURL(url, callback);\r\n        }\r\n\r\n        googleMapsFactory.covertWaypointsToUrlParams = function (cityFrom, cityTo, waypoints) {\r\n            var urlParams = '';\r\n\r\n            //variable to avoid js locking\r\n            var getUrlParam = function (location, color) {\r\n                color = color ? color : 'green';\r\n\r\n                return '&markers=color:' + color + '|' + location;\r\n            };\r\n\r\n            urlParams += getUrlParam(cityFrom);\r\n            waypoints.map((waypoint) => urlParams += getUrlParam(waypoint.location));\r\n            urlParams += getUrlParam(cityTo, 'red');\r\n\r\n            return urlParams;\r\n        }\r\n\r\n        googleMapsFactory.convertImgToDataURL = function (url, callback) {\r\n            var img = new Image();\r\n            img.crossOrigin = 'Anonymous';\r\n\r\n            img.onload = function () {\r\n                var canvas = document.createElement('CANVAS');\r\n                var ctx = canvas.getContext('2d');\r\n                var dataURL;\r\n\r\n                canvas.height = this.height;\r\n                canvas.width = this.width;\r\n                ctx.drawImage(this, 0, 0);\r\n\r\n                dataURL = canvas.toDataURL();\r\n                callback(dataURL);\r\n\r\n                canvas = null;\r\n            };\r\n\r\n            img.src = url;\r\n        }\r\n\r\n        return googleMapsFactory;\r\n    }]);","angular.module('VektorApp')\r\n\t.directive('loading', ['$http', '$timeout', function ($http, $timeout) {\r\n\treturn {\r\n\t\trestrict: 'A',\r\n\t\tlink: function (scope, elm, attrs) {\r\n\t\t\tscope.isLoading = function () {\r\n\t\t\t\treturn $http.pendingRequests.length > 0;\r\n\t\t\t};\r\n\r\n\t\t\tscope.$watch(scope.isLoading, function (newValue) {\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t    elm.show();\r\n\t\t\t\t} else {\r\n\t\t\t\t\telm.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n}]);"]}