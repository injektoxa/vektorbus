{"version":3,"sources":["app.module.js","app.config.js","app.animations.js","core/core.module.js","core/checkmark/checkmark.filter.js","core/client/client.module.js","core/client/client.service.js","core/clientTrip/clientTrip.module.js","core/clientTrip/clientTrip.service.js","core/trip/trip.module.js","core/trip/trip.service.js","core/trip/trip-cash.service.js","core/driver/driver.module.js","core/driver/driver.service.js","core/bus/bus.module.js","core/bus/bus.service.js","core/city/city.module.js","core/city/city.service.js","core/agent/agent.module.js","core/agent/agent.service.js","core/agentReport/agentReport.module.js","core/agentReport/agentReport.service.js","core/driverReport/driverReport.module.js","core/driverReport/driverReport.service.js","core/authentication/authentication.module.js","core/authentication/authentication.service.js","core/authentication/authInterceptor.service.js","core/manageAccount/manageAccount.module.js","core/manageAccount/manageAccount.service.js","clientTrip-list/clientTrip-list.module.js","clientTrip-list/clientTrip-list.component.js","client-detail/client-detail.module.js","client-detail/client-detail.component.js","trip-list/trip-list.module.js","trip-list/trip-list.component.js","driver-list/driver-list.module.js","driver-list/driver-list.component.js","driver-list/driver-crud/driver-crud.module.js","driver-list/driver-crud/driver-crud.component.js","bus-list/modal/modalBus.module.js","bus-list/modal/modalBus.component.js","bus-list/bus-list.module.js","bus-list/bus-list.component.js","agent-list/agent-list.module.js","agent-list/agent-list.component.js","agent-list/modal/modalAgent.module.js","agent-list/modal/modalAgent.component.js","reports/reports.module.js","reports/agent-reports.component.js","reports/driver-reports.component.js","client-list/client-list.module.js","client-list/client-list.component.js","client-list/modal/modalClient.module.js","client-list/modal/modalClient.component.js","client-list/modal/modalClientTrips.component.js","cities-list/cities-list.module.js","cities-list/cities-list.component.js","pdfMaker/pdfMaker.module.js","pdfMaker/pdfMaker.service.js","authentication/signup/signup.module.js","authentication/signup/signup.component.js","authentication/signin/signin.module.js","authentication/signin/signin.component.js","navbar/navbar.module.js","navbar/navbar.component.js","Derectives/compare-passwords.derective.js","manage-account/manage-account.module.js","manage-account/manage-account.component.js","google-maps/google-maps.module.js","google-maps/google-maps.service.js","Derectives/loading.derective.js"],"names":["angular","module","constant","ClientAccessRoles","BussesAccessRoles","AllRoles","config","$locationProvider","$routeProvider","authConstants","$httpProvider","$qProvider","interceptors","push","defaults","useXDomain","headers","common","html5Mode","errorOnUnhandledRejections","when","template","acceptedRoles","allowAnonymus","templateUrl","otherwise","run","$rootScope","$location","authService","$on","event","next","currentRole","authData","role","indexOf","isAuth","path","animation","animateIn","element","className","done","css","display","position","top","left","animate","wasCanceled","stop","animateOut","addClass","removeClass","filter","input","factory","$resource","query","method","isArray","add","update","remove","params","Id","get","expenseSumFun","acc","expense","Cost","countIncomes","trip","expenses","this","countTotalExpenses","countDriverCashBox","compolsuryTotal","unexpectedTotal","agentExpensesTotal","tripClients","reduce","client","Price","countAgentExpenses","AgentPrice","compulsoryExpenses","unexpectedExpenses","service","id","dateFrom","dateTo","authDataResourceKey","localStorageService","$http","$q","authServiceFactory","observerCallbacks","name","registerObserverCallback","callback","notifyObservers","forEach","saveRegistration","registration","logOut","post","then","response","login","loginData","data","email","password","deferred","defer","Content-Type","set","token","access_token","resolve","err","status","reject","promise","UpdateAuthData","previousData","newName","$injector","authInterceptorServiceFactory","request","Authorization","responseError","rejection","manageAccountFactory","updateAccount","accountData","put","getAccountInfo","component","controller","ClientTrip","$scope","City","Agent","that","clientFilter","clients","cities","agents","orderProp","removeFromTrip","index","$parent","$ctrl","splice","addToTrip","console","log","clientFilterAction","length","clientTrips","filterThrottled","_","debounce","$watch","$routeParams","Client","clientId","Trip","Bus","Driver","$uibModal","PdfMaker","$filter","googleMapsService","tripCashService","$timeout","showAddTripForm","isEditMode","dateNow","Date","mapCenterLatLng","google","maps","LatLng","startDate","startTime","endDate","endTime","trips","buses","drivers","dateFormat","dateTimeFormat","dateOptions","minDate","showWeeks","startingDay","timeOptions","minuteStep","startDatePopup","opened","startDateOpen","endDatePopup","endDateOpen","showAddForm","submitted","form","$setValidity","$invalid","create","joinTripDateAndTime","createdTrip","clearTripModel","updatedTrip","$setPristine","$setUntouched","$broadcast","date","getFullYear","getMonth","getDate","getHours","getMinutes","arrivalDate","openDriversList","modalOptions","backdrop","size","open","result","createPDF","directionLoadingFaled","createTripReportPdf","getGoogleMapsImage","cityFrom","Name","cityTo","waypoints","polyline","base64Img","tableBody","text","style","map","i","toString","Phone","To","From","IsStayInBus","HasMinorChild","HasDisability","AgentName","compolsuryExpenseTable","unexpectedExpenseTable","Comment","bus","FriendlyName","RegistrationNumber","driver","FullName","fileName","concat","options","docDefinition","pageOrientation","fontSize","content","columns","width","table","headerRows","body","image","createAndDownload","editTrip","disableEditMode","delete","msg","confirm","deletedTrip","e","error","errorMessage","Message","alert","removeExpense","expensesArray","addCompolsoryExpense","cost","comment","compulsoryNewCost","compulsoryNewComment","addUnexpectedExpens","unexpectedNewCost","unexpectedNewComment","getDriverCashbox","getIncomes","getAgentExpenses","mapInitialized","trigger","directionsDisplay","DirectionsRenderer","setMap","getTripWaypoints","setDirections","routes","overview_polyline","origin","destination","addToWaypoints","location","some","wp","stopover","optimizeWaypoints","$watchCollection","newValue","previousValue","bindings","close","dismiss","addDriverBlockVisible","addNewClass","$onInit","closeModal","$value","editDriver","showAddDriverBlock","deleteDriver","maxPhotoWidth","maxPhotoHeight","cancel","save","editedDriver","createdDriver","deletedDriver","$","attr","Photo","resizeBase64Img","maxWidth","maxHeight","canvas","document","createElement","Deferred","load","height","getContext","drawImage","toDataURL","change","files","fr","FileReader","onload","target","newImg","src","replace","readAsDataURL","headerTitle","ok","addBus","createdBus","clearBus","editBus","deleteBus","deletedBus","agent","addAgent","createdAgent","clearAgent","editAgent","deleteAgent","deletedAgent","AgentReport","pdfMaker","maxDate","reports","reportTitle","totalTitle","totalPrice","reportIsShowing","onGetReports","AgentCompensation","createReport","report","TripDate","CityFrom","CityTo","BusInfo","DriverInfo","ClientsCount","datePeriod","DriverReport","DriverReports","DriverName","totalIncomes","getTotalIncomes","isMultipleDriversMode","Object","keys","TotalIncomes","getReportsPdfTable","driverName","title","CompulsoryExpenses","UnexpectedExpenses","DriverCashBox","generateReport","driversName","driverFileNaming","addClient","clearClient","editClient","deleteClient","deletedClient","clientInfo","info","message","createdClient","errors","key","ModelState","join","getClienPrice","ClientId","getClienAdditionalExpenses","AdditionalExpenses","getClientAgent","clientTrip","find","agentName","showAddCityForm","choosedPlace","autocompleteOptions","componentRestrictions","country","types","saveCity","cityName","createdCity","removeCity","cityId","deletedCity","el","setCityFromAutocomplete","place","city","pdfMake","createPdf","download","createAndOpen","savedSuccessfully","confirmPassword","signUp","formValid","error_description","BusesAccessRoles","updateAuthData","hasRole","allowedRoles","directive","require","scope","otherModelValue","link","attributes","ngModel","$validators","compareTo","modelValue","$validate","manageAccountService","updateSuccefull","Email","accounData","googleMapsFactory","directionsService","DirectionsService","orderedWaypoints","route","travelMode","TravelMode","DRIVING","waypoint_order","order","url","covertWaypointsToUrlParams","convertImgToDataURL","urlParams","getUrlParam","color","waypoint","img","Image","crossOrigin","dataURL","ctx","restrict","elm","attrs","isLoading","pendingRequests","show","hide"],"mappings":"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","file":"../all.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('VektorApp', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ui.bootstrap',\r\n  'core',\r\n  'pdfMaker',\r\n  'clientDetail',\r\n  'clientList',\r\n  'clientTripList',\r\n  'tripList',\r\n  'busList',\r\n  'modalBus',\r\n  'driverList',\r\n  'driverCrud',\r\n  'citiesList',\r\n  'agentList',\r\n  'modalAgent',\r\n  'modalClient',\r\n  'reports',\r\n  'signUp',\r\n  'signIn',\r\n  'LocalStorageModule',\r\n  'navBar',\r\n  'manageAccount',\r\n  'googleMaps'\r\n]);","'use strict';\r\n\r\nangular.\r\n    module('VektorApp')\r\n    .constant('authConstants',\r\n    {\r\n        ClientAccessRoles: ['Driver'],\r\n        BussesAccessRoles: ['Driver', 'Partner'],\r\n        AllRoles: ['User', 'Driver', 'Partner']\r\n    })\r\n    .config(['$locationProvider', '$routeProvider', 'authConstants', '$httpProvider', '$qProvider',\r\n        function config($locationProvider, $routeProvider, authConstants, $httpProvider, $qProvider) {\r\n\r\n            $httpProvider.interceptors.push('authInterceptorService');\r\n\r\n            //allow CORS\r\n            $httpProvider.defaults.useXDomain = true;\r\n            delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n\r\n            $locationProvider.html5Mode(true);\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n\r\n            $routeProvider.\r\n                when('/clients',\r\n                {\r\n                    template: '<client-list></client-list>',\r\n                    acceptedRoles: authConstants.ClientAccessRoles\r\n                }).\r\n                when('/clients/:clientId',\r\n                {\r\n                    template: '<client-detail></client-detail>'\r\n                }).\r\n                when('/trips',\r\n                {\r\n                    template: '<trip-list></trip-list>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                when('/buses',\r\n                {\r\n                    template: '<bus-list></bus-list>',\r\n                    acceptedRoles: authConstants.BussesAccessRoles\r\n                }).\r\n                when('/cities',\r\n                {\r\n                    template: '<cities-list></cities-list>'\r\n                }).\r\n                when('/signup',\r\n                {\r\n                    template: '<sign-up></sign-up>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/login',\r\n                {\r\n                    template: '<sign-in></sign-in>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/agents',\r\n                {\r\n                    template: '<agent-list></agent-list>'\r\n                }).\r\n                when('/agentReports',\r\n                {\r\n                    template: '<agent-reports></agent-reports>'\r\n                }).\r\n                when('/driverReports',\r\n                {\r\n                    template: '<driver-reports></driver-reports>'\r\n                }).\r\n                when('/access-forbidden',\r\n                {\r\n                    templateUrl: 'Content/app/access-forbidden.html',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/manageAccount',\r\n                {\r\n                    template: '<manage-account></manage-account>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                otherwise('/trips');\r\n        }\r\n    ]).run(['$rootScope', '$location', 'AuthService',\r\n        function ($rootScope, $location, authService) {\r\n            $rootScope.$on('$routeChangeStart',\r\n                function (event, next) {\r\n                    var currentRole = authService.authData.role; \r\n                    next.acceptedRoles = next.acceptedRoles ? next.acceptedRoles : [];\r\n\r\n                    //if current user is not authenticated or his role is not accepted to view particular route\r\n                    if (next.allowAnonymus) {\r\n                        return true;\r\n                    }\r\n\r\n                    if (currentRole != \"Admin\" && next.acceptedRoles.indexOf(currentRole) == -1) {\r\n                        if (!authService.authData.isAuth) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $location.path('/access-forbidden');\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n    ]);","'use strict';\r\n\r\nangular.\r\n  module('VektorApp').\r\n  animation('.client', function clientAnimationFactory() {\r\n    return {\r\n      addClass: animateIn,\r\n      removeClass: animateOut\r\n    };\r\n\r\n    function animateIn(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: 500,\r\n        left: 0\r\n      }).animate({\r\n        top: 0\r\n      }, done);\r\n\r\n      return function animateInEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n\r\n    function animateOut(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n      }).animate({\r\n        top: -500\r\n      }, done);\r\n\r\n      return function animateOutEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core` module\r\nangular.module('core', ['core.client', 'core.trip', 'core.bus', 'core.city', 'core.manageAccount',\r\n    'core.driver', 'core.agent', 'core.agentReport', 'core.driverReport', 'core.clientTrip', 'core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('core').\r\n  filter('checkmark', function() {\r\n    return function(input) {\r\n      return input ? '\\u2713' : '\\u2718';\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core.client` module\r\nangular.module('core.client', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.client').\r\n  factory('Client', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clients/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.clientTrip` module\r\nangular.module('core.clientTrip', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.clientTrip').\r\n  factory('ClientTrip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clientTrips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.trip', ['ngResource']);","angular.\r\n  module('core.trip').\r\n  factory('Trip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/trips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            get: {\r\n                method: 'GET',\r\n                params: { Id: 'id' }\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE'\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nconst expenseSumFun = (acc, expense) => acc + expense.Cost;\r\n\r\nangular.module('core.trip')\r\n    .factory('tripCashService', function () {\r\n        return {\r\n            countIncomes: function (trip) {\r\n                var expenses = this.countTotalExpenses(trip);\r\n                var incomes = this.countDriverCashBox(trip);\r\n\r\n                return incomes - (expenses.compolsuryTotal + expenses.unexpectedTotal + expenses.agentExpensesTotal);\r\n            },\r\n\r\n            countDriverCashBox: function (trip) {\r\n                if (trip.tripClients) {\r\n                    return trip.tripClients.reduce((acc, client) => acc + client.Price, 0);\r\n                }\r\n\r\n                return 0;\r\n            },\r\n\r\n            countAgentExpenses: function (trip) {\r\n                if (trip.tripClients) {\r\n                    return trip.tripClients.reduce((acc, client) => acc + client.AgentPrice, 0);\r\n                }\r\n\r\n                return 0;\r\n            },\r\n\r\n            countTotalExpenses: function (trip) {\r\n                var compulsoryExpensesSum = trip.compulsoryExpenses\r\n                    ? trip.compulsoryExpenses.reduce(expenseSumFun, 0)\r\n                    : 0;\r\n\r\n                var unexpectedExpensesSum=trip.unexpectedExpenses\r\n                    ? trip.unexpectedExpenses.reduce(expenseSumFun, 0)\r\n                    : 0;\r\n\r\n                var agentExpensesSum = this.countAgentExpenses(trip);\r\n\r\n                return {\r\n                    compolsuryTotal: compulsoryExpensesSum,\r\n                    unexpectedTotal: unexpectedExpensesSum,\r\n                    agentExpensesTotal: agentExpensesSum\r\n                };\r\n            }\r\n        }\r\n    });\r\n","'use strict';\r\n\r\nangular.module('core.driver', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.driver').\r\n  factory('Driver', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/drivers/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.bus` module\r\nangular.module('core.bus', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.bus').\r\n  factory('Bus', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/buses/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.city', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.city').\r\n  service('City', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/Cities/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agent` module\r\nangular.module('core.agent', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.agent').\r\n  factory('Agent', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agents/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agentReport` module\r\nangular.module('core.agentReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.agentReport').\r\n  factory('AgentReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agentReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.driverReport` module\r\nangular.module('core.driverReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.driverReport').\r\n  factory('DriverReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/driverReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.authentication', []);","'use strict';\r\n\r\nconst authDataResourceKey = \"authorizationData\";\r\n\r\nangular.\r\n  module('core.authentication').\r\n      factory('AuthService', ['localStorageService', '$http', '$q', function (localStorageService, $http, $q) {\r\n          var authServiceFactory = {};\r\n          var observerCallbacks = [];\r\n\r\n          var authData = localStorageService.get(authDataResourceKey);\r\n          authServiceFactory.authData = {\r\n              isAuth: authData != null,\r\n              name: authData ? authData.name : \"\",\r\n              role: authData ? authData.role : \"guest\",\r\n          };\r\n\r\n          authServiceFactory.registerObserverCallback = function (callback) {\r\n              observerCallbacks.push(callback);\r\n          };\r\n\r\n          //call this when you know that authData has been changed\r\n          var notifyObservers = function () {\r\n              angular.forEach(observerCallbacks, function (callback) {\r\n                  callback();\r\n              });\r\n          }\r\n\r\n          authServiceFactory.saveRegistration = function (registration) {\r\n              authServiceFactory.logOut();\r\n\r\n              return $http.post('/api/Account/Register', registration).then(function (response) {\r\n                  return response;\r\n              });\r\n          };\r\n\r\n          authServiceFactory.logOut = function () {\r\n              localStorageService.remove(authDataResourceKey);\r\n\r\n              authServiceFactory.authData.isAuth = false;\r\n              authServiceFactory.authData.role = \"\";\r\n              authServiceFactory.authData.name = \"\";\r\n\r\n              notifyObservers();\r\n          };\r\n\r\n          authServiceFactory.login = function (loginData) {\r\n              var data = \"grant_type=password&username=\" + loginData.email + \"&password=\" + loginData.password;\r\n\r\n              var deferred = $q.defer();\r\n\r\n              $http.post('/api/token', data, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                   .then(function (response) {\r\n                       localStorageService.set(authDataResourceKey, { token: response.data.access_token, name: response.data.name, role: response.data.role });\r\n\r\n                       authServiceFactory.authData.isAuth = true;\r\n                       authServiceFactory.authData.name = response.data.name;\r\n                       authServiceFactory.authData.role = response.data.role;\r\n\r\n                       notifyObservers();\r\n\r\n                       deferred.resolve(response);\r\n                   },\r\n                   function (err, status) {\r\n                       authServiceFactory.logOut();\r\n                       deferred.reject(err);\r\n                   });\r\n\r\n              return deferred.promise;\r\n          };\r\n\r\n          authServiceFactory.UpdateAuthData = function (email, name) {\r\n              var previousData = localStorageService.get(authDataResourceKey);\r\n\r\n              var newName = name ? name : previousData.name;\r\n\r\n              localStorageService.set(authDataResourceKey,\r\n              {\r\n                  token: previousData.token,\r\n                  name: newName\r\n              });\r\n\r\n              authServiceFactory.authData.name = newName;\r\n              notifyObservers();\r\n          }\r\n\r\n          return authServiceFactory;\r\n      }\r\n    ]);","'use strict';\r\nangular.module('core.authentication')\r\n    .factory('authInterceptorService', ['$q', '$injector', '$location', 'localStorageService', function ($q, $injector, $location, localStorageService) {\r\n\r\n        var authInterceptorServiceFactory = {};\r\n\r\n        authInterceptorServiceFactory.request = function (config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = localStorageService.get('authorizationData');\r\n\r\n            if (authData) {\r\n                config.headers.Authorization = 'Bearer ' + authData.token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        authInterceptorServiceFactory.responseError = function (rejection) {\r\n            if (rejection.status === 401) {\r\n                var authService = $injector.get('AuthService');\r\n\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        return authInterceptorServiceFactory;\r\n    }]);","'use strict';\r\n\r\nangular.module('core.manageAccount', []);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.manageAccount').\r\n  factory('ManageAccountService', ['$http',\r\n    function ($http) {\r\n        var manageAccountFactory = {};\r\n\r\n        manageAccountFactory.updateAccount = function (accountData) {\r\n            return $http.put('/api/Account/', accountData).then(function(response) {\r\n                return response;\r\n            });\r\n        }\r\n\r\n        manageAccountFactory.getAccountInfo = function () {\r\n            return $http.get('/api/Account/').then(function(response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        return manageAccountFactory;\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `clientTripList` module\r\nangular.module('clientTripList', ['core.clientTrip']);\r\n","'use strict';\r\n\r\n// Register `clientTripList` component, along with its associated controller and template\r\nangular.\r\n  module('clientTripList').\r\n  component('clientTripList', {\r\n      templateUrl: 'Content/app/clientTrip-list/clientTrip-list.template.html',\r\n      controller: ['ClientTrip', '$scope', 'City', 'Agent',\r\n        function (ClientTrip, $scope, City, Agent) {\r\n            var that = this;\r\n\r\n            this.clientFilter = '';\r\n            this.clients = [];\r\n            this.cities = City.query();\r\n            this.agents = Agent.query();\r\n            this.orderProp = 'Id';\r\n\r\n            this.removeFromTrip = function (client) {\r\n                var index = $scope.$parent.$ctrl.trip.tripClients.indexOf(client);\r\n                $scope.$parent.$ctrl.trip.tripClients.splice(index, 1);\r\n            }\r\n\r\n            this.addToTrip = function (client) {\r\n                if ($scope.$parent.$ctrl.trip.tripClients.indexOf(client) === -1) {\r\n                    $scope.$parent.$ctrl.trip.tripClients.push(client);\r\n                }\r\n                else {\r\n                    console.log(\"This item already exists\");\r\n                }\r\n            }\r\n\r\n            this.clientFilterAction = function () {\r\n                if (that.clientFilter.length > 1) {\r\n                    ClientTrip.query({ filter: that.clientFilter },\r\n                        function (clientTrips) {\r\n                            that.clients = clientTrips;\r\n                        });\r\n                } else {\r\n                    that.clients = [];\r\n                }\r\n            };\r\n\r\n            this.filterThrottled = _.debounce(that.clientFilterAction, 500);\r\n\r\n            $scope.$watch('$ctrl.clientFilter', that.filterThrottled);\r\n\r\n            $scope.$on('clearClientTripsEvent', function (event, params) {\r\n                that.clientFilter = '';\r\n                that.clients = [];\r\n            });\r\n        }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `clientDetail` module\r\nangular.module('clientDetail', [\r\n  'ngRoute',\r\n  'core.client'\r\n]);\r\n","'use strict';\r\n\r\n// Register `clientDetail` component, along with its associated controller and template\r\nangular.\r\n  module('clientDetail').\r\n  component('clientDetail', {\r\n    templateUrl: 'Content/app/client-detail/client-detail.template.html',\r\n    controller: ['$routeParams', 'Client',\r\n      function ClientDetailController($routeParams, Client) {\r\n        var self = this;\r\n        self.client = Client.get({clientId: $routeParams.clientId}, function(client) {\r\n          //self.setImage(client.images[0]);\r\n        });\r\n\r\n        //self.setImage = function setImage(imageUrl) {\r\n        //  self.mainImageUrl = imageUrl;\r\n        //};\r\n      }\r\n    ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('tripList', ['core.trip', 'core.bus', 'ngMap', 'googleMaps']);","'use strict';\r\n\r\nangular.\r\nmodule('tripList').\r\ncomponent('tripList', {\r\n    templateUrl: 'Content/app/trip-list/trip-list.template.html',\r\n    controller: ['Trip', 'Bus', 'City', 'Driver', '$uibModal', '$scope', 'PdfMaker', '$filter', 'googleMapsService', 'tripCashService', '$q', '$timeout',\r\n        function (Trip, Bus, City, Driver, $uibModal, $scope, PdfMaker, $filter, googleMapsService, tripCashService, $q, $timeout) {\r\n            var that = this;\r\n\r\n            this.showAddTripForm = false;\r\n            this.isEditMode = false;\r\n            this.dateNow = new Date();\r\n            this.mapCenterLatLng = new google.maps.LatLng(49.361625, 32.139730);\r\n\r\n            this.trip = {\r\n                tripClients: [],\r\n                compulsoryExpenses: [],\r\n                unexpectedExpenses: [],\r\n                startDate: that.dateNow,\r\n                startTime: that.dateNow,\r\n                endDate: that.dateNow,\r\n                endTime: that.dateNow\r\n            };\r\n\r\n            this.trips = Trip.query();\r\n            this.buses = Bus.query();\r\n            this.cities = City.query();\r\n            this.drivers = Driver.query();\r\n            this.dateFormat = \"dd-MMM-yyyy\";\r\n            this.dateTimeFormat = 'MMM dd HH:mm';\r\n\r\n            this.dateOptions = {\r\n                minDate: new Date(),\r\n                showWeeks: false,\r\n                startingDay: 1\r\n            };\r\n\r\n            this.timeOptions = {\r\n                minuteStep: 5\r\n            }\r\n\r\n            this.startDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.startDateOpen = function () {\r\n                that.startDatePopup.opened = true;\r\n            };\r\n\r\n            this.endDatePopup = {\r\n                opened: false\r\n            };\r\n\r\n            this.endDateOpen = function () {\r\n                that.endDatePopup.opened = true;\r\n            };\r\n\r\n            this.showAddForm = function () {\r\n                that.showAddTripForm = !that.showAddTripForm;\r\n            }\r\n\r\n            this.add = function () {\r\n                that.submitted = true;\r\n\r\n                if (that.trip.tripClients.length === 0) {\r\n                    $scope.form.$setValidity('isAnyClient', false);\r\n                    return;\r\n                }\r\n\r\n                if ($scope.form.$invalid) {\r\n                    return;\r\n                }\r\n\r\n                if (that.isEditMode) {\r\n                    that.update();\r\n                } else {\r\n                    that.create();\r\n                }\r\n            };\r\n\r\n            this.create = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.add(that.trip, function (createdTrip) {\r\n                    that.trips.push(createdTrip);\r\n                    that.showAddTripForm = false;\r\n                    that.clearTripModel();\r\n                });\r\n            };\r\n\r\n            this.update = function () {\r\n                that.joinTripDateAndTime();\r\n                Trip.update(\r\n                    { id: that.trip.id },\r\n                    that.trip,\r\n                    function (updatedTrip) {\r\n                        that.trips = Trip.query();\r\n\r\n                        that.showAddTripForm = false;\r\n                        that.clearTripModel();\r\n                    });\r\n            };\r\n\r\n            this.clearTripModel = function () {\r\n                that.dateNow = new Date();\r\n                that.isEditMode = false;\r\n                that.trip = {\r\n                    tripClients: [],\r\n                    startDate: that.dateNow,\r\n                    startTime: that.dateNow,\r\n                    endDate: that.dateNow,\r\n                    endTime: that.dateNow\r\n                };\r\n                that.submitted = false;\r\n                $scope.form.$setPristine();\r\n                $scope.form.$setUntouched();\r\n                $scope.$broadcast('clearClientTripsEvent');\r\n            };\r\n\r\n            this.joinTripDateAndTime = function () {\r\n                that.trip.date = new Date(\r\n                    that.trip.startDate.getFullYear(),\r\n                    that.trip.startDate.getMonth(),\r\n                    that.trip.startDate.getDate(),\r\n                    that.trip.startTime.getHours(),\r\n                    that.trip.startTime.getMinutes());\r\n\r\n                that.trip.arrivalDate = new Date(\r\n                    that.trip.endDate.getFullYear(),\r\n                    that.trip.endDate.getMonth(),\r\n                    that.trip.endDate.getDate(),\r\n                    that.trip.endTime.getHours(),\r\n                    that.trip.endTime.getMinutes());\r\n            };\r\n\r\n            this.openDriversList = function () {\r\n                var modalOptions = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    size: 'lg',\r\n                    component: 'driverList',\r\n                    resolve: {\r\n                        drivers: function () {\r\n                            return that.drivers;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var modalInstance = $uibModal.open(modalOptions);\r\n\r\n                modalInstance.result.then(function (drivers) {\r\n                    that.drivers = drivers;\r\n                });\r\n            };\r\n\r\n            this.createPDF = function (trip) {\r\n                if (!trip.directionLoadingFaled) {\r\n                    googleMapsService.getGoogleMapsImage(trip.cityFrom.Name,\r\n                        trip.cityTo.Name,\r\n                        trip.waypoints,\r\n                        trip.polyline,\r\n                        function (base64Img) {\r\n                            that.createTripReportPdf(trip, base64Img);\r\n                        });\r\n                } else {\r\n                    that.createTripReportPdf(trip, null);\r\n                }\r\n            }\r\n\r\n            this.createTripReportPdf = function (trip, base64Img) {\r\n                var tableBody = [\r\n                    [\r\n                        { text: '№', style: 'tableHeader' },\r\n                        { text: 'Имя Фамилия', style: 'tableHeader' },\r\n                        { text: 'Телефон', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Стоимость', style: 'tableHeader' },\r\n                        { text: 'Не вых.', style: 'tableHeader' },\r\n                        { text: 'Статус', style: 'tableHeader' },\r\n                        { text: 'Aгент', style: 'tableHeader' }\r\n                    ]\r\n                ];\r\n\r\n                trip.tripClients.map((client, i) =>\r\n                    tableBody.push([\r\n                        (i + 1).toString(),\r\n                        client.Name,\r\n                        client.Phone,\r\n                        client.To ? client.To : '',\r\n                        client.From ? client.From : '',\r\n                        client.Price.toString(),\r\n                        client.IsStayInBus ? 'Да' : '',\r\n                        (client.HasMinorChild ? 'С ребенком; ' : '') + (client.HasDisability ? 'Инвалид' : ''),\r\n                        client.AgentName ?\r\n                            client.AgentName + ' - ' + (client.AgentPrice ? client.AgentPrice : 0)\r\n                            : '']));\r\n\r\n                //pdfMake doesnt work with initializing via variable\r\n                var compolsuryExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n                var unexpectedExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n\r\n                trip.compulsoryExpenses.map((expense) =>\r\n                    compolsuryExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                trip.unexpectedExpenses.map((expense) =>\r\n                    unexpectedExpenseTable.push([\r\n                         expense.Cost.toString(),\r\n                         expense.Comment\r\n                    ]));\r\n\r\n                var expenses = tripCashService.countTotalExpenses(trip);\r\n\r\n                var bus = trip.bus != null ? trip.bus.FriendlyName + ' ' + trip.bus.RegistrationNumber + ', ' : '';\r\n                var driver = trip.driver != null ? 'Водитель: ' + trip.driver.FullName : '';\r\n                var fileName = trip.cityFrom.Name.concat(' - ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy/MM/dd\"), '.pdf');\r\n\r\n                var options = {\r\n                    fileName: fileName,\r\n                    docDefinition: {\r\n                        pageOrientation: 'portrait',\r\n                        fontSize: 12,\r\n                        content: [\r\n                            {\r\n                                text: trip.cityFrom.Name.concat(' --> ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy-MM-dd HH:mm\"))\r\n                            },\r\n                            {\r\n                                text: bus + driver\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Обязательные расходы:'\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Дополнительные расходы:'\r\n                                }]\r\n                            },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: compolsuryExpenseTable\r\n                                    }\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: unexpectedExpenseTable\r\n                                    }\r\n                                }]\r\n                            },\r\n                            {\r\n                                columns: [\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Итого: ' + expenses.compolsuryTotal\r\n                                },\r\n                                {\r\n                                    width: '50%',\r\n                                    text: 'Итого: ' + expenses.unexpectedTotal\r\n                                }]\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                text: 'Клиенты:'\r\n                            },\r\n                            {\r\n                                table: {\r\n                                    headerRows: 1,\r\n                                    body: tableBody\r\n                                }\r\n                            },\r\n                            { text: ' ' },\r\n                            {\r\n                                text: 'Касса водителя: ' + tripCashService.countDriverCashBox(trip)\r\n                            },\r\n                            {\r\n                                text: 'Агентские по рейсу суммарно: ' + expenses.agentExpensesTotal\r\n                            },\r\n                            {\r\n                                text: 'Доход: ' + tripCashService.countIncomes(trip)\r\n                            },\r\n                            { text: ' ' }\r\n                        ]\r\n                    }\r\n                }\r\n\r\n                if (base64Img != null) {\r\n                    options.docDefinition.content.push({ image: base64Img });\r\n                }\r\n\r\n                PdfMaker.createAndDownload(options);\r\n            }\r\n\r\n            this.editTrip = function (trip) {\r\n                //parce time to utc object, needed for uib datetime pickers\r\n                var startDate = new Date(trip.date);\r\n                var endDate = new Date(trip.arrivalDate);\r\n\r\n                that.isEditMode = true;\r\n                that.trip = trip;\r\n                that.trip.startDate = startDate;\r\n                that.trip.startTime = startDate;\r\n                that.trip.endDate = endDate;\r\n                that.trip.endTime = endDate;\r\n                that.showAddTripForm = true;\r\n            }; \r\n\r\n            this.disableEditMode = function () {\r\n                that.showAddTripForm = false;\r\n                that.isEditMode = false;\r\n                that.clearTripModel();\r\n            }\r\n\r\n            this.delete = function (trip) {\r\n                var msg = 'Вы уверены, что хотите удалить маршрут ' + trip.cityFrom.Name + '---->' + trip.cityTo.Name + ', ' + trip.date + '?';\r\n                if (confirm(msg)) {\r\n                    Trip.remove({ id: trip.id },\r\n                        function onSuccess(deletedTrip) {\r\n                            var index = that.trips.map(function (e) { return e.id }).indexOf(deletedTrip.id);\r\n                            if (index > -1) {\r\n                                that.trips.splice(index, 1);\r\n                            }\r\n                        },\r\n                        function onError(error) {\r\n                            var errorMessage = 'Маршрут не удален. Ошибка удаления: ' + error.data.Message;\r\n                            alert(errorMessage);\r\n                        });\r\n                }\r\n            }\r\n\r\n            this.removeExpense = function(expensesArray, index) {\r\n                expensesArray.splice(index, 1);\r\n            }\r\n\r\n            this.addCompolsoryExpense = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.compulsoryExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.compulsoryNewCost = 0;\r\n                    that.compulsoryNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.addUnexpectedExpens = function (cost, comment) {\r\n                if (cost && comment) {\r\n                    that.trip.unexpectedExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                    that.unexpectedNewCost = 0;\r\n                    that.unexpectedNewComment = '';\r\n                }\r\n            }\r\n\r\n            this.getDriverCashbox = function (trip) {\r\n                return tripCashService.countDriverCashBox(trip);\r\n            }\r\n\r\n            this.getIncomes = function (trip) {\r\n                return tripCashService.countIncomes(trip);\r\n            }\r\n\r\n            this.getAgentExpenses = function (trip) {\r\n                return tripCashService.countAgentExpenses(trip);\r\n            }\r\n\r\n            this.mapInitialized = function (map, trip) {\r\n                google.maps.event.trigger(map, 'resize');\r\n\r\n                var directionsDisplay = new google.maps.DirectionsRenderer;\r\n                directionsDisplay.setMap(map);\r\n\r\n                that.getTripWaypoints(trip.tripClients, trip.cityFrom.Name, trip.cityTo.Name)\r\n                    .then(function (response) {\r\n                        if (response.response != null) {\r\n                            directionsDisplay.setDirections(response.response);\r\n                            trip.polyline = response.response.routes[0].overview_polyline;\r\n                        } else {\r\n                            trip.directionLoadingFaled = true;\r\n                        }\r\n\r\n                        trip.waypoints = response.waypoints;\r\n                    });\r\n            }\r\n\r\n            this.getTripWaypoints = function (clients, origin, destination) {\r\n                var waypoints = [];\r\n                var deferred = $q.defer();\r\n\r\n                var addToWaypoints = function (location) {\r\n                    if (!waypoints.some((wp) =>\r\n                        wp.location == location) && location != origin && location != destination) {\r\n                        location = location.concat(', Украина');\r\n                        waypoints.push({ location: location, stopover: true });\r\n                    }\r\n                }\r\n\r\n                clients.map(function (client) {\r\n                    addToWaypoints(client.To);\r\n                    addToWaypoints(client.From);\r\n                });\r\n\r\n                googleMapsService.optimizeWaypoints(origin, destination, waypoints,\r\n                    function (response) {\r\n                        deferred.resolve(response);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            $scope.$watchCollection('$ctrl.trip.tripClients', function (newValue, previousValue) {\r\n                if (newValue && newValue.length > 0) {\r\n                    $scope.form.$setValidity('isAnyClient', true);\r\n                }\r\n            });\r\n        }]\r\n});","'use strict';\r\n\r\n// Define the `driverList` module\r\nangular.module('driverList', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverList')\r\n  .component('driverList',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-list.template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [\r\n        'Driver', '$scope', '$uibModal', function (Driver, $scope, $uibModal) {\r\n            var that = this;\r\n            that.drivers = [];\r\n            that.addDriverBlockVisible = false;\r\n            that.addNewClass = \"\";\r\n\r\n            that.$onInit = function () {\r\n                that.drivers = that.resolve.drivers;\r\n            };\r\n\r\n            that.closeModal = function () {\r\n                that.close({ $value: that.drivers });\r\n            };\r\n\r\n            that.editDriver = function (driver) {\r\n                $scope.$broadcast('editDriverEvent', { driver: driver });\r\n            };\r\n\r\n            that.showAddDriverBlock = function () {\r\n                that.addDriverBlockVisible = !that.addDriverBlockVisible;\r\n                that.addNewClass = that.addDriverBlockVisible ? \"not-active\" : \"\";\r\n            };\r\n\r\n            that.deleteDriver = function (id) {\r\n                $scope.$broadcast('deleteDriverEvent', { id: id });\r\n            };\r\n        }\r\n      ]\r\n  });","'use strict';\r\n\r\n// Define the `driverCrud` module\r\nangular.module('driverCrud', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverCrud')\r\n  .component('driverCrud',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-crud/driver-crud.template.html',\r\n    controller: [\r\n      'Driver', '$scope', function (Driver, $scope) {\r\n        var that = this;\r\n        this.maxPhotoWidth = 150;\r\n        this.maxPhotoHeight = 150;\r\n        this.driver = {};\r\n\r\n        this.cancel = function () {\r\n          $scope.$parent.$ctrl.showAddDriverBlock();\r\n        };\r\n\r\n        this.save = function (driver) {\r\n          that.driver = driver;\r\n          if (driver.Id > 0) {\r\n            Driver.update({ id: driver.Id },\r\n              driver,\r\n              function (editedDriver) {\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          } else {\r\n            Driver.add(driver,\r\n              function onSuccess(createdDriver) {\r\n                $scope.$parent.$ctrl.drivers.push(createdDriver);\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          }\r\n        };\r\n\r\n        this.deleteDriver = function (id) {\r\n          Driver.delete({ id: id },\r\n            function onSuccess(deletedDriver) {\r\n              var index = $scope.$parent.$ctrl.drivers.map(function(e) { return e.Id }).indexOf(deletedDriver.Id);\r\n              if (index > -1) {\r\n                $scope.$parent.$ctrl.drivers.splice(index, 1);\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        $scope.$on('deleteDriverEvent',\r\n          function(event, params) {\r\n            that.deleteDriver(params.id);\r\n          }\r\n        );\r\n\r\n        $scope.$on('editDriverEvent',\r\n          function (event, params) {\r\n            that.driver = params.driver;\r\n            $(\"#photoPreview\").attr(\"src\", 'data:image/png;base64,' + that.driver.Photo);\r\n            $scope.$parent.$ctrl.showAddDriverBlock();\r\n          }\r\n        );\r\n\r\n        this.resizeBase64Img = function (base64Img, maxWidth, maxHeight) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var deferred = $.Deferred();\r\n\r\n            $(\"<img/>\").attr(\"src\", base64Img).load( function () {\r\n                var width = this.width;\r\n                var height = this.height;\r\n\r\n                if (width > height) {\r\n                    if (width > maxWidth) {\r\n                        height *= maxWidth / width;\r\n                        width = maxWidth;\r\n                    }\r\n                } else {\r\n                    if (height > maxHeight) {\r\n                        width *= maxHeight / height;\r\n                        height = maxHeight;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.drawImage(this, 0, 0, width, height);\r\n                deferred.resolve($(\"<img/>\").attr(\"src\", canvas.toDataURL()));\r\n            });\r\n            return deferred.promise();\r\n        }\r\n\r\n        $(\"#driverPhoto\").change(function () {\r\n            if (this.files && this.files[0]) {\r\n                var fr = new FileReader();\r\n                fr.onload = function (e) {\r\n                    that.resizeBase64Img(e.target.result, that.maxPhotoWidth, that.maxPhotoHeight)\r\n                        .then(function (newImg) {\r\n                            that.driver.Photo = newImg[0].src.replace('data:image/png;base64,', '');\r\n                            console.log(newImg[0].src);\r\n                            $(\"#photoPreview\").attr(\"src\", newImg[0].src);\r\n                        }\r\n                    );\r\n                };\r\n                fr.readAsDataURL(this.files[0]);\r\n            }\r\n        });\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalBus` module\r\nangular.module('modalBus', ['core.bus']);","'use strict';\r\n\r\n// Register `modalBus` component, along with its associated controller and template\r\nangular.\r\n  module('modalBus').\r\n  component('modalBus', {\r\n    templateUrl: 'Content/app/bus-list/modal/modalBus-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.bus = that.resolve.bus;\r\n        if (that.bus && that.bus.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.bus });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `busList` module\r\nangular.module('busList', ['core.bus']);\r\n","'use strict';\r\n\r\n// Register `busList` component, along with its associated controller and template\r\nangular.module('busList')\r\n  .component('busList',\r\n  {\r\n    templateUrl: 'Content/app/bus-list/bus-list.template.html',\r\n    controller: [\r\n      'Bus', '$scope', '$uibModal',\r\n      function (Bus, $scope, $uibModal) {\r\n        var that = this;\r\n        that.buses = Bus.query();\r\n        that.bus = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalBus',\r\n          resolve: {\r\n            bus: function() {\r\n              return that.bus;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addBus = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.add(bus,\r\n              function onSuccess(createdBus) {\r\n                that.buses.push(createdBus);\r\n                that.clearBus();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editBus = function(bus) {\r\n          that.bus = bus;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.update({ id: bus.Id },\r\n              bus,\r\n              that.clearBus);\r\n          },\r\n          that.clearBus);\r\n        };\r\n\r\n        that.deleteBus = function(id) {\r\n          Bus.delete({ id: id },\r\n            function onSuccess(deletedBus) {\r\n              var index = that.buses.map(function (e) { return e.Id }).indexOf(deletedBus.Id);\r\n              if (index > -1) {\r\n                that.buses.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clearBus = function () {\r\n            that.bus = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `agentList` module\r\nangular.module('agentList', ['core.agent']);\r\n","'use strict';\r\n\r\n// Register `agentList` component, along with its associated controller and template\r\nangular.module('agentList')\r\n  .component('agentList',\r\n  {\r\n    templateUrl: 'Content/app/agent-list/agent-list.template.html',\r\n    controller: [\r\n      'Agent', '$scope', '$uibModal',\r\n      function (Agent, $scope, $uibModal) {\r\n        var that = this;\r\n\r\n        that.agents = Agent.query();\r\n        that.agent = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalAgent',\r\n          resolve: {\r\n            agent: function() {\r\n              return that.agent;\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n        that.addAgent = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.add(agent,\r\n              function onSuccess(createdAgent) {\r\n                that.agents.push(createdAgent);\r\n                  that.clearAgent();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editAgent = function(agent) {\r\n          that.agent = agent;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.update({ id: agent.Id },\r\n              agent,\r\n              that.clearAgent);\r\n          },\r\n          that.clearAgent);\r\n        };\r\n\r\n        that.deleteAgent = function(id) {\r\n          Agent.delete({ id: id },\r\n            function onSuccess(deletedAgent) {\r\n              var index = that.agents.map(function (e) { return e.Id }).indexOf(deletedAgent.Id);\r\n              if (index > -1) {\r\n                that.agents.splice(index, 1);\r\n              }\r\n            },\r\n            function onError(error) {\r\n                var errorMessage = error.data.Message;\r\n                alert(errorMessage);\r\n            });\r\n        };\r\n\r\n        that.clearAgent = function () {\r\n            that.agent = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalAgent` module\r\nangular.module('modalAgent', ['core.agent']);","'use strict';\r\n\r\n// Register `modalAgent` component, along with its associated controller and template\r\nangular.\r\n  module('modalAgent').\r\n  component('modalAgent', {\r\n    templateUrl: 'Content/app/agent-list/modal/modalAgent-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.agent = that.resolve.agent;\r\n        if (that.agent && that.agent.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.agent });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `reports` module\r\nangular.module('reports', []);\r\n","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('agentReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/agent-reports.template.html',\r\n        controller: [\r\n            'Agent', 'AgentReport', '$filter', 'PdfMaker',\r\n            function (Agent, AgentReport, $filter, pdfMaker) {\r\n                var that = this;\r\n\r\n                that.agents = Agent.query();\r\n                that.agent = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                that.dateFrom = new Date();\r\n                that.dateTo = new Date();\r\n                that.dateOptions = {\r\n                    showWeeks: false,\r\n                    startingDay: 0,\r\n                    maxDate: new Date()\r\n                }\r\n                that.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function (reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по агенту ' + that.agent.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].AgentCompensation;\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n\r\n                    var options = {\r\n                        id: that.agent.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    AgentReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Водитель', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Компенсация за рейс', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.DriverInfo,\r\n                        report.ClientsCount.toString(),\r\n                        report.AgentCompensation.toString()]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.agent.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Агент: ' + that.agent.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('driverReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/driver-reports.template.html',\r\n        controller: [\r\n            'Driver', 'DriverReport', '$filter', 'PdfMaker',\r\n             function (Driver, DriverReport, $filter, pdfMaker) {\r\n                 var that = this;\r\n\r\n                 that.drivers = Driver.query();\r\n                 that.driver = {};\r\n                 that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                 that.dateFrom = new Date();\r\n                 that.dateTo = new Date();\r\n                 that.dateOptions = {\r\n                     showWeeks: false,\r\n                     startingDay: 0,\r\n                     maxDate: new Date()\r\n                 }\r\n\r\n                 that.DriverReports = {};\r\n                 that.reportTitle = '';\r\n                 that.totalTitle = '';\r\n                 that.totalPrice = '';\r\n                 that.reportIsShowing = false;\r\n\r\n                 that.startDatePopup = {\r\n                     opened: false\r\n                 };\r\n\r\n                 that.startDateOpen = function () {\r\n                     that.startDatePopup.opened = true;\r\n                 };\r\n\r\n                 that.endDatePopup = {\r\n                     opened: false\r\n                 };\r\n\r\n                 that.endDateOpen = function () {\r\n                     that.endDatePopup.opened = true;\r\n                 };\r\n\r\n                 that.onGetReports = function (reports) {\r\n                     reports.map(function (report) {\r\n                         that.DriverReports[report.DriverName]\r\n                             ? that.DriverReports[report.DriverName].push(report)\r\n                             : that.DriverReports[report.DriverName] = [report];\r\n                     });\r\n\r\n                     that.totalIncomes = that.getTotalIncomes(reports);\r\n                     that.isMultipleDriversMode = Object.keys(that.DriverReports).length > 1;\r\n                     that.reportIsShowing = true;\r\n                 };\r\n\r\n                 that.createReport = function () {\r\n                     that.DriverReports = {};\r\n                     that.reportTitle = '';\r\n                     that.totalTitle = '';\r\n                     that.totalPrice = '';\r\n                     that.reportIsShowing = false;\r\n\r\n                     var options = {\r\n                         id: that.driver ? that.driver.Id : null,\r\n                         dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                         dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                     };\r\n\r\n                     DriverReport.query(options, that.onGetReports);\r\n                 };\r\n\r\n                 //reports : particular DriverReports for driver or null if calculate total incomes for all drivers\r\n                 that.getTotalIncomes = function (reports) {\r\n                     const totalIncomes = reports.reduce((acc, report) => acc + report.TotalIncomes, 0);\r\n\r\n                     return totalIncomes;\r\n                 }\r\n\r\n                 that.getReportsPdfTable = function (reports, driverName) {\r\n                     var title = [\r\n                         { text: 'Водитель: ' + driverName }];\r\n\r\n                     var table = [[\r\n                         { text: 'Дата Отправления' },\r\n                         { text: 'Откуда' },\r\n                         { text: 'Куда' },\r\n                         { text: 'Автобус' },\r\n                         { text: 'Кол-во пас.' },\r\n                         { text: 'Постоянные расходы' },\r\n                         { text: 'Непред. расходы' },\r\n                         { text: 'Касса' },\r\n                         { text: 'Доход' }]];\r\n\r\n                     reports.map((report) => table.push([\r\n                           report.TripDate,\r\n                           report.CityFrom,\r\n                           report.CityTo,\r\n                           report.BusInfo,\r\n                           report.ClientsCount ? report.ClientsCount.toString() : '',\r\n                           report.CompulsoryExpenses ? report.CompulsoryExpenses.toString() : '0',\r\n                           report.UnexpectedExpenses ? report.UnexpectedExpenses.toString() : '0',\r\n                           report.DriverCashBox ? report.DriverCashBox.toString() : '0',\r\n                           report.TotalIncomes ? report.TotalIncomes.toString() : '0']));\r\n\r\n                     title.push(\r\n                         { table: { body: table } },\r\n                         { text: ' ' },\r\n                         { text: 'Итого: ' + that.getTotalIncomes(reports) },\r\n                         { text: ' ' });\r\n\r\n                     return title;\r\n                 }\r\n\r\n                 that.createPDF = function (driverName) {\r\n                     const datePeriod = $filter('date')(that.dateFrom, that.dateTimeFormat).\r\n                        concat(' - ', $filter('date')(that.dateTo, that.dateTimeFormat));\r\n\r\n                     var content = [{ text: 'Oтчет за период: ' + datePeriod }, { text: ' ' }];\r\n\r\n                     function generateReport(driversName) {\r\n                         var report = that.getReportsPdfTable(that.DriverReports[driversName], driversName);\r\n\r\n                         content = content.concat(report);\r\n                     }\r\n\r\n                     if (driverName) {\r\n                         generateReport(driverName);\r\n                     } else {\r\n                         Object.keys(that.DriverReports).map((driversName) => generateReport(driversName));\r\n                     }\r\n\r\n                     if (!driverName) {\r\n                         content.push(\r\n                             { text: ' ' },\r\n                             { text: 'Итого по всем водителям за период ' + datePeriod + ' : ' + that.totalIncomes });\r\n                     }\r\n\r\n                     const driverFileNaming = driverName ? driverName : 'по всем водителям';\r\n                     var options = {\r\n                         fileName: 'Oтчет ' + datePeriod + ' ' + driverFileNaming,\r\n                         docDefinition: {\r\n                             pageOrientation: 'portrait',\r\n                             fontSize: 12,\r\n                             content: content\r\n                         }\r\n                     }\r\n\r\n                     pdfMaker.createAndDownload(options);\r\n                 }\r\n             }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Define the `clientList` module\r\nangular.module('clientList', ['core.client']);\r\n","'use strict';\r\n\r\n// Register `clientList` component, along with its associated controller and template\r\nangular.module('clientList')\r\n  .component('clientList',\r\n  {\r\n     templateUrl: 'Content/app/client-list/client-list.template.html',\r\n     controller: [\r\n      'Client', 'Trip', '$scope', '$uibModal',\r\n      function (Client,Trip, $scope, $uibModal) {\r\n        var that = this;\r\n        that.clients = Client.query();\r\n        that.client = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalClient',\r\n          resolve: {\r\n            client: function() {\r\n              return that.client;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addClient = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.clients.push(client);\r\n            that.clearClient();\r\n          });\r\n        };\r\n\r\n        that.editClient = function(client) {\r\n          that.client = client;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.update({ id: client.Id },\r\n              client,\r\n              that.clearClient);\r\n          }, that.clearClient);\r\n        };\r\n\r\n        that.deleteClient = function(id) {\r\n          Client.delete({ id: id },\r\n            function onSuccess(deletedClient) {\r\n              var index = that.clients.map(function (e) { return e.Id }).indexOf(deletedClient.Id);\r\n              if (index > -1) {\r\n                that.clients.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clientInfo = function(client) {\r\n            Trip.query({ clientId: client.Id }, function (clientTrips) {\r\n                var options = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    component: 'modalClientTrips',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        info: function () {\r\n                            return {\r\n                                client: client,\r\n                                trips: clientTrips\r\n                            };\r\n                        }\r\n                    }\r\n                };\r\n                $uibModal.open(options);\r\n            });\r\n        };\r\n\r\n        that.clearClient = function() {\r\n            that.client = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalClient` module\r\nangular.module('modalClient', ['core.client']);","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClient', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClient-template.html',\r\n\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n\r\n      controller: ['Client', function (Client) {\r\n          var that = this;\r\n\r\n          that.message = '';\r\n          that.$onInit = function () {\r\n              that.client = that.resolve.client;\r\n              if (that.client && that.client.Id > 0) {\r\n                  that.headerTitle = 'Редактирование';\r\n              } else {\r\n                  that.headerTitle = 'Создание';\r\n              }\r\n          };\r\n\r\n          that.ok = function () {\r\n              Client.add(that.client,\r\n                  function onSuccess(createdClient) {\r\n                      that.close({ $value: createdClient });\r\n                  },\r\n                  function onError(response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join(' ');\r\n                  });\r\n          };\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClientTrips', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClientTrips-template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: ['$filter', function ($filter) {\r\n          var that = this;\r\n\r\n          that.trips = {};\r\n          that.client = {};\r\n\r\n          that.$onInit = function () {\r\n              that.trips = that.resolve.info.trips;\r\n              that.client = that.resolve.info.client;\r\n          };\r\n\r\n          that.getClienPrice = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].Price;\r\n          };\r\n\r\n          that.getClienAdditionalExpenses = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].AdditionalExpenses;\r\n          };\r\n\r\n          that.getClientAgent = function (trip) {\r\n              var clientTrip = trip.tripClients.find((client) => client.ClientId == that.client.Id);\r\n\r\n              trip.agentName = clientTrip.AgentName;\r\n          }\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\nangular.module('citiesList', ['core.city', 'google.places']);","'use strict';\r\n\r\nangular.\r\n  module('citiesList').\r\n  component('citiesList', {\r\n      templateUrl: 'Content/app/cities-list/cities-list.template.html',\r\n      controller: ['City', '$scope', function CitiesListController(City, $scope) {\r\n          var that = this;\r\n\r\n          this.cities = City.query();\r\n          this.showAddCityForm = false;\r\n          this.choosedPlace = '';\r\n\r\n          this.showAddForm = function () {\r\n              that.showAddCityForm = !that.showAddCityForm;\r\n          }\r\n\r\n          $scope.autocompleteOptions = {\r\n              componentRestrictions: { country: 'ukr' },\r\n              types: ['(cities)']\r\n          }\r\n\r\n          this.saveCity = function () {\r\n              if (that.choosedPlace) {\r\n                  that.showAddCityForm = false;\r\n                  let cityName = that.choosedPlace.name ? that.choosedPlace.name : that.choosedPlace;\r\n\r\n                  City.add({ name: cityName }, function (createdCity) {\r\n                      that.cities.push(createdCity);\r\n                      that.choosedPlace = '';\r\n                  });\r\n              }\r\n          }\r\n\r\n          this.removeCity = function (cityId) {\r\n              City.delete({ id: cityId }, function onSuccess(deletedCity) {\r\n                  that.cities = that.cities.filter((el) => el.Id != cityId);\r\n              });\r\n          }\r\n\r\n          this.setCityFromAutocomplete = function (err, place) {\r\n              that.city.name = place;\r\n          }\r\n      }]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `pdfMaker` module\r\nangular.module('pdfMaker', []);","'use strict';\r\n\r\n// Register `pdfMaker` component, along with its associated controller and template\r\nangular.\r\n    module('pdfMaker').\r\n    factory('PdfMaker', function() {\r\n        return {\r\n            createAndDownload: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).download(options.fileName ? options.fileName : 'file.pdf');\r\n            },\r\n            createAndOpen: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).open();\r\n            }\r\n        }\r\n    });","'use strict';\r\n\r\nangular.module('signUp', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('signUp').\r\n  component('signUp', {\r\n      templateUrl: 'Content/app/authentication/signup/signup.template.html',\r\n      controller: ['AuthService', '$location', function (authService, $location) {\r\n          var that = this;\r\n\r\n          this.savedSuccessfully = false;\r\n          this.message = \"\";\r\n\r\n          this.registration = {\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\"\r\n          };\r\n\r\n          this.signUp = function (formValid) {\r\n              if (formValid) {\r\n                  authService.saveRegistration(this.registration).then(function (response) {\r\n                      that.savedSuccessfully = true;\r\n                      that.message = \"User has been registered successfully, you will be redirected to login page in 2 seconds.\";\r\n\r\n                      $location.path('/login');\r\n                  },\r\n                  function (response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join('\\n');\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('signIn', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('signIn').\r\n    component('signIn',\r\n    {\r\n        templateUrl: 'Content/app/authentication/signin/signin.template.html',\r\n        controller: ['AuthService', '$location', function(authService, $location) {\r\n            var that = this;\r\n\r\n            if (authService.authData.isAuth) {\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            this.loginData={\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n            this.message=\"\";\r\n\r\n            this.login = function() {\r\n                authService.login(this.loginData).then(function(response) {\r\n                    $location.path('/trips');\r\n                },\r\n                function(err) {\r\n                    that.message=err.data.error_description;\r\n                });\r\n            };\r\n        }\r\n    ]\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('navBar', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('navBar').\r\n    component('navbar',\r\n    {\r\n        templateUrl: 'Content/app/navbar/navbar.template.html',\r\n        controller: ['AuthService', 'authConstants', function (authService, authConstants) {\r\n            var that = this;\r\n\r\n            this.ClientAccessRoles = authConstants.ClientAccessRoles;\r\n            this.BusesAccessRoles = authConstants.BussesAccessRoles;\r\n\r\n            this.updateAuthData = function () {\r\n                that.isAuth = authService.authData.isAuth;\r\n                that.currentRole = authService.authData.role;\r\n            }\r\n\r\n            authService.registerObserverCallback(that.updateAuthData);\r\n\r\n            this.isAuth = authService.authData.isAuth;\r\n            this.currentRole = authService.authData.role;\r\n\r\n            this.hasRole = function (allowedRoles) {\r\n                if (that.isAuth) {\r\n                    if (!allowedRoles) {\r\n                        return that.currentRole == 'Admin';\r\n                    }\r\n\r\n                    return allowedRoles.indexOf(that.currentRole) != -1 || that.currentRole == 'Admin';\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }]\r\n    });\r\n\r\n","angular.module('VektorApp')\r\n    .directive(\"compareTo\",\r\n        function() {\r\n            return {\r\n                require: \"ngModel\",\r\n                scope: {\r\n                    otherModelValue: \"=compareTo\"\r\n                },\r\n                link: function(scope, element, attributes, ngModel) {\r\n\r\n                    ngModel.$validators.compareTo=function(modelValue) {\r\n                        return modelValue == scope.otherModelValue;\r\n                    };\r\n\r\n                    scope.$watch(\"otherModelValue\",\r\n                        function() {\r\n                            ngModel.$validate();\r\n                        });\r\n                }\r\n            };\r\n        });","'use strict';\r\n\r\nangular.module('manageAccount', ['core.manageAccount', 'core.authentication']);","'use strict';\r\n\r\nangular.module('manageAccount').component('manageAccount', {\r\n    templateUrl: 'Content/app/manage-account/manage-account.template.html',\r\n    controller: ['ManageAccountService', 'AuthService', function (manageAccountService, authService) {\r\n        var that = this;\r\n\r\n        this.message = \"\";\r\n        this.updateSuccefull = null;\r\n        this.accountData = {};\r\n\r\n        manageAccountService.getAccountInfo().then(function (response) {\r\n            that.accountData.email = response.Email;\r\n            that.accountData.name = response.Name;\r\n        });\r\n\r\n        this.update = function (formValid) {\r\n            if (formValid) {\r\n                manageAccountService.updateAccount(this.accountData)\r\n                    .then(function () {\r\n                        that.message = \"Account has been successfully updated\";\r\n                        that.updateSuccefull = true;\r\n\r\n                        authService.UpdateAuthData(that.accountData.email, that.accounData.name);\r\n                    },\r\n                    function (response) {\r\n                        var errors = [];\r\n                        for (var key in response.data.ModelState) {\r\n                            for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                                errors.push(response.data.ModelState[key][i]);\r\n                            }\r\n                        }\r\n\r\n                        that.message = errors.join('\\n');\r\n                        that.updateSuccefull = false;\r\n                    });\r\n            }\r\n        }\r\n    }]\r\n});","angular.module('googleMaps', []);","'use strict';\r\n\r\n// Define the `googleMaps` service\r\nangular.module('googleMaps')\r\n    .factory('googleMapsService', [function () {\r\n        var googleMapsFactory = {};\r\n        var directionsService = new google.maps.DirectionsService;\r\n        var googleMapsServiceBase = 'https://maps.googleapis.com/maps/api/staticmap?size=500x400&maptype=roadmap';\r\n\r\n        googleMapsFactory.optimizeWaypoints = function (cityFrom, cityTo, waypoints, callback) {\r\n            var orderedWaypoints = [];\r\n\r\n            directionsService.route({\r\n                origin: cityFrom + ', Украина',\r\n                destination: cityTo + ', Украина',\r\n                travelMode: google.maps.TravelMode.DRIVING,\r\n                waypoints: waypoints ,\r\n                optimizeWaypoints: true\r\n            }, function (response) {\r\n                if (response != null) {\r\n                    response.routes[0].waypoint_order.map((order) => orderedWaypoints.push(waypoints[order]));\r\n                };\r\n\r\n                callback({response: response, waypoints: orderedWaypoints});\r\n            });\r\n        }\r\n\r\n        googleMapsFactory.getGoogleMapsImage = function (cityFrom, cityTo, waypoints, polyline, callback) {\r\n            //generate static maps url with direction polyline\r\n            var url = googleMapsServiceBase.concat(\r\n                googleMapsFactory.covertWaypointsToUrlParams(cityFrom, cityTo, waypoints),\r\n                '&path=color:0x0000ff80|weight:5|enc:', polyline,\r\n                '&key=AIzaSyASESgz77PHOJYW_GWrEa4eAJPlMXeua5Q');\r\n\r\n            //convert image to base64\r\n            googleMapsFactory.convertImgToDataURL(url, callback);\r\n        }\r\n\r\n        googleMapsFactory.covertWaypointsToUrlParams = function (cityFrom, cityTo, waypoints) {\r\n            var urlParams = '';\r\n\r\n            //variable to avoid js locking\r\n            var getUrlParam = function (location, color) {\r\n                color = color ? color : 'green';\r\n\r\n                return '&markers=color:' + color + '|' + location;\r\n            };\r\n\r\n            urlParams += getUrlParam(cityFrom);\r\n            waypoints.map((waypoint) => urlParams += getUrlParam(waypoint.location));\r\n            urlParams += getUrlParam(cityTo, 'red');\r\n\r\n            return urlParams;\r\n        }\r\n\r\n        googleMapsFactory.convertImgToDataURL = function (url, callback) {\r\n            var img = new Image();\r\n            img.crossOrigin = 'Anonymous';\r\n\r\n            img.onload = function () {\r\n                var canvas = document.createElement('CANVAS');\r\n                var ctx = canvas.getContext('2d');\r\n                var dataURL;\r\n\r\n                canvas.height = this.height;\r\n                canvas.width = this.width;\r\n                ctx.drawImage(this, 0, 0);\r\n\r\n                dataURL = canvas.toDataURL();\r\n                callback(dataURL);\r\n\r\n                canvas = null;\r\n            };\r\n\r\n            img.src = url;\r\n        }\r\n\r\n        return googleMapsFactory;\r\n    }]);","angular.module('VektorApp')\r\n\t.directive('loading', ['$http', '$timeout', function ($http, $timeout) {\r\n\treturn {\r\n\t\trestrict: 'A',\r\n\t\tlink: function (scope, elm, attrs) {\r\n\t\t\tscope.isLoading = function () {\r\n\t\t\t\treturn $http.pendingRequests.length > 0;\r\n\t\t\t};\r\n\r\n\t\t\tscope.$watch(scope.isLoading, function (newValue) {\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t    elm.show();\r\n\t\t\t\t} else {\r\n\t\t\t\t\telm.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n}]);"]}