{"version":3,"sources":["app.module.js","app.config.js","app.animations.js","core/core.module.js","core/checkmark/checkmark.filter.js","core/client/client.module.js","core/client/client.service.js","core/clientTrip/clientTrip.module.js","core/clientTrip/clientTrip.service.js","core/trip/trip.module.js","core/trip/trip.service.js","core/driver/driver.module.js","core/driver/driver.service.js","core/bus/bus.module.js","core/bus/bus.service.js","core/city/city.module.js","core/city/city.service.js","core/agent/agent.module.js","core/agent/agent.service.js","core/agentReport/agentReport.module.js","core/agentReport/agentReport.service.js","core/driverReport/driverReport.module.js","core/driverReport/driverReport.service.js","core/authentication/authentication.module.js","core/authentication/authentication.service.js","core/authentication/authInterceptor.service.js","core/manageAccount/manageAccount.module.js","core/manageAccount/manageAccount.service.js","clientTrip-list/clientTrip-list.module.js","clientTrip-list/clientTrip-list.component.js","client-detail/client-detail.module.js","client-detail/client-detail.component.js","trip-list/trip-list.module.js","trip-list/trip-list.component.js","driver-list/driver-list.module.js","driver-list/driver-list.component.js","driver-list/driver-crud/driver-crud.module.js","driver-list/driver-crud/driver-crud.component.js","bus-list/modal/modalBus.module.js","bus-list/modal/modalBus.component.js","bus-list/bus-list.module.js","bus-list/bus-list.component.js","agent-list/agent-list.module.js","agent-list/agent-list.component.js","agent-list/modal/modalAgent.module.js","agent-list/modal/modalAgent.component.js","reports/reports.module.js","reports/agent-reports.component.js","reports/driver-reports.component.js","client-list/client-list.module.js","client-list/client-list.component.js","client-list/modal/modalClient.module.js","client-list/modal/modalClient.component.js","client-list/modal/modalClientTrips.component.js","cities-list/cities-list.module.js","cities-list/cities-list.component.js","pdfMaker/pdfMaker.module.js","pdfMaker/pdfMaker.service.js","authentication/signup/signup.module.js","authentication/signup/signup.component.js","authentication/signin/signin.module.js","authentication/signin/signin.component.js","navbar/navbar.module.js","navbar/navbar.component.js","Derectives/compare-passwords.derective.js","manage-account/manage-account.module.js","manage-account/manage-account.component.js","google-maps/google-maps.module.js","google-maps/google-maps.service.js"],"names":["angular","module","constant","ClientAccessRoles","BussesAccessRoles","AllRoles","config","$locationProvider","$routeProvider","authConstants","$httpProvider","$qProvider","interceptors","push","defaults","useXDomain","headers","common","html5Mode","errorOnUnhandledRejections","when","template","acceptedRoles","allowAnonymus","templateUrl","otherwise","run","$rootScope","$location","authService","$on","event","next","currentRole","authData","role","indexOf","isAuth","path","animation","animateIn","element","className","done","css","display","position","top","left","animate","wasCanceled","stop","animateOut","addClass","removeClass","filter","input","factory","$resource","query","method","isArray","add","update","remove","params","Id","get","service","id","dateFrom","dateTo","authDataResourceKey","localStorageService","$http","$q","authServiceFactory","observerCallbacks","name","registerObserverCallback","callback","notifyObservers","forEach","saveRegistration","registration","logOut","post","then","response","login","loginData","data","email","password","deferred","defer","Content-Type","set","token","access_token","resolve","err","status","reject","promise","UpdateAuthData","previousData","newName","$injector","authInterceptorServiceFactory","request","Authorization","responseError","rejection","manageAccountFactory","updateAccount","accountData","put","getAccountInfo","component","controller","ClientTrip","$scope","City","Agent","that","this","clientFilter","clients","cities","agents","orderProp","removeFromTrip","client","index","$parent","$ctrl","trip","tripClients","splice","addToTrip","console","log","clientFilterAction","length","clientTrips","filterThrottled","_","debounce","$watch","$routeParams","Client","self","clientId","Trip","Bus","Driver","$uibModal","PdfMaker","$filter","googleMapsService","showAddTripForm","isEditMode","dateNow","Date","mapCenterLatLng","compulsoryExpenses","unexpectedExpenses","startDate","startTime","endDate","endTime","trips","buses","drivers","dateFormat","dateOptions","minDate","showWeeks","startingDay","timeOptions","minuteStep","startDatePopup","opened","startDateOpen","endDatePopup","endDateOpen","showAddForm","submitted","form","$setValidity","$invalid","create","joinTripDateAndTime","createdTrip","clearTripModel","updatedTrip","$setPristine","$setUntouched","$broadcast","date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","arrivalDate","openDriversList","modalOptions","backdrop","size","modalInstance","open","result","createPDF","tableBody","text","style","i","Name","Phone","To","From","Price","toString","IsStayInBus","HasMinorChild","HasDisability","compolsuryExpenseTable","unexpectedExpenseTable","map","expense","Cost","Comment","bus","FriendlyName","RegistrationNumber","driver","FullName","fileName","cityFrom","concat","cityTo","getGoogleMapsImage","base64Img","options","docDefinition","pageOrientation","fontSize","content","columns","width","table","headerRows","body","getDriverCashbox","image","createAndDownload","editTrip","disableEditMode","delete","msg","confirm","deletedTrip","e","error","errorMessage","Message","alert","addCompolsoryExpense","cost","comment","compulsoryNewCost","compulsoryNewComment","addUnexpectedExpens","unexpectedNewCost","unexpectedNewComment","expenseSumFun","acc","compulsoryExpensesSum","reduce","unexpectedExpensesSum","incomes","$watchCollection","newValue","previousValue","bindings","close","dismiss","addDriverBlockVisible","addNewClass","$onInit","closeModal","$value","editDriver","showAddDriverBlock","deleteDriver","maxPhotoWidth","maxPhotoHeight","cancel","save","editedDriver","createdDriver","deletedDriver","$","attr","Photo","resizeBase64Img","maxWidth","maxHeight","canvas","document","createElement","Deferred","load","height","context","getContext","drawImage","toDataURL","change","files","fr","FileReader","onload","target","newImg","src","replace","readAsDataURL","headerTitle","ok","addBus","createdBus","clearBus","editBus","deleteBus","deletedBus","agent","addAgent","createdAgent","clearAgent","editAgent","deleteAgent","deletedAgent","AgentReport","pdfMaker","dateTimeFormat","maxDate","reports","reportTitle","totalTitle","totalPrice","reportIsShowing","onGetReports","AgentCompensation","createReport","report","TripDate","CityFrom","CityTo","BusInfo","DriverInfo","ClientsCount","datePeriod","DriverReport","CompulsoryExpenses","UnexpectedExpenses","addClient","createdClient","clearClient","editClient","deleteClient","deletedClient","clientInfo","info","getClienPrice","found","ClientId","getClienAdditionalExpenses","AdditionalExpenses","showAddCityForm","autocompleteOptions","componentRestrictions","country","types","saveCity","place","choosedPlace","setCityFromAutocomplete","city","pdfMake","createPdf","download","createAndOpen","savedSuccessfully","message","confirmPassword","signUp","formValid","errors","key","ModelState","join","error_description","BusesAccessRoles","updateAuthData","hasRole","allowedRoles","directive","require","scope","otherModelValue","link","attributes","ngModel","$validators","compareTo","modelValue","$validate","manageAccountService","updateSuccefull","Email","accounData","googleMapsFactory","directionsService","google","maps","DirectionsService","googleMapsServiceBase","route","origin","destination","travelMode","TravelMode","DRIVING","url","routes","overview_polyline","convertImgToDataURL","img","Image","crossOrigin","dataURL","ctx"],"mappings":"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","file":"../all.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('VektorApp', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ui.bootstrap',\r\n  'core',\r\n  'pdfMaker',\r\n  'clientDetail',\r\n  'clientList',\r\n  'clientTripList',\r\n  'tripList',\r\n  'busList',\r\n  'modalBus',\r\n  'driverList',\r\n  'driverCrud',\r\n  'citiesList',\r\n  'agentList',\r\n  'modalAgent',\r\n  'modalClient',\r\n  'reports',\r\n  'signUp',\r\n  'signIn',\r\n  'LocalStorageModule',\r\n  'navBar',\r\n  'manageAccount',\r\n  'googleMaps'\r\n]);","'use strict';\r\n\r\nangular.\r\n    module('VektorApp')\r\n    .constant('authConstants',\r\n    {\r\n        ClientAccessRoles: ['Driver'],\r\n        BussesAccessRoles: ['Driver', 'Partner'],\r\n        AllRoles: ['User', 'Driver', 'Partner']\r\n    })\r\n    .config(['$locationProvider', '$routeProvider', 'authConstants', '$httpProvider', '$qProvider',\r\n        function config($locationProvider, $routeProvider, authConstants, $httpProvider, $qProvider) {\r\n\r\n            $httpProvider.interceptors.push('authInterceptorService');\r\n\r\n            //allow CORS\r\n            $httpProvider.defaults.useXDomain = true;\r\n            delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n\r\n            $locationProvider.html5Mode(true);\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n\r\n            $routeProvider.\r\n                when('/clients',\r\n                {\r\n                    template: '<client-list></client-list>',\r\n                    acceptedRoles: authConstants.ClientAccessRoles\r\n                }).\r\n                when('/clients/:clientId',\r\n                {\r\n                    template: '<client-detail></client-detail>'\r\n                }).\r\n                when('/trips',\r\n                {\r\n                    template: '<trip-list></trip-list>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                when('/buses',\r\n                {\r\n                    template: '<bus-list></bus-list>',\r\n                    acceptedRoles: authConstants.BussesAccessRoles\r\n                }).\r\n                when('/cities',\r\n                {\r\n                    template: '<cities-list></cities-list>'\r\n                }).\r\n                when('/signup',\r\n                {\r\n                    template: '<sign-up></sign-up>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/login',\r\n                {\r\n                    template: '<sign-in></sign-in>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/agents',\r\n                {\r\n                    template: '<agent-list></agent-list>'\r\n                }).\r\n                when('/agentReports',\r\n                {\r\n                    template: '<agent-reports></agent-reports>'\r\n                }).\r\n                when('/driverReports',\r\n                {\r\n                    template: '<driver-reports></driver-reports>'\r\n                }).\r\n                when('/access-forbidden',\r\n                {\r\n                    templateUrl: 'Content/app/access-forbidden.html',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/manageAccount',\r\n                {\r\n                    template: '<manage-account></manage-account>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                otherwise('/trips');\r\n        }\r\n    ]).run(['$rootScope', '$location', 'AuthService',\r\n        function ($rootScope, $location, authService) {\r\n            $rootScope.$on('$routeChangeStart',\r\n                function (event, next) {\r\n                    var currentRole = authService.authData.role; \r\n                    next.acceptedRoles = next.acceptedRoles ? next.acceptedRoles : [];\r\n\r\n                    //if current user is not authenticated or his role is not accepted to view particular route\r\n                    if (next.allowAnonymus) {\r\n                        return true;\r\n                    }\r\n\r\n                    if (currentRole != \"Admin\" && next.acceptedRoles.indexOf(currentRole) == -1) {\r\n                        if (!authService.authData.isAuth) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $location.path('/access-forbidden');\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n    ]);","'use strict';\r\n\r\nangular.\r\n  module('VektorApp').\r\n  animation('.client', function clientAnimationFactory() {\r\n    return {\r\n      addClass: animateIn,\r\n      removeClass: animateOut\r\n    };\r\n\r\n    function animateIn(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: 500,\r\n        left: 0\r\n      }).animate({\r\n        top: 0\r\n      }, done);\r\n\r\n      return function animateInEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n\r\n    function animateOut(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n      }).animate({\r\n        top: -500\r\n      }, done);\r\n\r\n      return function animateOutEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core` module\r\nangular.module('core', ['core.client', 'core.trip', 'core.bus', 'core.city', 'core.manageAccount',\r\n    'core.driver', 'core.agent', 'core.agentReport', 'core.driverReport', 'core.clientTrip', 'core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('core').\r\n  filter('checkmark', function() {\r\n    return function(input) {\r\n      return input ? '\\u2713' : '\\u2718';\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core.client` module\r\nangular.module('core.client', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.client').\r\n  factory('Client', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clients/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.clientTrip` module\r\nangular.module('core.clientTrip', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.clientTrip').\r\n  factory('ClientTrip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clientTrips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.trip', ['ngResource']);","angular.\r\n  module('core.trip').\r\n  factory('Trip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/trips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            get: {\r\n                method: 'GET',\r\n                params: { Id: 'id' }\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE'\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.driver', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.driver').\r\n  factory('Driver', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/drivers/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.bus` module\r\nangular.module('core.bus', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.bus').\r\n  factory('Bus', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/buses/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.city', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.city').\r\n  service('City', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/Cities/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agent` module\r\nangular.module('core.agent', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.agent').\r\n  factory('Agent', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agents/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agentReport` module\r\nangular.module('core.agentReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.agentReport').\r\n  factory('AgentReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agentReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.driverReport` module\r\nangular.module('core.driverReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.driverReport').\r\n  factory('DriverReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/driverReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.authentication', []);","'use strict';\r\n\r\nconst authDataResourceKey = \"authorizationData\";\r\n\r\nangular.\r\n  module('core.authentication').\r\n      factory('AuthService', ['localStorageService', '$http', '$q', function (localStorageService, $http, $q) {\r\n          var authServiceFactory = {};\r\n          var observerCallbacks = [];\r\n\r\n          var authData = localStorageService.get(authDataResourceKey);\r\n          authServiceFactory.authData = {\r\n              isAuth: authData != null,\r\n              name: authData ? authData.name : \"\",\r\n              role: authData ? authData.role : \"guest\",\r\n          };\r\n\r\n          authServiceFactory.registerObserverCallback = function (callback) {\r\n              observerCallbacks.push(callback);\r\n          };\r\n\r\n          //call this when you know that authData has been changed\r\n          var notifyObservers = function () {\r\n              angular.forEach(observerCallbacks, function (callback) {\r\n                  callback();\r\n              });\r\n          }\r\n\r\n          authServiceFactory.saveRegistration = function (registration) {\r\n              authServiceFactory.logOut();\r\n\r\n              return $http.post('/api/Account/Register', registration).then(function (response) {\r\n                  return response;\r\n              });\r\n          };\r\n\r\n          authServiceFactory.logOut = function () {\r\n              localStorageService.remove(authDataResourceKey);\r\n\r\n              authServiceFactory.authData.isAuth = false;\r\n              authServiceFactory.authData.role = \"\";\r\n              authServiceFactory.authData.name = \"\";\r\n\r\n              notifyObservers();\r\n          };\r\n\r\n          authServiceFactory.login = function (loginData) {\r\n              var data = \"grant_type=password&username=\" + loginData.email + \"&password=\" + loginData.password;\r\n\r\n              var deferred = $q.defer();\r\n\r\n              $http.post('/api/token', data, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                   .then(function (response) {\r\n                       localStorageService.set(authDataResourceKey, { token: response.data.access_token, name: response.data.name, role: response.data.role });\r\n\r\n                       authServiceFactory.authData.isAuth = true;\r\n                       authServiceFactory.authData.name = response.data.name;\r\n                       authServiceFactory.authData.role = response.data.role;\r\n\r\n                       notifyObservers();\r\n\r\n                       deferred.resolve(response);\r\n                   },\r\n                   function (err, status) {\r\n                       authServiceFactory.logOut();\r\n                       deferred.reject(err);\r\n                   });\r\n\r\n              return deferred.promise;\r\n          };\r\n\r\n          authServiceFactory.UpdateAuthData = function (email, name) {\r\n              var previousData = localStorageService.get(authDataResourceKey);\r\n\r\n              var newName = name ? name : previousData.name;\r\n\r\n              localStorageService.set(authDataResourceKey,\r\n              {\r\n                  token: previousData.token,\r\n                  name: newName\r\n              });\r\n\r\n              authServiceFactory.authData.name = newName;\r\n              notifyObservers();\r\n          }\r\n\r\n          return authServiceFactory;\r\n      }\r\n    ]);","'use strict';\r\nangular.module('core.authentication')\r\n    .factory('authInterceptorService', ['$q', '$injector', '$location', 'localStorageService', function ($q, $injector, $location, localStorageService) {\r\n\r\n        var authInterceptorServiceFactory = {};\r\n\r\n        authInterceptorServiceFactory.request = function (config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = localStorageService.get('authorizationData');\r\n\r\n            if (authData) {\r\n                config.headers.Authorization = 'Bearer ' + authData.token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        authInterceptorServiceFactory.responseError = function (rejection) {\r\n            if (rejection.status === 401) {\r\n                var authService = $injector.get('authService');\r\n\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        return authInterceptorServiceFactory;\r\n    }]);","'use strict';\r\n\r\nangular.module('core.manageAccount', []);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.manageAccount').\r\n  factory('ManageAccountService', ['$http',\r\n    function ($http) {\r\n        var manageAccountFactory = {};\r\n\r\n        manageAccountFactory.updateAccount = function (accountData) {\r\n            return $http.put('/api/Account/', accountData).then(function(response) {\r\n                return response;\r\n            });\r\n        }\r\n\r\n        manageAccountFactory.getAccountInfo = function () {\r\n            return $http.get('/api/Account/').then(function(response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        return manageAccountFactory;\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `clientTripList` module\r\nangular.module('clientTripList', ['core.clientTrip']);\r\n","'use strict';\r\n\r\n// Register `clientTripList` component, along with its associated controller and template\r\nangular.\r\n  module('clientTripList').\r\n  component('clientTripList', {\r\n      templateUrl: 'Content/app/clientTrip-list/clientTrip-list.template.html',\r\n      controller: ['ClientTrip', '$scope', 'City', 'Agent',\r\n        function (ClientTrip, $scope, City, Agent) {\r\n            var that = this;\r\n\r\n            this.clientFilter = '';\r\n            this.clients = [];\r\n            this.cities = City.query();\r\n            this.agents = Agent.query();\r\n            this.orderProp = 'Id';\r\n\r\n            this.removeFromTrip = function (client) {\r\n                var index = $scope.$parent.$ctrl.trip.tripClients.indexOf(client);\r\n                $scope.$parent.$ctrl.trip.tripClients.splice(index, 1);\r\n            }\r\n\r\n            this.addToTrip = function (client) {\r\n                if ($scope.$parent.$ctrl.trip.tripClients.indexOf(client) === -1) {\r\n                    $scope.$parent.$ctrl.trip.tripClients.push(client);\r\n                }\r\n                else {\r\n                    console.log(\"This item already exists\");\r\n                }\r\n            }\r\n\r\n            this.clientFilterAction = function () {\r\n                if (that.clientFilter.length > 1) {\r\n                    ClientTrip.query({ filter: that.clientFilter },\r\n                        function(clientTrips) {\r\n                            that.clients = clientTrips;\r\n                        });\r\n                } else {\r\n                    that.clients = [];\r\n                }\r\n            };\r\n\r\n            this.filterThrottled = _.debounce(that.clientFilterAction, 500);\r\n\r\n            $scope.$watch('$ctrl.clientFilter', that.filterThrottled);\r\n\r\n            $scope.$on('clearClientTripsEvent', function (event, params) {\r\n                that.clientFilter = '';\r\n                that.clients = [];\r\n            });\r\n        }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `clientDetail` module\r\nangular.module('clientDetail', [\r\n  'ngRoute',\r\n  'core.client'\r\n]);\r\n","'use strict';\r\n\r\n// Register `clientDetail` component, along with its associated controller and template\r\nangular.\r\n  module('clientDetail').\r\n  component('clientDetail', {\r\n    templateUrl: 'Content/app/client-detail/client-detail.template.html',\r\n    controller: ['$routeParams', 'Client',\r\n      function ClientDetailController($routeParams, Client) {\r\n        var self = this;\r\n        self.client = Client.get({clientId: $routeParams.clientId}, function(client) {\r\n          //self.setImage(client.images[0]);\r\n        });\r\n\r\n        //self.setImage = function setImage(imageUrl) {\r\n        //  self.mainImageUrl = imageUrl;\r\n        //};\r\n      }\r\n    ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('tripList', ['core.trip', 'core.bus', 'ngMap', 'googleMaps']);","'use strict';\r\n\r\nangular.\r\nmodule('tripList').\r\ncomponent('tripList', {\r\n    templateUrl: 'Content/app/trip-list/trip-list.template.html',\r\n    controller: ['Trip', 'Bus', 'City', 'Driver', '$uibModal', '$scope', 'PdfMaker', '$filter', 'googleMapsService',\r\n    function (Trip, Bus, City, Driver, $uibModal, $scope, PdfMaker, $filter, googleMapsService) {\r\n        var that = this;\r\n\r\n        this.showAddTripForm = false;\r\n        this.isEditMode = false;\r\n        this.dateNow = new Date();\r\n        this.mapCenterLatLng = '49.361625, 32.139730';\r\n\r\n        this.trip = {\r\n            tripClients: [],\r\n            compulsoryExpenses: [],\r\n            unexpectedExpenses: [],\r\n            startDate: that.dateNow,\r\n            startTime: that.dateNow,\r\n            endDate: that.dateNow,\r\n            endTime: that.dateNow\r\n        };\r\n\r\n        this.trips = Trip.query();\r\n        this.buses = Bus.query();\r\n        this.cities = City.query();\r\n        this.drivers = Driver.query();\r\n        this.dateFormat = \"dd-MMM-yyyy\";\r\n        this.dateOptions = {\r\n            minDate: new Date(),\r\n            showWeeks: false,\r\n            startingDay: 1\r\n        };\r\n\r\n        this.timeOptions = {\r\n            minuteStep: 5\r\n        }\r\n\r\n        this.startDatePopup = {\r\n            opened: false\r\n        };\r\n\r\n        this.startDateOpen = function () {\r\n            that.startDatePopup.opened = true;\r\n        };\r\n\r\n        this.endDatePopup = {\r\n            opened: false\r\n        };\r\n\r\n        this.endDateOpen = function () {\r\n            that.endDatePopup.opened = true;\r\n        };\r\n\r\n        this.showAddForm = function () {\r\n            that.showAddTripForm = !that.showAddTripForm;\r\n        }\r\n\r\n        this.add = function () {\r\n            that.submitted = true;\r\n\r\n            if (that.trip.tripClients.length === 0) {\r\n                $scope.form.$setValidity('isAnyClient', false);\r\n                return;\r\n            }\r\n            if ($scope.form.$invalid) {\r\n                return;\r\n            }\r\n\r\n            if (that.isEditMode) {\r\n                that.update();\r\n            } else {\r\n                that.create();\r\n            }\r\n        };\r\n\r\n        this.create = function () {\r\n            that.joinTripDateAndTime();\r\n            Trip.add(that.trip, function (createdTrip) {\r\n                that.trips.push(createdTrip);\r\n                that.showAddTripForm = false;\r\n                that.clearTripModel();\r\n            });\r\n        };\r\n\r\n        this.update = function () {\r\n            that.joinTripDateAndTime();\r\n            Trip.update(\r\n                { id: that.trip.id },\r\n                that.trip,\r\n                function (updatedTrip) {\r\n                    that.showAddTripForm = false;\r\n                    that.clearTripModel();\r\n                });\r\n        };\r\n\r\n        this.clearTripModel = function () {\r\n            that.dateNow = new Date();\r\n            that.isEditMode = false;\r\n            that.trip = {\r\n                tripClients: [],\r\n                startDate: that.dateNow,\r\n                startTime: that.dateNow,\r\n                endDate: that.dateNow,\r\n                endTime: that.dateNow\r\n            };\r\n            that.submitted = false;\r\n            $scope.form.$setPristine();\r\n            $scope.form.$setUntouched();\r\n            $scope.$broadcast('clearClientTripsEvent');\r\n        };\r\n\r\n        this.joinTripDateAndTime = function () {\r\n            that.trip.date = new Date(Date.UTC(\r\n                that.trip.startDate.getFullYear(),\r\n                that.trip.startDate.getMonth(),\r\n                that.trip.startDate.getDate(),\r\n                that.trip.startTime.getHours(),\r\n                that.trip.startTime.getMinutes()));\r\n\r\n            that.trip.arrivalDate = new Date(Date.UTC(\r\n                that.trip.endDate.getFullYear(),\r\n                that.trip.endDate.getMonth(),\r\n                that.trip.endDate.getDate(),\r\n                that.trip.endTime.getHours(),\r\n                that.trip.endTime.getMinutes()));\r\n        };\r\n\r\n        this.openDriversList = function () {\r\n            var modalOptions = {\r\n                animation: true,\r\n                backdrop: 'static',\r\n                size: 'lg',\r\n                component: 'driverList',\r\n                resolve: {\r\n                    drivers: function () {\r\n                        return that.drivers;\r\n                    }\r\n                }\r\n            };\r\n\r\n            var modalInstance = $uibModal.open(modalOptions);\r\n\r\n            modalInstance.result.then(function (drivers) {\r\n                that.drivers = drivers;\r\n            });\r\n        };\r\n\r\n        this.createPDF = function (trip) {\r\n            var tableBody = [\r\n                [\r\n                    { text: 'Имя Фамилия', style: 'tableHeader' },\r\n                    { text: 'Телефон', style: 'tableHeader' },\r\n                    { text: 'Куда', style: 'tableHeader' },\r\n                    { text: 'Откуда', style: 'tableHeader' },\r\n                    { text: 'Стоимость', style: 'tableHeader' },\r\n                    { text: 'Не выходит', style: 'tableHeader' },\r\n                    { text: 'Статус', style: 'tableHeader' }\r\n                ]\r\n            ];\r\n\r\n            for (var i = 0; i < trip.tripClients.length; i++) {\r\n                tableBody.push([\r\n                    trip.tripClients[i].Name,\r\n                    trip.tripClients[i].Phone,\r\n                    trip.tripClients[i].To ? trip.tripClients[i].To : '',\r\n                    trip.tripClients[i].From ? trip.tripClients[i].From : '',\r\n                    trip.tripClients[i].Price.toString(),\r\n                    trip.tripClients[i].IsStayInBus ? 'Да' : '',\r\n                    (trip.tripClients[i].HasMinorChild ? 'С ребенком; ' : '') +\r\n                    (trip.tripClients[i].HasDisability ? 'Инвалид' : '')\r\n                ]);\r\n            }\r\n\r\n            //pdfMake doesnt work with initializing via variable\r\n            var compolsuryExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n            var unexpectedExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n\r\n            trip.compulsoryExpenses.map((expense) =>\r\n                compolsuryExpenseTable.push([\r\n                     expense.Cost.toString(),\r\n                     expense.Comment\r\n                ]));\r\n\r\n            trip.unexpectedExpenses.map((expense) =>\r\n                unexpectedExpenseTable.push([\r\n                     expense.Cost.toString(),\r\n                     expense.Comment\r\n                ]));\r\n\r\n            var bus = trip.bus != null ? trip.bus.FriendlyName + ' ' + trip.bus.RegistrationNumber + ', ' : '';\r\n            var driver = trip.driver != null ? 'Водитель: ' + trip.driver.FullName : '';\r\n            var fileName = trip.cityFrom.Name.concat(' - ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy/MM/dd\"), '.pdf');\r\n\r\n            googleMapsService.getGoogleMapsImage(trip.cityFrom.Name, trip.cityTo.Name,\r\n               function(base64Img) {\r\n                   var options = {\r\n                       fileName: fileName,\r\n                       docDefinition: {\r\n                           pageOrientation: 'portrait',\r\n                           fontSize: 12,\r\n                           content: [\r\n                               {\r\n                                   text: trip.cityFrom.Name.concat(' --> ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy-MM-dd HH:mm\"))\r\n                               },\r\n                               {\r\n                                   text: bus + driver\r\n                               },\r\n                               {\r\n                                   text: ' '\r\n                               },\r\n                               {\r\n                                   columns: [\r\n                                   {\r\n                                       width: '50%',\r\n                                       text: 'Обязательные расходы:'\r\n                                   },\r\n                                   {\r\n                                       width: '50%',\r\n                                       text: 'Дополнительные расходы:'\r\n                                   }]\r\n                               },\r\n                               {\r\n                                   columns: [\r\n                                   {\r\n                                       width: '50%',\r\n                                       table: {\r\n                                           headerRows: 1,\r\n                                           body: compolsuryExpenseTable\r\n                                       }\r\n                                   },\r\n                                   {\r\n                                       width: '50%',\r\n                                       table: {\r\n                                           headerRows: 1,\r\n                                           body: unexpectedExpenseTable\r\n                                       }\r\n                                   }]\r\n                               },\r\n                               {\r\n                                   text: ' '\r\n                               },\r\n                               {\r\n                                   text: 'Касса водителя: ' + that.getDriverCashbox(trip)\r\n                               },\r\n                               {\r\n                                   text: ' '\r\n                               },\r\n                               {\r\n                                   text: 'Клиенты:'\r\n                               },\r\n                               {\r\n                                   table: {\r\n                                       headerRows: 1,\r\n                                       body: tableBody\r\n                                   }\r\n                               },\r\n                               {\r\n                                   text: ' '\r\n                               },\r\n                               {\r\n                                   image: base64Img\r\n                               }\r\n                           ]\r\n                       }\r\n                   }\r\n\r\n                   PdfMaker.createAndDownload(options);\r\n               });\r\n        }\r\n\r\n        this.editTrip = function (trip) {\r\n            var startDate = new Date(trip.date);\r\n            var endDate = new Date(trip.arrivalDate);\r\n\r\n            that.isEditMode = true;\r\n            that.trip = trip;\r\n            that.trip.startDate = startDate;\r\n            that.trip.startTime = startDate;\r\n            that.trip.endDate = endDate;\r\n            that.trip.endTime = endDate;\r\n            that.showAddTripForm = true;\r\n        };\r\n\r\n        this.disableEditMode = function () {\r\n            that.showAddTripForm = false;\r\n            that.isEditMode = false;\r\n            that.clearTripModel();\r\n        }\r\n\r\n        this.delete = function (trip) {\r\n            var msg = 'Вы уверены, что хотите удалить маршрут ' + trip.cityFrom.Name + '---->' + trip.cityTo.Name + ', ' + trip.date + '?';\r\n            if (confirm(msg)) {\r\n                Trip.remove({ id: trip.id },\r\n                    function onSuccess(deletedTrip) {\r\n                        var index = that.trips.map(function (e) { return e.id }).indexOf(deletedTrip.id);\r\n                        if (index > -1) {\r\n                            that.trips.splice(index, 1);\r\n                        }\r\n                    },\r\n                    function onError(error) {\r\n                        var errorMessage = 'Маршрут не удален. Ошибка удаления: ' + error.data.Message;\r\n                        alert(errorMessage);\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.addCompolsoryExpense = function (cost, comment) {\r\n            if (cost && comment) {\r\n                that.trip.compulsoryExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                that.compulsoryNewCost = 0;\r\n                that.compulsoryNewComment = '';\r\n            }\r\n        }\r\n\r\n        this.addUnexpectedExpens = function (cost, comment) {\r\n            if (cost && comment) {\r\n                that.trip.unexpectedExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                that.unexpectedNewCost = 0;\r\n                that.unexpectedNewComment = '';\r\n            }\r\n        }\r\n\r\n        this.getDriverCashbox = function (trip) {\r\n            var expenseSumFun = (acc, expense) => acc + expense.Cost;\r\n\r\n            var compulsoryExpensesSum = trip.compulsoryExpenses.reduce(expenseSumFun, 0);\r\n            var unexpectedExpensesSum = trip.unexpectedExpenses.reduce(expenseSumFun, 0);\r\n\r\n            var incomes = trip.tripClients.reduce((acc, client) => acc + client.Price, 0);\r\n\r\n            return incomes - (compulsoryExpensesSum + unexpectedExpensesSum);\r\n        }\r\n\r\n        $scope.$watchCollection('$ctrl.trip.tripClients', function (newValue, previousValue) {\r\n            if (newValue && newValue.length > 0) {\r\n                $scope.form.$setValidity('isAnyClient', true);\r\n            }\r\n        });\r\n    }]\r\n});","'use strict';\r\n\r\n// Define the `driverList` module\r\nangular.module('driverList', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverList')\r\n  .component('driverList',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-list.template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [\r\n        'Driver', '$scope', '$uibModal', function (Driver, $scope, $uibModal) {\r\n            var that = this;\r\n            that.drivers = [];\r\n            that.addDriverBlockVisible = false;\r\n            that.addNewClass = \"\";\r\n\r\n            that.$onInit = function () {\r\n                that.drivers = that.resolve.drivers;\r\n            };\r\n\r\n            that.closeModal = function () {\r\n                that.close({ $value: that.drivers });\r\n            };\r\n\r\n            that.editDriver = function (driver) {\r\n                $scope.$broadcast('editDriverEvent', { driver: driver });\r\n            };\r\n\r\n            that.showAddDriverBlock = function () {\r\n                that.addDriverBlockVisible = !that.addDriverBlockVisible;\r\n                that.addNewClass = that.addDriverBlockVisible ? \"not-active\" : \"\";\r\n            };\r\n\r\n            that.deleteDriver = function (id) {\r\n                $scope.$broadcast('deleteDriverEvent', { id: id });\r\n            };\r\n        }\r\n      ]\r\n  });","'use strict';\r\n\r\n// Define the `driverCrud` module\r\nangular.module('driverCrud', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverCrud')\r\n  .component('driverCrud',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-crud/driver-crud.template.html',\r\n    controller: [\r\n      'Driver', '$scope', function (Driver, $scope) {\r\n        var that = this;\r\n        this.maxPhotoWidth = 150;\r\n        this.maxPhotoHeight = 150;\r\n        this.driver = {};\r\n\r\n        this.cancel = function () {\r\n          $scope.$parent.$ctrl.showAddDriverBlock();\r\n        };\r\n\r\n        this.save = function (driver) {\r\n          that.driver = driver;\r\n          if (driver.Id > 0) {\r\n            Driver.update({ id: driver.Id },\r\n              driver,\r\n              function (editedDriver) {\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          } else {\r\n            Driver.add(driver,\r\n              function onSuccess(createdDriver) {\r\n                $scope.$parent.$ctrl.drivers.push(createdDriver);\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          }\r\n        };\r\n\r\n        this.deleteDriver = function (id) {\r\n          Driver.delete({ id: id },\r\n            function onSuccess(deletedDriver) {\r\n              var index = $scope.$parent.$ctrl.drivers.map(function(e) { return e.Id }).indexOf(deletedDriver.Id);\r\n              if (index > -1) {\r\n                $scope.$parent.$ctrl.drivers.splice(index, 1);\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        $scope.$on('deleteDriverEvent',\r\n          function(event, params) {\r\n            that.deleteDriver(params.id);\r\n          }\r\n        );\r\n\r\n        $scope.$on('editDriverEvent',\r\n          function (event, params) {\r\n            that.driver = params.driver;\r\n            $(\"#photoPreview\").attr(\"src\", 'data:image/png;base64,' + that.driver.Photo);\r\n            $scope.$parent.$ctrl.showAddDriverBlock();\r\n          }\r\n        );\r\n\r\n        this.resizeBase64Img = function (base64Img, maxWidth, maxHeight) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var deferred = $.Deferred();\r\n\r\n            $(\"<img/>\").attr(\"src\", base64Img).load( function () {\r\n                var width = this.width;\r\n                var height = this.height;\r\n\r\n                if (width > height) {\r\n                    if (width > maxWidth) {\r\n                        height *= maxWidth / width;\r\n                        width = maxWidth;\r\n                    }\r\n                } else {\r\n                    if (height > maxHeight) {\r\n                        width *= maxHeight / height;\r\n                        height = maxHeight;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.drawImage(this, 0, 0, width, height);\r\n                deferred.resolve($(\"<img/>\").attr(\"src\", canvas.toDataURL()));\r\n            });\r\n            return deferred.promise();\r\n        }\r\n\r\n        $(\"#driverPhoto\").change(function () {\r\n            if (this.files && this.files[0]) {\r\n                var fr = new FileReader();\r\n                fr.onload = function (e) {\r\n                    that.resizeBase64Img(e.target.result, that.maxPhotoWidth, that.maxPhotoHeight)\r\n                        .then(function (newImg) {\r\n                            that.driver.Photo = newImg[0].src.replace('data:image/png;base64,', '');\r\n                            console.log(newImg[0].src);\r\n                            $(\"#photoPreview\").attr(\"src\", newImg[0].src);\r\n                        }\r\n                    );\r\n                };\r\n                fr.readAsDataURL(this.files[0]);\r\n            }\r\n        });\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalBus` module\r\nangular.module('modalBus', ['core.bus']);","'use strict';\r\n\r\n// Register `modalBus` component, along with its associated controller and template\r\nangular.\r\n  module('modalBus').\r\n  component('modalBus', {\r\n    templateUrl: 'Content/app/bus-list/modal/modalBus-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.bus = that.resolve.bus;\r\n        if (that.bus && that.bus.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.bus });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `busList` module\r\nangular.module('busList', ['core.bus']);\r\n","'use strict';\r\n\r\n// Register `busList` component, along with its associated controller and template\r\nangular.module('busList')\r\n  .component('busList',\r\n  {\r\n    templateUrl: 'Content/app/bus-list/bus-list.template.html',\r\n    controller: [\r\n      'Bus', '$scope', '$uibModal',\r\n      function (Bus, $scope, $uibModal) {\r\n        var that = this;\r\n        that.buses = Bus.query();\r\n        that.bus = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalBus',\r\n          resolve: {\r\n            bus: function() {\r\n              return that.bus;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addBus = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.add(bus,\r\n              function onSuccess(createdBus) {\r\n                that.buses.push(createdBus);\r\n                that.clearBus();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editBus = function(bus) {\r\n          that.bus = bus;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.update({ id: bus.Id },\r\n              bus,\r\n              that.clearBus);\r\n          },\r\n          that.clearBus);\r\n        };\r\n\r\n        that.deleteBus = function(id) {\r\n          Bus.delete({ id: id },\r\n            function onSuccess(deletedBus) {\r\n              var index = that.buses.map(function (e) { return e.Id }).indexOf(deletedBus.Id);\r\n              if (index > -1) {\r\n                that.buses.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clearBus = function () {\r\n            that.bus = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `agentList` module\r\nangular.module('agentList', ['core.agent']);\r\n","'use strict';\r\n\r\n// Register `agentList` component, along with its associated controller and template\r\nangular.module('agentList')\r\n  .component('agentList',\r\n  {\r\n    templateUrl: 'Content/app/agent-list/agent-list.template.html',\r\n    controller: [\r\n      'Agent', '$scope', '$uibModal',\r\n      function (Agent, $scope, $uibModal) {\r\n        var that = this;\r\n\r\n        that.agents = Agent.query();\r\n        that.agent = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalAgent',\r\n          resolve: {\r\n            agent: function() {\r\n              return that.agent;\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n        that.addAgent = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.add(agent,\r\n              function onSuccess(createdAgent) {\r\n                that.agents.push(createdAgent);\r\n                  that.clearAgent();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editAgent = function(agent) {\r\n          that.agent = agent;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.update({ id: agent.Id },\r\n              agent,\r\n              that.clearAgent);\r\n          },\r\n          that.clearAgent);\r\n        };\r\n\r\n        that.deleteAgent = function(id) {\r\n          Agent.delete({ id: id },\r\n            function onSuccess(deletedAgent) {\r\n              var index = that.agents.map(function (e) { return e.Id }).indexOf(deletedAgent.Id);\r\n              if (index > -1) {\r\n                that.agents.splice(index, 1);\r\n              }\r\n            },\r\n            function onError(error) {\r\n                var errorMessage = error.data.Message;\r\n                alert(errorMessage);\r\n            });\r\n        };\r\n\r\n        that.clearAgent = function () {\r\n            that.agent = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalAgent` module\r\nangular.module('modalAgent', ['core.agent']);","'use strict';\r\n\r\n// Register `modalAgent` component, along with its associated controller and template\r\nangular.\r\n  module('modalAgent').\r\n  component('modalAgent', {\r\n    templateUrl: 'Content/app/agent-list/modal/modalAgent-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.agent = that.resolve.agent;\r\n        if (that.agent && that.agent.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.agent });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `reports` module\r\nangular.module('reports', []);\r\n","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('agentReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/agent-reports.template.html',\r\n        controller: [\r\n            'Agent', 'AgentReport', '$filter', 'PdfMaker',\r\n            function (Agent, AgentReport, $filter, pdfMaker) {\r\n                var that = this;\r\n\r\n                that.agents = Agent.query();\r\n                that.agent = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                that.dateFrom = new Date();\r\n                that.dateTo = new Date();\r\n                that.dateOptions = {\r\n                    showWeeks: false,\r\n                    startingDay: 0,\r\n                    maxDate: new Date()\r\n                }\r\n                that.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function (reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по агенту ' + that.agent.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].AgentCompensation;\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n\r\n                    var options = {\r\n                        id: that.agent.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    AgentReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Водитель', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Компенсация за рейс', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.DriverInfo,\r\n                        report.ClientsCount.toString(),\r\n                        report.AgentCompensation.toString()]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.agent.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Агент: ' + that.agent.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('driverReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/driver-reports.template.html',\r\n        controller: [\r\n            'Driver', 'DriverReport', '$filter', 'PdfMaker',\r\n            function (Driver, DriverReport, $filter, pdfMaker) {\r\n            \tvar that = this;\r\n\t\t\r\n            \tthat.drivers = Driver.query();\r\n            \tthat.driver = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n            \tthat.dateFrom = new Date();\r\n            \tthat.dateTo = new Date();\r\n            \tthat.dateOptions = {\r\n            \t\tshowWeeks: false,\r\n            \t\tstartingDay: 0,\r\n            \t\tmaxDate: new Date()\r\n            \t}\r\n            \tthat.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function(reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по водителю ' + that.driver.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].CompulsoryExpenses;\r\n                        if (reports[i].UnexpectedExpenses != null) {\r\n                            that.totalPrice += reports[i].UnexpectedExpenses;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n                    that.reportIsShowing = false;\r\n\r\n                    var options = {\r\n                        id: that.driver.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    DriverReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Постоянные расходы', style: 'tableHeader' },\r\n                        { text: 'Непредвиденные расходы', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.ClientsCount ? report.ClientsCount.toString() : '',\r\n                        report.CompulsoryExpenses ? report.CompulsoryExpenses.toString() : '',\r\n                        report.UnexpectedExpenses ? report.UnexpectedExpenses.toString() : '']));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.driver.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Водитель: ' + that.driver.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Define the `clientList` module\r\nangular.module('clientList', ['core.client']);\r\n","'use strict';\r\n\r\n// Register `clientList` component, along with its associated controller and template\r\nangular.module('clientList')\r\n  .component('clientList',\r\n  {\r\n     templateUrl: 'Content/app/client-list/client-list.template.html',\r\n     controller: [\r\n      'Client', 'Trip', '$scope', '$uibModal',\r\n      function (Client,Trip, $scope, $uibModal) {\r\n        var that = this;\r\n        that.clients = Client.query();\r\n        that.client = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalClient',\r\n          resolve: {\r\n            client: function() {\r\n              return that.client;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addClient = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.add(client,\r\n              function onSuccess(createdClient) {\r\n                that.clients.push(createdClient);\r\n                that.clearClient();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editClient = function(client) {\r\n          that.client = client;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.update({ id: client.Id },\r\n              client,\r\n              that.clearClient);\r\n          }, that.clearClient);\r\n        };\r\n\r\n        that.deleteClient = function(id) {\r\n          Client.delete({ id: id },\r\n            function onSuccess(deletedClient) {\r\n              var index = that.clients.map(function (e) { return e.Id }).indexOf(deletedClient.Id);\r\n              if (index > -1) {\r\n                that.clients.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clientInfo = function(client) {\r\n            Trip.query({ clientId: client.Id }, function (clientTrips) {\r\n                var options = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    component: 'modalClientTrips',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        info: function () {\r\n                            return {\r\n                                client: client,\r\n                                trips: clientTrips\r\n                            };\r\n                        }\r\n                    }\r\n                };\r\n                $uibModal.open(options);\r\n            });\r\n        };\r\n\r\n        that.clearClient = function() {\r\n            that.client = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalClient` module\r\nangular.module('modalClient', ['core.client']);","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClient', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClient-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.client = that.resolve.client;\r\n        if (that.client && that.client.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.client });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClientTrips', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClientTrips-template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [ '$filter',\r\n          function ($filter) {\r\n          var that = this;\r\n\r\n          that.trips = {};\r\n          that.client = {};\r\n          that.headerTitle = \"\";\r\n\r\n          that.$onInit = function () {\r\n              that.trips = that.resolve.info.trips;\r\n              that.client = that.resolve.info.client;\r\n              that.headerTitle = \"Информация о поездках клиента \" + that.client.Name;\r\n          };\r\n\r\n          that.getClienPrice = function(clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].Price;\r\n          };\r\n\r\n          that.getClienAdditionalExpenses = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].AdditionalExpenses;\r\n          };\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\nangular.module('citiesList', ['core.city', 'google.places']);","'use strict';\r\n\r\nangular.\r\n  module('citiesList').\r\n  component('citiesList', {\r\n      templateUrl: 'Content/app/cities-list/cities-list.template.html',\r\n      controller: ['City', '$scope', function CitiesListController(City, $scope) {\r\n          var that = this;\r\n\r\n          this.cities = City.query();\r\n          this.showAddCityForm = false;\r\n\r\n          this.showAddForm = function () {\r\n              that.showAddCityForm = !that.showAddCityForm;\r\n          }\r\n\r\n          $scope.autocompleteOptions = {\r\n              componentRestrictions: { country: 'ukr' },\r\n              types: ['(cities)']\r\n          }\r\n\r\n          this.saveCity = function (place) {\r\n              that.showAddCityForm = false;\r\n\r\n              City.add({ name: place.name }, function onSuccess(createdBus) {\r\n                 that.cities = City.query();\r\n                 that.choosedPlace = '';\r\n              });\r\n          }\r\n\r\n          this.setCityFromAutocomplete = function(err, place){\r\n              that.city.name = place;\r\n          }\r\n      }]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `pdfMaker` module\r\nangular.module('pdfMaker', []);","'use strict';\r\n\r\n// Register `pdfMaker` component, along with its associated controller and template\r\nangular.\r\n    module('pdfMaker').\r\n    factory('PdfMaker', function() {\r\n        return {\r\n            createAndDownload: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).download(options.fileName ? options.fileName : 'file.pdf');\r\n            },\r\n            createAndOpen: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).open();\r\n            }\r\n        }\r\n    });","'use strict';\r\n\r\nangular.module('signUp', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('signUp').\r\n  component('signUp', {\r\n      templateUrl: 'Content/app/authentication/signup/signup.template.html',\r\n      controller: ['AuthService', '$location', function (authService, $location) {\r\n          var that = this;\r\n\r\n          this.savedSuccessfully = false;\r\n          this.message = \"\";\r\n\r\n          this.registration = {\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\"\r\n          };\r\n\r\n          this.signUp = function (formValid) {\r\n              if (formValid) {\r\n                  authService.saveRegistration(this.registration).then(function (response) {\r\n                      that.savedSuccessfully = true;\r\n                      that.message = \"User has been registered successfully, you will be redirected to login page in 2 seconds.\";\r\n\r\n                      $location.path('/login');\r\n                  },\r\n                  function (response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join('\\n');\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('signIn', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('signIn').\r\n    component('signIn',\r\n    {\r\n        templateUrl: 'Content/app/authentication/signin/signin.template.html',\r\n        controller: ['AuthService', '$location', function(authService, $location) {\r\n            var that = this;\r\n\r\n            if (authService.authData.isAuth) {\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            this.loginData={\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n            this.message=\"\";\r\n\r\n            this.login = function() {\r\n                authService.login(this.loginData).then(function(response) {\r\n                    $location.path('/trips');\r\n                },\r\n                function(err) {\r\n                    that.message=err.data.error_description;\r\n                });\r\n            };\r\n        }\r\n    ]\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('navBar', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('navBar').\r\n    component('navbar',\r\n    {\r\n        templateUrl: 'Content/app/navbar/navbar.template.html',\r\n        controller: ['AuthService', 'authConstants', function (authService, authConstants) {\r\n            var that = this;\r\n\r\n            this.ClientAccessRoles = authConstants.ClientAccessRoles;\r\n            this.BusesAccessRoles = authConstants.BussesAccessRoles;\r\n\r\n            this.updateAuthData = function () {\r\n                that.isAuth = authService.authData.isAuth;\r\n                that.currentRole = authService.authData.role;\r\n            }\r\n\r\n            authService.registerObserverCallback(that.updateAuthData);\r\n\r\n            this.isAuth = authService.authData.isAuth;\r\n            this.currentRole = authService.authData.role;\r\n\r\n            this.hasRole = function (allowedRoles) {\r\n                if (that.isAuth) {\r\n                    if (!allowedRoles) {\r\n                        return that.currentRole == 'Admin';\r\n                    }\r\n\r\n                    return allowedRoles.indexOf(that.currentRole) != -1 || that.currentRole == 'Admin';\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }]\r\n    });\r\n\r\n","angular.module('VektorApp')\r\n    .directive(\"compareTo\",\r\n        function() {\r\n            return {\r\n                require: \"ngModel\",\r\n                scope: {\r\n                    otherModelValue: \"=compareTo\"\r\n                },\r\n                link: function(scope, element, attributes, ngModel) {\r\n\r\n                    ngModel.$validators.compareTo=function(modelValue) {\r\n                        return modelValue == scope.otherModelValue;\r\n                    };\r\n\r\n                    scope.$watch(\"otherModelValue\",\r\n                        function() {\r\n                            ngModel.$validate();\r\n                        });\r\n                }\r\n            };\r\n        });","'use strict';\r\n\r\nangular.module('manageAccount', ['core.manageAccount', 'core.authentication']);","'use strict';\r\n\r\nangular.module('manageAccount').component('manageAccount', {\r\n    templateUrl: 'Content/app/manage-account/manage-account.template.html',\r\n    controller: ['ManageAccountService', 'AuthService', function (manageAccountService, authService) {\r\n        var that = this;\r\n\r\n        this.message = \"\";\r\n        this.updateSuccefull = null;\r\n        this.accountData = {};\r\n\r\n        manageAccountService.getAccountInfo().then(function (response) {\r\n            that.accountData.email = response.Email;\r\n            that.accountData.name = response.Name;\r\n        });\r\n\r\n        this.update = function (formValid) {\r\n            if (formValid) {\r\n                manageAccountService.updateAccount(this.accountData)\r\n                    .then(function () {\r\n                        that.message = \"Account has been successfully updated\";\r\n                        that.updateSuccefull = true;\r\n\r\n                        authService.UpdateAuthData(that.accountData.email, that.accounData.name);\r\n                    },\r\n                    function (response) {\r\n                        var errors = [];\r\n                        for (var key in response.data.ModelState) {\r\n                            for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                                errors.push(response.data.ModelState[key][i]);\r\n                            }\r\n                        }\r\n\r\n                        that.message = errors.join('\\n');\r\n                        that.updateSuccefull = false;\r\n                    });\r\n            }\r\n        }\r\n    }]\r\n});","angular.module('googleMaps', []);","'use strict';\r\n\r\n// Define the `googleMaps` service\r\nangular.module('googleMaps')\r\n    .factory('googleMapsService', ['$http', '$q',\r\n        function ($http, $q) {\r\n            var googleMapsFactory = {};\r\n            var directionsService = new google.maps.DirectionsService;\r\n            var googleMapsServiceBase = 'https://maps.googleapis.com/maps/api/staticmap?size=500x400&zoom=7&maptype=roadmap';\r\n\r\n            googleMapsFactory.getGoogleMapsImage = function (cityFrom, cityTo, callback) {\r\n                //getting direction json for access direction polyline\r\n                directionsService.route({\r\n                    origin: cityFrom,\r\n                    destination: cityTo,\r\n                    travelMode: google.maps.TravelMode.DRIVING\r\n                }, function (response) {\r\n                    //generate static maps url with direction polyline\r\n                    var url = googleMapsServiceBase.concat(\r\n                        '&markers=color:green|label:A|', cityFrom, '&markers=color:red|label:B|', cityTo,\r\n                        '&path=color:0x0000ff80|weight:5|enc:', response.routes[0].overview_polyline, '&key=AIzaSyBkEIsxJ1ZqsEBPUYsef_jF2ajuSkmbxJ4');\r\n\r\n                    //convert image to base64\r\n                    googleMapsFactory.convertImgToDataURL(url, callback);\r\n                });\r\n            }\r\n\r\n            googleMapsFactory.convertImgToDataURL = function (url, callback) {\r\n                var img = new Image();\r\n                img.crossOrigin = 'Anonymous';\r\n\r\n                img.onload = function () {\r\n                    var canvas = document.createElement('CANVAS');\r\n                    var ctx = canvas.getContext('2d');\r\n                    var dataURL;\r\n\r\n                    canvas.height = this.height;\r\n                    canvas.width = this.width;\r\n                    ctx.drawImage(this, 0, 0);\r\n\r\n                    dataURL = canvas.toDataURL();\r\n                    callback(dataURL);\r\n\r\n                    canvas = null;\r\n                };\r\n\r\n                img.src = url;\r\n            }\r\n\r\n            return googleMapsFactory;\r\n        }]);"]}