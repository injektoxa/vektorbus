{"version":3,"sources":["app.module.js","app.config.js","app.animations.js","core/core.module.js","core/checkmark/checkmark.filter.js","core/client/client.module.js","core/client/client.service.js","core/clientTrip/clientTrip.module.js","core/clientTrip/clientTrip.service.js","core/trip/trip.module.js","core/trip/trip.service.js","core/driver/driver.module.js","core/driver/driver.service.js","core/bus/bus.module.js","core/bus/bus.service.js","core/city/city.module.js","core/city/city.service.js","core/agent/agent.module.js","core/agent/agent.service.js","core/agentReport/agentReport.module.js","core/agentReport/agentReport.service.js","core/driverReport/driverReport.module.js","core/driverReport/driverReport.service.js","core/authentication/authentication.module.js","core/authentication/authentication.service.js","core/authentication/authInterceptor.service.js","core/manageAccount/manageAccount.module.js","core/manageAccount/manageAccount.service.js","clientTrip-list/clientTrip-list.module.js","clientTrip-list/clientTrip-list.component.js","client-detail/client-detail.module.js","client-detail/client-detail.component.js","trip-list/trip-list.module.js","trip-list/trip-list.component.js","driver-list/driver-list.module.js","driver-list/driver-list.component.js","driver-list/driver-crud/driver-crud.module.js","driver-list/driver-crud/driver-crud.component.js","bus-list/modal/modalBus.module.js","bus-list/modal/modalBus.component.js","bus-list/bus-list.module.js","bus-list/bus-list.component.js","agent-list/agent-list.module.js","agent-list/agent-list.component.js","agent-list/modal/modalAgent.module.js","agent-list/modal/modalAgent.component.js","reports/reports.module.js","reports/agent-reports.component.js","reports/driver-reports.component.js","client-list/client-list.module.js","client-list/client-list.component.js","client-list/modal/modalClient.module.js","client-list/modal/modalClient.component.js","client-list/modal/modalClientTrips.component.js","cities-list/cities-list.module.js","cities-list/cities-list.component.js","pdfMaker/pdfMaker.module.js","pdfMaker/pdfMaker.service.js","authentication/signup/signup.module.js","authentication/signup/signup.component.js","authentication/signin/signin.module.js","authentication/signin/signin.component.js","navbar/navbar.module.js","navbar/navbar.component.js","Derectives/compare-passwords.derective.js","manage-account/manage-account.module.js","manage-account/manage-account.component.js"],"names":["angular","module","constant","ClientAccessRoles","BussesAccessRoles","AllRoles","config","$locationProvider","$routeProvider","authConstants","$httpProvider","$qProvider","interceptors","push","html5Mode","errorOnUnhandledRejections","when","template","acceptedRoles","allowAnonymus","templateUrl","otherwise","run","$rootScope","$location","authService","$on","event","next","currentRole","authData","role","indexOf","isAuth","path","animation","animateIn","element","className","done","css","display","position","top","left","animate","wasCanceled","stop","animateOut","addClass","removeClass","filter","input","factory","$resource","query","method","isArray","add","update","remove","params","Id","get","service","id","dateFrom","dateTo","authDataResourceKey","localStorageService","$http","$q","authServiceFactory","observerCallbacks","name","registerObserverCallback","callback","notifyObservers","forEach","saveRegistration","registration","logOut","post","then","response","login","loginData","data","email","password","deferred","defer","headers","Content-Type","set","token","access_token","resolve","err","status","reject","promise","UpdateAuthData","previousData","newName","$injector","authInterceptorServiceFactory","request","Authorization","responseError","rejection","manageAccountFactory","updateAccount","accountData","put","getAccountInfo","component","controller","ClientTrip","$scope","City","Agent","that","this","clientFilter","clients","cities","agents","orderProp","removeFromTrip","client","index","$parent","$ctrl","trip","tripClients","splice","addToTrip","console","log","clientFilterAction","length","clientTrips","filterThrottled","_","debounce","$watch","$routeParams","Client","self","clientId","Trip","Bus","Driver","$uibModal","PdfMaker","$filter","showAddTripForm","isEditMode","dateNow","Date","compulsoryExpenses","unexpectedExpenses","startDate","startTime","endDate","endTime","trips","buses","drivers","dateFormat","dateOptions","minDate","showWeeks","startingDay","timeOptions","minuteStep","startDatePopup","opened","startDateOpen","endDatePopup","endDateOpen","showAddForm","submitted","form","$setValidity","$invalid","create","joinTripDateAndTime","createdTrip","clearTripModel","updatedTrip","$setPristine","$setUntouched","$broadcast","date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","arrivalDate","openDriversList","modalOptions","backdrop","size","modalInstance","open","result","createPDF","tableBody","text","style","i","Name","Phone","To","From","Price","toString","IsStayInBus","HasMinorChild","HasDisability","compolsuryExpenseTable","unexpectedExpenseTable","map","expense","Cost","Comment","bus","FriendlyName","RegistrationNumber","driver","FullName","fileName","cityFrom","concat","cityTo","options","docDefinition","pageOrientation","fontSize","content","columns","width","table","headerRows","body","getDriverCashbox","createAndDownload","editTrip","disableEditMode","delete","msg","confirm","deletedTrip","e","error","errorMessage","Message","alert","addCompolsoryExpense","cost","comment","compulsoryNewCost","compulsoryNewComment","addUnexpectedExpens","unexpectedNewCost","unexpectedNewComment","expenseSumFun","acc","compulsoryExpensesSum","reduce","unexpectedExpensesSum","incomes","$watchCollection","newValue","previousValue","bindings","close","dismiss","addDriverBlockVisible","addNewClass","$onInit","closeModal","$value","editDriver","showAddDriverBlock","deleteDriver","maxPhotoWidth","maxPhotoHeight","cancel","save","editedDriver","createdDriver","deletedDriver","$","attr","Photo","resizeBase64Img","base64Img","maxWidth","maxHeight","canvas","document","createElement","Deferred","load","height","context","getContext","drawImage","toDataURL","change","files","fr","FileReader","onload","target","newImg","src","replace","readAsDataURL","headerTitle","ok","addBus","createdBus","clearBus","editBus","deleteBus","deletedBus","agent","addAgent","createdAgent","clearAgent","editAgent","deleteAgent","deletedAgent","AgentReport","pdfMaker","dateTimeFormat","maxDate","reports","reportTitle","totalTitle","totalPrice","reportIsShowing","onGetReports","AgentCompensation","createReport","report","TripDate","CityFrom","CityTo","BusInfo","DriverInfo","ClientsCount","datePeriod","DriverReport","CompulsoryExpenses","UnexpectedExpenses","addClient","createdClient","clearClient","editClient","deleteClient","deletedClient","clientInfo","info","getClienPrice","found","ClientId","getClienAdditionalExpenses","AdditionalExpenses","showAddCityForm","autocompleteOptions","componentRestrictions","country","types","saveCity","place","choosedPlace","setCityFromAutocomplete","city","pdfMake","createPdf","download","createAndOpen","savedSuccessfully","message","confirmPassword","signUp","formValid","errors","key","ModelState","join","error_description","BusesAccessRoles","updateAuthData","hasRole","allowedRoles","directive","require","scope","otherModelValue","link","attributes","ngModel","$validators","compareTo","modelValue","$validate","manageAccountService","updateSuccefull","Email","accounData"],"mappings":"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","file":"../all.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('VektorApp', [\r\n  'ngAnimate',\r\n  'ngRoute',\r\n  'ui.bootstrap',\r\n  'core',\r\n  'pdfMaker',\r\n  'clientDetail',\r\n  'clientList',\r\n  'clientTripList',\r\n  'tripList',\r\n  'busList',\r\n  'modalBus',\r\n  'driverList',\r\n  'driverCrud',\r\n  'citiesList',\r\n  'agentList',\r\n  'modalAgent',\r\n  'modalClient',\r\n  'reports',\r\n  'signUp',\r\n  'signIn',\r\n  'LocalStorageModule',\r\n  'navBar',\r\n  'manageAccount'\r\n]);","'use strict';\r\n\r\nangular.\r\n    module('VektorApp')\r\n    .constant('authConstants',\r\n    {\r\n        ClientAccessRoles: ['Driver'],\r\n        BussesAccessRoles: ['Driver', 'Partner'],\r\n        AllRoles: ['User', 'Driver', 'Partner']\r\n    })\r\n    .config(['$locationProvider', '$routeProvider', 'authConstants', '$httpProvider', '$qProvider',\r\n        function config($locationProvider, $routeProvider, authConstants, $httpProvider, $qProvider) {\r\n\r\n            $httpProvider.interceptors.push('authInterceptorService');\r\n            $locationProvider.html5Mode(true);\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n\r\n            $routeProvider.\r\n                when('/clients',\r\n                {\r\n                    template: '<client-list></client-list>',\r\n                    acceptedRoles: authConstants.ClientAccessRoles\r\n                }).\r\n                when('/clients/:clientId',\r\n                {\r\n                    template: '<client-detail></client-detail>'\r\n                }).\r\n                when('/trips',\r\n                {\r\n                    template: '<trip-list></trip-list>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                when('/buses',\r\n                {\r\n                    template: '<bus-list></bus-list>',\r\n                    acceptedRoles: authConstants.BussesAccessRoles\r\n                }).\r\n                when('/cities',\r\n                {\r\n                    template: '<cities-list></cities-list>'\r\n                }).\r\n                when('/signup',\r\n                {\r\n                    template: '<sign-up></sign-up>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/login',\r\n                {\r\n                    template: '<sign-in></sign-in>',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/agents',\r\n                {\r\n                    template: '<agent-list></agent-list>'\r\n                }).\r\n                when('/agentReports',\r\n                {\r\n                    template: '<agent-reports></agent-reports>'\r\n                }).\r\n                when('/driverReports',\r\n                {\r\n                    template: '<driver-reports></driver-reports>'\r\n                }).\r\n                when('/access-forbidden',\r\n                {\r\n                    templateUrl: 'Content/app/access-forbidden.html',\r\n                    allowAnonymus: true\r\n                }).\r\n                when('/manageAccount',\r\n                {\r\n                    template: '<manage-account></manage-account>',\r\n                    acceptedRoles: authConstants.AllRoles\r\n                }).\r\n                otherwise('/trips');\r\n        }\r\n    ]).run(['$rootScope', '$location', 'AuthService',\r\n        function ($rootScope, $location, authService) {\r\n            $rootScope.$on('$routeChangeStart',\r\n                function (event, next) {\r\n                    var currentRole = authService.authData.role; \r\n                    next.acceptedRoles = next.acceptedRoles ? next.acceptedRoles : [];\r\n\r\n                    //if current user is not authenticated or his role is not accepted to view particular route\r\n                    if (next.allowAnonymus) {\r\n                        return true;\r\n                    }\r\n\r\n                    if (currentRole != \"Admin\" && next.acceptedRoles.indexOf(currentRole) == -1) {\r\n                        if (!authService.authData.isAuth) {\r\n                            $location.path('/login');\r\n                        } else {\r\n                            $location.path('/access-forbidden');\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                });\r\n            }\r\n    ]);","'use strict';\r\n\r\nangular.\r\n  module('VektorApp').\r\n  animation('.client', function clientAnimationFactory() {\r\n    return {\r\n      addClass: animateIn,\r\n      removeClass: animateOut\r\n    };\r\n\r\n    function animateIn(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: 500,\r\n        left: 0\r\n      }).animate({\r\n        top: 0\r\n      }, done);\r\n\r\n      return function animateInEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n\r\n    function animateOut(element, className, done) {\r\n      if (className !== 'selected') return;\r\n\r\n      element.css({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n      }).animate({\r\n        top: -500\r\n      }, done);\r\n\r\n      return function animateOutEnd(wasCanceled) {\r\n        if (wasCanceled) element.stop();\r\n      };\r\n    }\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core` module\r\nangular.module('core', ['core.client', 'core.trip', 'core.bus', 'core.city', 'core.manageAccount',\r\n    'core.driver', 'core.agent', 'core.agentReport', 'core.driverReport', 'core.clientTrip', 'core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('core').\r\n  filter('checkmark', function() {\r\n    return function(input) {\r\n      return input ? '\\u2713' : '\\u2718';\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// Define the `core.client` module\r\nangular.module('core.client', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.client').\r\n  factory('Client', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clients/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.clientTrip` module\r\nangular.module('core.clientTrip', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.clientTrip').\r\n  factory('ClientTrip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/clientTrips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.trip', ['ngResource']);","angular.\r\n  module('core.trip').\r\n  factory('Trip', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/trips/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            get: {\r\n                method: 'GET',\r\n                params: { Id: 'id' }\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n                method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE'\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.driver', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.driver').\r\n  factory('Driver', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/drivers/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.bus` module\r\nangular.module('core.bus', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.bus').\r\n  factory('Bus', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/buses/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.city', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.city').\r\n  service('City', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/Cities/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST',\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' },\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agent` module\r\nangular.module('core.agent', ['ngResource']);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.agent').\r\n  factory('Agent', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agents/:Id', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            add: {\r\n                method: 'POST'\r\n            },\r\n            update: {\r\n              method: 'PUT'\r\n            },\r\n            remove: {\r\n                method: 'DELETE',\r\n                params: { Id: 'id' }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.agentReport` module\r\nangular.module('core.agentReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.agentReport').\r\n  factory('AgentReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/agentReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `core.driverReport` module\r\nangular.module('core.driverReport', ['ngResource']);","'use strict';\r\n\r\nangular.\r\n  module('core.driverReport').\r\n  factory('DriverReport', ['$resource',\r\n    function ($resource) {\r\n        return $resource('/api/driverReports/', {}, {\r\n            query: {\r\n                method: 'GET',\r\n                isArray: true,\r\n                params: {\r\n                    id: '@id',\r\n                    dateFrom: '@dateFrom',\r\n                    dateTo: '@dateTo'\r\n                }\r\n            }\r\n        });\r\n    }\r\n  ]);","'use strict';\r\n\r\nangular.module('core.authentication', []);","'use strict';\r\n\r\nconst authDataResourceKey = \"authorizationData\";\r\n\r\nangular.\r\n  module('core.authentication').\r\n      factory('AuthService', ['localStorageService', '$http', '$q', function (localStorageService, $http, $q) {\r\n          var authServiceFactory = {};\r\n          var observerCallbacks = [];\r\n\r\n          var authData = localStorageService.get(authDataResourceKey);\r\n          authServiceFactory.authData = {\r\n              isAuth: authData != null,\r\n              name: authData ? authData.name : \"\",\r\n              role: authData ? authData.role : \"guest\",\r\n          };\r\n\r\n          authServiceFactory.registerObserverCallback = function (callback) {\r\n              observerCallbacks.push(callback);\r\n          };\r\n\r\n          //call this when you know that authData has been changed\r\n          var notifyObservers = function () {\r\n              angular.forEach(observerCallbacks, function (callback) {\r\n                  callback();\r\n              });\r\n          }\r\n\r\n          authServiceFactory.saveRegistration = function (registration) {\r\n              authServiceFactory.logOut();\r\n\r\n              return $http.post('/api/Account/Register', registration).then(function (response) {\r\n                  return response;\r\n              });\r\n          };\r\n\r\n          authServiceFactory.logOut = function () {\r\n              localStorageService.remove(authDataResourceKey);\r\n\r\n              authServiceFactory.authData.isAuth = false;\r\n              authServiceFactory.authData.role = \"\";\r\n              authServiceFactory.authData.name = \"\";\r\n\r\n              notifyObservers();\r\n          };\r\n\r\n          authServiceFactory.login = function (loginData) {\r\n              var data = \"grant_type=password&username=\" + loginData.email + \"&password=\" + loginData.password;\r\n\r\n              var deferred = $q.defer();\r\n\r\n              $http.post('/api/token', data, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                   .then(function (response) {\r\n                       localStorageService.set(authDataResourceKey, { token: response.data.access_token, name: response.data.name, role: response.data.role });\r\n\r\n                       authServiceFactory.authData.isAuth = true;\r\n                       authServiceFactory.authData.name = response.data.name;\r\n                       authServiceFactory.authData.role = response.data.role;\r\n\r\n                       notifyObservers();\r\n\r\n                       deferred.resolve(response);\r\n                   },\r\n                   function (err, status) {\r\n                       authServiceFactory.logOut();\r\n                       deferred.reject(err);\r\n                   });\r\n\r\n              return deferred.promise;\r\n          };\r\n\r\n          authServiceFactory.UpdateAuthData = function (email, name) {\r\n              var previousData = localStorageService.get(authDataResourceKey);\r\n\r\n              var newName = name ? name : previousData.name;\r\n\r\n              localStorageService.set(authDataResourceKey,\r\n              {\r\n                  token: previousData.token,\r\n                  name: newName\r\n              });\r\n\r\n              authServiceFactory.authData.name = newName;\r\n              notifyObservers();\r\n          }\r\n\r\n          return authServiceFactory;\r\n      }\r\n    ]);","'use strict';\r\nangular.module('core.authentication')\r\n    .factory('authInterceptorService', ['$q', '$injector', '$location', 'localStorageService', function ($q, $injector, $location, localStorageService) {\r\n\r\n        var authInterceptorServiceFactory = {};\r\n\r\n        authInterceptorServiceFactory.request = function (config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authData = localStorageService.get('authorizationData');\r\n\r\n            if (authData) {\r\n                config.headers.Authorization = 'Bearer ' + authData.token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        authInterceptorServiceFactory.responseError = function (rejection) {\r\n            if (rejection.status === 401) {\r\n                var authService = $injector.get('authService');\r\n\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            return $q.reject(rejection);\r\n        }\r\n\r\n        return authInterceptorServiceFactory;\r\n    }]);","'use strict';\r\n\r\nangular.module('core.manageAccount', []);\r\n","'use strict';\r\n\r\nangular.\r\n  module('core.manageAccount').\r\n  factory('ManageAccountService', ['$http',\r\n    function ($http) {\r\n        var manageAccountFactory = {};\r\n\r\n        manageAccountFactory.updateAccount = function (accountData) {\r\n            return $http.put('/api/Account/', accountData).then(function(response) {\r\n                return response;\r\n            });\r\n        }\r\n\r\n        manageAccountFactory.getAccountInfo = function () {\r\n            return $http.get('/api/Account/').then(function(response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        return manageAccountFactory;\r\n    }\r\n  ]);","'use strict';\r\n\r\n// Define the `clientTripList` module\r\nangular.module('clientTripList', ['core.clientTrip']);\r\n","'use strict';\r\n\r\n// Register `clientTripList` component, along with its associated controller and template\r\nangular.\r\n  module('clientTripList').\r\n  component('clientTripList', {\r\n      templateUrl: 'Content/app/clientTrip-list/clientTrip-list.template.html',\r\n      controller: ['ClientTrip', '$scope', 'City', 'Agent',\r\n        function (ClientTrip, $scope, City, Agent) {\r\n            var that = this;\r\n\r\n            this.clientFilter = '';\r\n            this.clients = [];\r\n            this.cities = City.query();\r\n            this.agents = Agent.query();\r\n            this.orderProp = 'Id';\r\n\r\n            this.removeFromTrip = function (client) {\r\n                var index = $scope.$parent.$ctrl.trip.tripClients.indexOf(client);\r\n                $scope.$parent.$ctrl.trip.tripClients.splice(index, 1);\r\n            }\r\n\r\n            this.addToTrip = function (client) {\r\n                if ($scope.$parent.$ctrl.trip.tripClients.indexOf(client) === -1) {\r\n                    $scope.$parent.$ctrl.trip.tripClients.push(client);\r\n                }\r\n                else {\r\n                    console.log(\"This item already exists\");\r\n                }\r\n            }\r\n\r\n            this.clientFilterAction = function () {\r\n                if (that.clientFilter.length > 1) {\r\n                    ClientTrip.query({ filter: that.clientFilter },\r\n                        function(clientTrips) {\r\n                            that.clients = clientTrips;\r\n                        });\r\n                } else {\r\n                    that.clients = [];\r\n                }\r\n            };\r\n\r\n            this.filterThrottled = _.debounce(that.clientFilterAction, 500);\r\n\r\n            $scope.$watch('$ctrl.clientFilter', that.filterThrottled);\r\n\r\n            $scope.$on('clearClientTripsEvent', function (event, params) {\r\n                that.clientFilter = '';\r\n                that.clients = [];\r\n            });\r\n        }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `clientDetail` module\r\nangular.module('clientDetail', [\r\n  'ngRoute',\r\n  'core.client'\r\n]);\r\n","'use strict';\r\n\r\n// Register `clientDetail` component, along with its associated controller and template\r\nangular.\r\n  module('clientDetail').\r\n  component('clientDetail', {\r\n    templateUrl: 'Content/app/client-detail/client-detail.template.html',\r\n    controller: ['$routeParams', 'Client',\r\n      function ClientDetailController($routeParams, Client) {\r\n        var self = this;\r\n        self.client = Client.get({clientId: $routeParams.clientId}, function(client) {\r\n          //self.setImage(client.images[0]);\r\n        });\r\n\r\n        //self.setImage = function setImage(imageUrl) {\r\n        //  self.mainImageUrl = imageUrl;\r\n        //};\r\n      }\r\n    ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('tripList', ['core.trip', 'core.bus', 'ngMap']);","'use strict';\r\n\r\nangular.\r\nmodule('tripList').\r\ncomponent('tripList', {\r\n    templateUrl: 'Content/app/trip-list/trip-list.template.html',\r\n    controller: ['Trip', 'Bus', 'City', 'Driver', '$uibModal', '$scope', 'PdfMaker', '$filter',\r\n    function (Trip, Bus, City, Driver, $uibModal, $scope, PdfMaker, $filter) {\r\n        var that = this;\r\n\r\n        this.showAddTripForm = false;\r\n        this.isEditMode = false;\r\n        this.dateNow = new Date();\r\n\r\n        this.trip = {\r\n            tripClients: [],\r\n            compulsoryExpenses: [],\r\n            unexpectedExpenses: [],\r\n            startDate: that.dateNow,\r\n            startTime: that.dateNow,\r\n            endDate: that.dateNow,\r\n            endTime: that.dateNow\r\n        };\r\n\r\n        this.trips = Trip.query();\r\n        this.buses = Bus.query();\r\n        this.cities = City.query();\r\n        this.drivers = Driver.query();\r\n        this.dateFormat = \"dd-MMM-yyyy\";\r\n        this.dateOptions = {\r\n            minDate: new Date(),\r\n            showWeeks: false,\r\n            startingDay: 1\r\n        };\r\n\r\n        this.timeOptions = {\r\n            minuteStep: 5\r\n        }\r\n\r\n        this.startDatePopup = {\r\n            opened: false\r\n        };\r\n\r\n        this.startDateOpen = function () {\r\n            that.startDatePopup.opened = true;\r\n        };\r\n\r\n        this.endDatePopup = {\r\n            opened: false\r\n        };\r\n\r\n        this.endDateOpen = function () {\r\n            that.endDatePopup.opened = true;\r\n        };\r\n\r\n        this.showAddForm = function () {\r\n            that.showAddTripForm = !that.showAddTripForm;\r\n        }\r\n\r\n        this.add = function () {\r\n            that.submitted = true;\r\n\r\n            if (that.trip.tripClients.length === 0) {\r\n                $scope.form.$setValidity('isAnyClient', false);\r\n                return;\r\n            }\r\n            if ($scope.form.$invalid) {\r\n                return;\r\n            }\r\n\r\n            if (that.isEditMode) {\r\n                that.update();\r\n            } else {\r\n                that.create();\r\n            }\r\n        };\r\n\r\n        this.create = function () {\r\n            that.joinTripDateAndTime();\r\n            Trip.add(that.trip, function (createdTrip) {\r\n                that.trips.push(createdTrip);\r\n                that.showAddTripForm = false;\r\n                that.clearTripModel();\r\n            });\r\n        };\r\n\r\n        this.update = function () {\r\n            that.joinTripDateAndTime();\r\n            Trip.update(\r\n                { id: that.trip.id },\r\n                that.trip,\r\n                function (updatedTrip) {\r\n                    that.showAddTripForm = false;\r\n                    that.clearTripModel();\r\n                });\r\n        };\r\n\r\n        this.clearTripModel = function () {\r\n            that.dateNow = new Date();\r\n            that.isEditMode = false;\r\n            that.trip = {\r\n                tripClients: [],\r\n                startDate: that.dateNow,\r\n                startTime: that.dateNow,\r\n                endDate: that.dateNow,\r\n                endTime: that.dateNow\r\n            };\r\n            that.submitted = false;\r\n            $scope.form.$setPristine();\r\n            $scope.form.$setUntouched();\r\n            $scope.$broadcast('clearClientTripsEvent');\r\n        };\r\n\r\n        this.joinTripDateAndTime = function () {\r\n            that.trip.date = new Date(Date.UTC(\r\n                that.trip.startDate.getFullYear(),\r\n                that.trip.startDate.getMonth(),\r\n                that.trip.startDate.getDate(),\r\n                that.trip.startTime.getHours(),\r\n                that.trip.startTime.getMinutes()));\r\n\r\n            that.trip.arrivalDate = new Date(Date.UTC(\r\n                that.trip.endDate.getFullYear(),\r\n                that.trip.endDate.getMonth(),\r\n                that.trip.endDate.getDate(),\r\n                that.trip.endTime.getHours(),\r\n                that.trip.endTime.getMinutes()));\r\n        };\r\n\r\n        this.openDriversList = function () {\r\n            var modalOptions = {\r\n                animation: true,\r\n                backdrop: 'static',\r\n                size: 'lg',\r\n                component: 'driverList',\r\n                resolve: {\r\n                    drivers: function () {\r\n                        return that.drivers;\r\n                    }\r\n                }\r\n            };\r\n\r\n            var modalInstance = $uibModal.open(modalOptions);\r\n\r\n            modalInstance.result.then(function (drivers) {\r\n                that.drivers = drivers;\r\n            });\r\n        };\r\n\r\n        this.createPDF = function (trip) {\r\n            var tableBody = [\r\n                [\r\n                    { text: 'Имя Фамилия', style: 'tableHeader' },\r\n                    { text: 'Телефон', style: 'tableHeader' },\r\n                    { text: 'Куда', style: 'tableHeader' },\r\n                    { text: 'Откуда', style: 'tableHeader' },\r\n                    { text: 'Стоимость', style: 'tableHeader' },\r\n                    { text: 'Не выходит', style: 'tableHeader' },\r\n                    { text: 'Статус', style: 'tableHeader' }\r\n                ]\r\n            ];\r\n\r\n            for (var i = 0; i < trip.tripClients.length; i++) {\r\n                tableBody.push([\r\n                    trip.tripClients[i].Name,\r\n                    trip.tripClients[i].Phone,\r\n                    trip.tripClients[i].To ? trip.tripClients[i].To : '',\r\n                    trip.tripClients[i].From ? trip.tripClients[i].From : '',\r\n                    trip.tripClients[i].Price.toString(),\r\n                    trip.tripClients[i].IsStayInBus ? 'Да' : '',\r\n                    (trip.tripClients[i].HasMinorChild ? 'С ребенком; ' : '') +\r\n                    (trip.tripClients[i].HasDisability ? 'Инвалид' : '')\r\n                ]);\r\n            }\r\n\r\n            //pdfMake doesnt work with initializing via variable\r\n            var compolsuryExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n            var unexpectedExpenseTable = [[{ text: 'Стоимость', style: 'tableHeader' }, { text: 'Комментарий', style: 'tableHeader' }]];\r\n\r\n            trip.compulsoryExpenses.map((expense) =>\r\n                compolsuryExpenseTable.push([\r\n                     expense.Cost.toString(),\r\n                     expense.Comment\r\n                ]));\r\n\r\n            trip.unexpectedExpenses.map((expense) =>\r\n                unexpectedExpenseTable.push([\r\n                     expense.Cost.toString(),\r\n                     expense.Comment\r\n                ]));\r\n\r\n            var bus = trip.bus != null ? trip.bus.FriendlyName + ' ' + trip.bus.RegistrationNumber + ', ' : '';\r\n            var driver = trip.driver != null ? 'Водитель: ' + trip.driver.FullName : '';\r\n            var fileName = trip.cityFrom.Name.concat(' - ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy/MM/dd\"), '.pdf');\r\n\r\n            var options = {\r\n                fileName: fileName,\r\n                docDefinition: {\r\n                    pageOrientation: 'portrait',\r\n                    fontSize: 12,\r\n                    content: [\r\n                        {\r\n                            text: trip.cityFrom.Name.concat(' --> ', trip.cityTo.Name, ' ', $filter('date')(trip.date, \"yyyy-MM-dd HH:mm\"))\r\n                        },\r\n                        {\r\n                            text: bus + driver\r\n                        },\r\n                        {\r\n                            text: ' '\r\n                        },\r\n                        {\r\n                            columns: [\r\n                            {\r\n                                width: '50%',\r\n                                text: 'Обязательные расходы:'\r\n                            },\r\n                            {\r\n                                width: '50%',\r\n                                text: 'Дополнительные расходы:'\r\n                            }]\r\n                        },\r\n                        {\r\n                            columns: [\r\n                            {\r\n                                width: '50%',\r\n                                table: {\r\n                                    headerRows: 1,\r\n                                    body: compolsuryExpenseTable\r\n                                }\r\n                            },\r\n                            {\r\n                                width: '50%',\r\n                                table: {\r\n                                    headerRows: 1,\r\n                                    body: unexpectedExpenseTable\r\n                                }\r\n                            }]\r\n                        },\r\n                        {\r\n                            text: ' '\r\n                        },\r\n                        {\r\n                            text: 'Касса водителя: ' + that.getDriverCashbox(trip)\r\n                        },\r\n                        {\r\n                            text: ' '\r\n                        },\r\n                        {\r\n                            text: 'Клиенты:'\r\n                        },\r\n                        {\r\n                            table: {\r\n                                headerRows: 1,\r\n                                body: tableBody\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n\r\n            PdfMaker.createAndDownload(options);\r\n        }\r\n\r\n        this.editTrip = function (trip) {\r\n            var startDate = new Date(trip.date);\r\n            var endDate = new Date(trip.arrivalDate);\r\n\r\n            that.isEditMode = true;\r\n            that.trip = trip;\r\n            that.trip.startDate = startDate;\r\n            that.trip.startTime = startDate;\r\n            that.trip.endDate = endDate;\r\n            that.trip.endTime = endDate;\r\n            that.showAddTripForm = true;\r\n        };\r\n\r\n        this.disableEditMode = function () {\r\n            that.showAddTripForm = false;\r\n            that.isEditMode = false;\r\n            that.clearTripModel();\r\n        }\r\n\r\n        this.delete = function (trip) {\r\n            var msg = 'Вы уверены, что хотите удалить маршрут ' + trip.cityFrom.Name + '---->' + trip.cityTo.Name + ', ' + trip.date + '?';\r\n            if (confirm(msg)) {\r\n                Trip.remove({ id: trip.id },\r\n                    function onSuccess(deletedTrip) {\r\n                        var index = that.trips.map(function (e) { return e.id }).indexOf(deletedTrip.id);\r\n                        if (index > -1) {\r\n                            that.trips.splice(index, 1);\r\n                        }\r\n                    },\r\n                    function onError(error) {\r\n                        var errorMessage = 'Маршрут не удален. Ошибка удаления: ' + error.data.Message;\r\n                        alert(errorMessage);\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.addCompolsoryExpense = function (cost, comment) {\r\n            if (cost && comment) {\r\n                that.trip.compulsoryExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                that.compulsoryNewCost = 0;\r\n                that.compulsoryNewComment = '';\r\n            }\r\n        }\r\n\r\n        this.addUnexpectedExpens = function (cost, comment) {\r\n            if (cost && comment) {\r\n                that.trip.unexpectedExpenses.push({ Comment: comment, Cost: cost });\r\n\r\n                that.unexpectedNewCost = 0;\r\n                that.unexpectedNewComment = '';\r\n            }\r\n        }\r\n\r\n        this.getDriverCashbox = function (trip) {\r\n            var expenseSumFun = (acc, expense) => acc + expense.Cost;\r\n\r\n            var compulsoryExpensesSum = trip.compulsoryExpenses.reduce(expenseSumFun, 0);\r\n            var unexpectedExpensesSum = trip.unexpectedExpenses.reduce(expenseSumFun, 0);\r\n\r\n            var incomes = trip.tripClients.reduce((acc, client) => acc + client.Price, 0);\r\n\r\n            return incomes - (compulsoryExpensesSum + unexpectedExpensesSum);\r\n        }\r\n\r\n        $scope.$watchCollection('$ctrl.trip.tripClients', function (newValue, previousValue) {\r\n            if (newValue && newValue.length > 0) {\r\n                $scope.form.$setValidity('isAnyClient', true);\r\n            }\r\n        });\r\n    }]\r\n});","'use strict';\r\n\r\n// Define the `driverList` module\r\nangular.module('driverList', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverList')\r\n  .component('driverList',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-list.template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [\r\n        'Driver', '$scope', '$uibModal', function (Driver, $scope, $uibModal) {\r\n            var that = this;\r\n            that.drivers = [];\r\n            that.addDriverBlockVisible = false;\r\n            that.addNewClass = \"\";\r\n\r\n            that.$onInit = function () {\r\n                that.drivers = that.resolve.drivers;\r\n            };\r\n\r\n            that.closeModal = function () {\r\n                that.close({ $value: that.drivers });\r\n            };\r\n\r\n            that.editDriver = function (driver) {\r\n                $scope.$broadcast('editDriverEvent', { driver: driver });\r\n            };\r\n\r\n            that.showAddDriverBlock = function () {\r\n                that.addDriverBlockVisible = !that.addDriverBlockVisible;\r\n                that.addNewClass = that.addDriverBlockVisible ? \"not-active\" : \"\";\r\n            };\r\n\r\n            that.deleteDriver = function (id) {\r\n                $scope.$broadcast('deleteDriverEvent', { id: id });\r\n            };\r\n        }\r\n      ]\r\n  });","'use strict';\r\n\r\n// Define the `driverCrud` module\r\nangular.module('driverCrud', ['core.driver']);","'use strict';\r\n\r\nangular.module('driverCrud')\r\n  .component('driverCrud',\r\n  {\r\n      templateUrl: 'Content/app/driver-list/driver-crud/driver-crud.template.html',\r\n    controller: [\r\n      'Driver', '$scope', function (Driver, $scope) {\r\n        var that = this;\r\n        this.maxPhotoWidth = 150;\r\n        this.maxPhotoHeight = 150;\r\n        this.driver = {};\r\n\r\n        this.cancel = function () {\r\n          $scope.$parent.$ctrl.showAddDriverBlock();\r\n        };\r\n\r\n        this.save = function (driver) {\r\n          that.driver = driver;\r\n          if (driver.Id > 0) {\r\n            Driver.update({ id: driver.Id },\r\n              driver,\r\n              function (editedDriver) {\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          } else {\r\n            Driver.add(driver,\r\n              function onSuccess(createdDriver) {\r\n                $scope.$parent.$ctrl.drivers.push(createdDriver);\r\n                $scope.$parent.$ctrl.showAddDriverBlock();\r\n                that.driver = {};\r\n              });\r\n          }\r\n        };\r\n\r\n        this.deleteDriver = function (id) {\r\n          Driver.delete({ id: id },\r\n            function onSuccess(deletedDriver) {\r\n              var index = $scope.$parent.$ctrl.drivers.map(function(e) { return e.Id }).indexOf(deletedDriver.Id);\r\n              if (index > -1) {\r\n                $scope.$parent.$ctrl.drivers.splice(index, 1);\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        $scope.$on('deleteDriverEvent',\r\n          function(event, params) {\r\n            that.deleteDriver(params.id);\r\n          }\r\n        );\r\n\r\n        $scope.$on('editDriverEvent',\r\n          function (event, params) {\r\n            that.driver = params.driver;\r\n            $(\"#photoPreview\").attr(\"src\", 'data:image/png;base64,' + that.driver.Photo);\r\n            $scope.$parent.$ctrl.showAddDriverBlock();\r\n          }\r\n        );\r\n\r\n        this.resizeBase64Img = function (base64Img, maxWidth, maxHeight) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var deferred = $.Deferred();\r\n\r\n            $(\"<img/>\").attr(\"src\", base64Img).load( function () {\r\n                var width = this.width;\r\n                var height = this.height;\r\n\r\n                if (width > height) {\r\n                    if (width > maxWidth) {\r\n                        height *= maxWidth / width;\r\n                        width = maxWidth;\r\n                    }\r\n                } else {\r\n                    if (height > maxHeight) {\r\n                        width *= maxHeight / height;\r\n                        height = maxHeight;\r\n                    }\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.drawImage(this, 0, 0, width, height);\r\n                deferred.resolve($(\"<img/>\").attr(\"src\", canvas.toDataURL()));\r\n            });\r\n            return deferred.promise();\r\n        }\r\n\r\n        $(\"#driverPhoto\").change(function () {\r\n            if (this.files && this.files[0]) {\r\n                var fr = new FileReader();\r\n                fr.onload = function (e) {\r\n                    that.resizeBase64Img(e.target.result, that.maxPhotoWidth, that.maxPhotoHeight)\r\n                        .then(function (newImg) {\r\n                            that.driver.Photo = newImg[0].src.replace('data:image/png;base64,', '');\r\n                            console.log(newImg[0].src);\r\n                            $(\"#photoPreview\").attr(\"src\", newImg[0].src);\r\n                        }\r\n                    );\r\n                };\r\n                fr.readAsDataURL(this.files[0]);\r\n            }\r\n        });\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalBus` module\r\nangular.module('modalBus', ['core.bus']);","'use strict';\r\n\r\n// Register `modalBus` component, along with its associated controller and template\r\nangular.\r\n  module('modalBus').\r\n  component('modalBus', {\r\n    templateUrl: 'Content/app/bus-list/modal/modalBus-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.bus = that.resolve.bus;\r\n        if (that.bus && that.bus.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.bus });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `busList` module\r\nangular.module('busList', ['core.bus']);\r\n","'use strict';\r\n\r\n// Register `busList` component, along with its associated controller and template\r\nangular.module('busList')\r\n  .component('busList',\r\n  {\r\n    templateUrl: 'Content/app/bus-list/bus-list.template.html',\r\n    controller: [\r\n      'Bus', '$scope', '$uibModal',\r\n      function (Bus, $scope, $uibModal) {\r\n        var that = this;\r\n        that.buses = Bus.query();\r\n        that.bus = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalBus',\r\n          resolve: {\r\n            bus: function() {\r\n              return that.bus;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addBus = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.add(bus,\r\n              function onSuccess(createdBus) {\r\n                that.buses.push(createdBus);\r\n                that.clearBus();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editBus = function(bus) {\r\n          that.bus = bus;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(bus) {\r\n            that.bus = bus;\r\n            Bus.update({ id: bus.Id },\r\n              bus,\r\n              that.clearBus);\r\n          },\r\n          that.clearBus);\r\n        };\r\n\r\n        that.deleteBus = function(id) {\r\n          Bus.delete({ id: id },\r\n            function onSuccess(deletedBus) {\r\n              var index = that.buses.map(function (e) { return e.Id }).indexOf(deletedBus.Id);\r\n              if (index > -1) {\r\n                that.buses.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clearBus = function () {\r\n            that.bus = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `agentList` module\r\nangular.module('agentList', ['core.agent']);\r\n","'use strict';\r\n\r\n// Register `agentList` component, along with its associated controller and template\r\nangular.module('agentList')\r\n  .component('agentList',\r\n  {\r\n    templateUrl: 'Content/app/agent-list/agent-list.template.html',\r\n    controller: [\r\n      'Agent', '$scope', '$uibModal',\r\n      function (Agent, $scope, $uibModal) {\r\n        var that = this;\r\n\r\n        that.agents = Agent.query();\r\n        that.agent = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalAgent',\r\n          resolve: {\r\n            agent: function() {\r\n              return that.agent;\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n        that.addAgent = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.add(agent,\r\n              function onSuccess(createdAgent) {\r\n                that.agents.push(createdAgent);\r\n                  that.clearAgent();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editAgent = function(agent) {\r\n          that.agent = agent;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(agent) {\r\n            that.agent = agent;\r\n            Agent.update({ id: agent.Id },\r\n              agent,\r\n              that.clearAgent);\r\n          },\r\n          that.clearAgent);\r\n        };\r\n\r\n        that.deleteAgent = function(id) {\r\n          Agent.delete({ id: id },\r\n            function onSuccess(deletedAgent) {\r\n              var index = that.agents.map(function (e) { return e.Id }).indexOf(deletedAgent.Id);\r\n              if (index > -1) {\r\n                that.agents.splice(index, 1);\r\n              }\r\n            },\r\n            function onError(error) {\r\n                var errorMessage = error.data.Message;\r\n                alert(errorMessage);\r\n            });\r\n        };\r\n\r\n        that.clearAgent = function () {\r\n            that.agent = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalAgent` module\r\nangular.module('modalAgent', ['core.agent']);","'use strict';\r\n\r\n// Register `modalAgent` component, along with its associated controller and template\r\nangular.\r\n  module('modalAgent').\r\n  component('modalAgent', {\r\n    templateUrl: 'Content/app/agent-list/modal/modalAgent-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.agent = that.resolve.agent;\r\n        if (that.agent && that.agent.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.agent });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Define the `reports` module\r\nangular.module('reports', []);\r\n","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('agentReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/agent-reports.template.html',\r\n        controller: [\r\n            'Agent', 'AgentReport', '$filter', 'PdfMaker',\r\n            function (Agent, AgentReport, $filter, pdfMaker) {\r\n                var that = this;\r\n\r\n                that.agents = Agent.query();\r\n                that.agent = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n                that.dateFrom = new Date();\r\n                that.dateTo = new Date();\r\n                that.dateOptions = {\r\n                    showWeeks: false,\r\n                    startingDay: 0,\r\n                    maxDate: new Date()\r\n                }\r\n                that.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function (reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по агенту ' + that.agent.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].AgentCompensation;\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n\r\n                    var options = {\r\n                        id: that.agent.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    AgentReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Водитель', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Компенсация за рейс', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.DriverInfo,\r\n                        report.ClientsCount.toString(),\r\n                        report.AgentCompensation.toString()]));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.agent.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Агент: ' + that.agent.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Register `reports` component, along with its associated controller and template\r\nangular.module('reports')\r\n    .component('driverReports',\r\n    {\r\n        templateUrl: 'Content/app/reports/driver-reports.template.html',\r\n        controller: [\r\n            'Driver', 'DriverReport', '$filter', 'PdfMaker',\r\n            function (Driver, DriverReport, $filter, pdfMaker) {\r\n            \tvar that = this;\r\n\t\t\r\n            \tthat.drivers = Driver.query();\r\n            \tthat.driver = {};\r\n                that.dateTimeFormat = \"dd/MM/yyyy\";\r\n            \tthat.dateFrom = new Date();\r\n            \tthat.dateTo = new Date();\r\n            \tthat.dateOptions = {\r\n            \t\tshowWeeks: false,\r\n            \t\tstartingDay: 0,\r\n            \t\tmaxDate: new Date()\r\n            \t}\r\n            \tthat.reports = [];\r\n                that.reportTitle = '';\r\n                that.totalTitle = '';\r\n                that.totalPrice = '';\r\n                that.reportIsShowing = false;\r\n\r\n                that.startDatePopup = {\r\n                    opened: false\r\n                };\r\n                that.startDateOpen = function () {\r\n                    that.startDatePopup.opened = true;\r\n                };\r\n\r\n                that.endDatePopup = {\r\n                    opened: false\r\n                };\r\n                that.endDateOpen = function () {\r\n                    that.endDatePopup.opened = true;\r\n                };\r\n\r\n                that.onGetReports = function(reports) {\r\n                    that.reports = reports;\r\n                    that.reportTitle = 'Отчет по водителю ' + that.driver.FullName;\r\n                    that.totalTitle = 'Итого за период с ' +\r\n                        $filter('date')(that.dateFrom, \"yyyy-MM-dd\") +\r\n                        ' по ' +\r\n                        $filter('date')(that.dateTo, \"yyyy-MM-dd\") +\r\n                        ': ';\r\n\r\n                    that.totalPrice = 0;\r\n                    that.reportIsShowing = true;\r\n                    for (var i = 0; i < reports.length; i++) {\r\n                        that.totalPrice += reports[i].CompulsoryExpenses;\r\n                        if (reports[i].UnexpectedExpenses != null) {\r\n                            that.totalPrice += reports[i].UnexpectedExpenses;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                that.createReport = function () {\r\n                    that.reportTitle = '';\r\n                    that.totalTitle = '';\r\n                    that.totalPrice = '';\r\n                    that.reportIsShowing = false;\r\n\r\n                    var options = {\r\n                        id: that.driver.Id,\r\n                        dateFrom: $filter('date')(that.dateFrom, \"yyyy-MM-dd\"),\r\n                        dateTo: $filter('date')(that.dateTo, \"yyyy-MM-dd\")\r\n                    };\r\n\r\n                    DriverReport.query(options, that.onGetReports);\r\n                };\r\n\r\n                that.createPDF = function (reports) {\r\n                    var tableBody = [[\r\n                        { text: 'Дата Отправления', style: 'tableHeader' },\r\n                        { text: 'Откуда', style: 'tableHeader' },\r\n                        { text: 'Куда', style: 'tableHeader' },\r\n                        { text: 'Автобус', style: 'tableHeader' },\r\n                        { text: 'Кол-во пассажиров', style: 'tableHeader' },\r\n                        { text: 'Постоянные расходы', style: 'tableHeader' },\r\n                        { text: 'Непредвиденные расходы', style: 'tableHeader' }]];\r\n\r\n                    reports.map((report) => tableBody.push([\r\n                        report.TripDate,\r\n                        report.CityFrom,\r\n                        report.CityTo,\r\n                        report.BusInfo,\r\n                        report.ClientsCount ? report.ClientsCount.toString() : '',\r\n                        report.CompulsoryExpenses ? report.CompulsoryExpenses.toString() : '',\r\n                        report.UnexpectedExpenses ? report.UnexpectedExpenses.toString() : '']));\r\n\r\n                    var datePeriod = $filter('date')(that.dateFrom, \"yyyy-MM-dd\").\r\n                        concat(' - ', $filter('date')(that.dateTo, \"yyyy-MM-dd\"));\r\n\r\n                    var options = {\r\n                        fileName: 'Oтчет ' + datePeriod + ' ' + that.driver.FullName,\r\n                        docDefinition: {\r\n                            pageOrientation: 'portrait',\r\n                            fontSize: 12,\r\n                            content: [\r\n                                {\r\n                                    text: 'Водитель: ' + that.driver.FullName\r\n                                },\r\n                                {\r\n                                    text: 'Oтчет за период: ' + datePeriod\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    table: {\r\n                                        headerRows: 1,\r\n                                        body: tableBody\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: ' '\r\n                                },\r\n                                {\r\n                                    text: that.totalTitle + ' ' + that.totalPrice\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    pdfMaker.createAndDownload(options);\r\n                }\r\n            }\r\n        ]\r\n    });","'use strict';\r\n\r\n// Define the `clientList` module\r\nangular.module('clientList', ['core.client']);\r\n","'use strict';\r\n\r\n// Register `clientList` component, along with its associated controller and template\r\nangular.module('clientList')\r\n  .component('clientList',\r\n  {\r\n     templateUrl: 'Content/app/client-list/client-list.template.html',\r\n     controller: [\r\n      'Client', 'Trip', '$scope', '$uibModal',\r\n      function (Client,Trip, $scope, $uibModal) {\r\n        var that = this;\r\n        that.clients = Client.query();\r\n        that.client = {};\r\n\r\n        var modalOptions = {\r\n          animation: true,\r\n          backdrop: 'static',\r\n          component: 'modalClient',\r\n          resolve: {\r\n            client: function() {\r\n              return that.client;\r\n            }\r\n          }\r\n        };\r\n\r\n        that.addClient = function() {\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.add(client,\r\n              function onSuccess(createdClient) {\r\n                that.clients.push(createdClient);\r\n                that.clearClient();\r\n              });\r\n          });\r\n        };\r\n\r\n        that.editClient = function(client) {\r\n          that.client = client;\r\n          var modalInstance = $uibModal.open(modalOptions);\r\n\r\n          modalInstance.result.then(function(client) {\r\n            that.client = client;\r\n            Client.update({ id: client.Id },\r\n              client,\r\n              that.clearClient);\r\n          }, that.clearClient);\r\n        };\r\n\r\n        that.deleteClient = function(id) {\r\n          Client.delete({ id: id },\r\n            function onSuccess(deletedClient) {\r\n              var index = that.clients.map(function (e) { return e.Id }).indexOf(deletedClient.Id);\r\n              if (index > -1) {\r\n                that.clients.splice(index, 1);\r\n              }\r\n            });\r\n        };\r\n\r\n        that.clientInfo = function(client) {\r\n            Trip.query({ clientId: client.Id }, function (clientTrips) {\r\n                var options = {\r\n                    animation: true,\r\n                    backdrop: 'static',\r\n                    component: 'modalClientTrips',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        info: function () {\r\n                            return {\r\n                                client: client,\r\n                                trips: clientTrips\r\n                            };\r\n                        }\r\n                    }\r\n                };\r\n                $uibModal.open(options);\r\n            });\r\n        };\r\n\r\n        that.clearClient = function() {\r\n            that.client = {};\r\n        };\r\n      }\r\n    ]\r\n  });","'use strict';\r\n\r\n// Define the `modalClient` module\r\nangular.module('modalClient', ['core.client']);","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClient', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClient-template.html',\r\n\r\n    bindings: {\r\n      resolve: '<',\r\n      close: '&',\r\n      dismiss: '&'\r\n    },\r\n\r\n    controller: function () {\r\n      var that = this;\r\n\r\n      that.$onInit = function () {\r\n        that.client = that.resolve.client;\r\n        if (that.client && that.client.Id > 0) {\r\n          that.headerTitle = 'Редактирование';\r\n        } else {\r\n          that.headerTitle = 'Создание';\r\n        }\r\n      };\r\n\r\n      that.ok = function () {\r\n          that.close({ $value: that.client });\r\n      };\r\n\r\n      that.cancel = function () {\r\n        that.dismiss({ $value: 'cancel' });\r\n      };\r\n    }\r\n  });","'use strict';\r\n\r\n// Register `modalClient` component, along with its associated controller and template\r\nangular.\r\n  module('modalClient').\r\n  component('modalClientTrips', {\r\n      templateUrl: 'Content/app/client-list/modal/modalClientTrips-template.html',\r\n      bindings: {\r\n          resolve: '<',\r\n          close: '&',\r\n          dismiss: '&'\r\n      },\r\n      controller: [ '$filter',\r\n          function ($filter) {\r\n          var that = this;\r\n\r\n          that.trips = {};\r\n          that.client = {};\r\n          that.headerTitle = \"\";\r\n\r\n          that.$onInit = function () {\r\n              that.trips = that.resolve.info.trips;\r\n              that.client = that.resolve.info.client;\r\n              that.headerTitle = \"Информация о поездках клиента \" + that.client.Name;\r\n          };\r\n\r\n          that.getClienPrice = function(clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].Price;\r\n          };\r\n\r\n          that.getClienAdditionalExpenses = function (clientTrips) {\r\n              var found = $filter('filter')(clientTrips, { ClientId: that.client.Id }, true);\r\n              return found[0].AdditionalExpenses;\r\n          };\r\n\r\n          that.cancel = function () {\r\n              that.dismiss({ $value: 'cancel' });\r\n          };\r\n      }]\r\n  });","'use strict';\r\n\r\nangular.module('citiesList', ['core.city', 'google.places']);","'use strict';\r\n\r\nangular.\r\n  module('citiesList').\r\n  component('citiesList', {\r\n      templateUrl: 'Content/app/cities-list/cities-list.template.html',\r\n      controller: ['City', '$scope', function CitiesListController(City, $scope) {\r\n          var that = this;\r\n\r\n          this.cities = City.query();\r\n          this.showAddCityForm = false;\r\n\r\n          this.showAddForm = function () {\r\n              that.showAddCityForm = !that.showAddCityForm;\r\n          }\r\n\r\n          $scope.autocompleteOptions = {\r\n              componentRestrictions: { country: 'ukr' },\r\n              types: ['(cities)']\r\n          }\r\n\r\n          this.saveCity = function (place) {\r\n              that.showAddCityForm = false;\r\n\r\n              City.add({ name: place.name }, function onSuccess(createdBus) {\r\n                 that.cities = City.query();\r\n                 that.choosedPlace = '';\r\n              });\r\n          }\r\n\r\n          this.setCityFromAutocomplete = function(err, place){\r\n              that.city.name = place;\r\n          }\r\n      }]\r\n  });\r\n","'use strict';\r\n\r\n// Define the `pdfMaker` module\r\nangular.module('pdfMaker', []);","'use strict';\r\n\r\n// Register `pdfMaker` component, along with its associated controller and template\r\nangular.\r\n    module('pdfMaker').\r\n    factory('PdfMaker', function() {\r\n        return {\r\n            createAndDownload: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).download(options.fileName ? options.fileName : 'file.pdf');\r\n            },\r\n            createAndOpen: function(options) {\r\n                pdfMake.createPdf(options.docDefinition).open();\r\n            }\r\n        }\r\n    });","'use strict';\r\n\r\nangular.module('signUp', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n  module('signUp').\r\n  component('signUp', {\r\n      templateUrl: 'Content/app/authentication/signup/signup.template.html',\r\n      controller: ['AuthService', '$location', function (authService, $location) {\r\n          var that = this;\r\n\r\n          this.savedSuccessfully = false;\r\n          this.message = \"\";\r\n\r\n          this.registration = {\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\"\r\n          };\r\n\r\n          this.signUp = function (formValid) {\r\n              if (formValid) {\r\n                  authService.saveRegistration(this.registration).then(function (response) {\r\n                      that.savedSuccessfully = true;\r\n                      that.message = \"User has been registered successfully, you will be redirected to login page in 2 seconds.\";\r\n\r\n                      $location.path('/login');\r\n                  },\r\n                  function (response) {\r\n                      var errors = [];\r\n                      for (var key in response.data.ModelState) {\r\n                          for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                              errors.push(response.data.ModelState[key][i]);\r\n                          }\r\n                      }\r\n\r\n                      that.message = errors.join('\\n');\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      ]\r\n  });\r\n","'use strict';\r\n\r\nangular.module('signIn', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('signIn').\r\n    component('signIn',\r\n    {\r\n        templateUrl: 'Content/app/authentication/signin/signin.template.html',\r\n        controller: ['AuthService', '$location', function(authService, $location) {\r\n            var that = this;\r\n\r\n            if (authService.authData.isAuth) {\r\n                authService.logOut();\r\n                $location.path('/login');\r\n            }\r\n\r\n            this.loginData={\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n            this.message=\"\";\r\n\r\n            this.login = function() {\r\n                authService.login(this.loginData).then(function(response) {\r\n                    $location.path('/trips');\r\n                },\r\n                function(err) {\r\n                    that.message=err.data.error_description;\r\n                });\r\n            };\r\n        }\r\n    ]\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('navBar', ['core.authentication']);","'use strict';\r\n\r\nangular.\r\n    module('navBar').\r\n    component('navbar',\r\n    {\r\n        templateUrl: 'Content/app/navbar/navbar.template.html',\r\n        controller: ['AuthService', 'authConstants', function (authService, authConstants) {\r\n            var that = this;\r\n\r\n            this.ClientAccessRoles = authConstants.ClientAccessRoles;\r\n            this.BusesAccessRoles = authConstants.BussesAccessRoles;\r\n\r\n            this.updateAuthData = function () {\r\n                that.isAuth = authService.authData.isAuth;\r\n                that.currentRole = authService.authData.role;\r\n            }\r\n\r\n            authService.registerObserverCallback(that.updateAuthData);\r\n\r\n            this.isAuth = authService.authData.isAuth;\r\n            this.currentRole = authService.authData.role;\r\n\r\n            this.hasRole = function (allowedRoles) {\r\n                if (that.isAuth) {\r\n                    if (!allowedRoles) {\r\n                        return that.currentRole == 'Admin';\r\n                    }\r\n\r\n                    return allowedRoles.indexOf(that.currentRole) != -1 || that.currentRole == 'Admin';\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }]\r\n    });\r\n\r\n","angular.module('VektorApp')\r\n    .directive(\"compareTo\",\r\n        function() {\r\n            return {\r\n                require: \"ngModel\",\r\n                scope: {\r\n                    otherModelValue: \"=compareTo\"\r\n                },\r\n                link: function(scope, element, attributes, ngModel) {\r\n\r\n                    ngModel.$validators.compareTo=function(modelValue) {\r\n                        return modelValue == scope.otherModelValue;\r\n                    };\r\n\r\n                    scope.$watch(\"otherModelValue\",\r\n                        function() {\r\n                            ngModel.$validate();\r\n                        });\r\n                }\r\n            };\r\n        });","'use strict';\r\n\r\nangular.module('manageAccount', ['core.manageAccount', 'core.authentication']);","'use strict';\r\n\r\nangular.module('manageAccount').component('manageAccount', {\r\n    templateUrl: 'Content/app/manage-account/manage-account.template.html',\r\n    controller: ['ManageAccountService', 'AuthService', function (manageAccountService, authService) {\r\n        var that = this;\r\n\r\n        this.message = \"\";\r\n        this.updateSuccefull = null;\r\n        this.accountData = {};\r\n\r\n        manageAccountService.getAccountInfo().then(function (response) {\r\n            that.accountData.email = response.Email;\r\n            that.accountData.name = response.Name;\r\n        });\r\n\r\n        this.update = function (formValid) {\r\n            if (formValid) {\r\n                manageAccountService.updateAccount(this.accountData)\r\n                    .then(function () {\r\n                        that.message = \"Account has been successfully updated\";\r\n                        that.updateSuccefull = true;\r\n\r\n                        authService.UpdateAuthData(that.accountData.email, that.accounData.name);\r\n                    },\r\n                    function (response) {\r\n                        var errors = [];\r\n                        for (var key in response.data.ModelState) {\r\n                            for (var i = 0; i < response.data.ModelState[key].length; i++) {\r\n                                errors.push(response.data.ModelState[key][i]);\r\n                            }\r\n                        }\r\n\r\n                        that.message = errors.join('\\n');\r\n                        that.updateSuccefull = false;\r\n                    });\r\n            }\r\n        }\r\n    }]\r\n});"]}